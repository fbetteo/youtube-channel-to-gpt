Video Title: How to Actually Build Agents with DeepSeek R1 in n8n (Without OpenRouter)
Video ID: tjaD65OCoE8
URL: https://www.youtube.com/watch?v=tjaD65OCoE8
View Count: 62,555

[00:00] so we're going to send off this
[00:01] three-part message to our deep seek
[00:03] planning agent it's going to be taking
[00:04] that input right now it's going to be
[00:06] constructing a step-by-step plan of
[00:07] instructions to hand off to the tools
[00:09] agent the tools agent has no prompting
[00:11] all it's going to get is the actual plan
[00:13] that the Deep seek R1 agent made we can
[00:15] click into here and we can see what we
[00:17] got um it created a step-by-step
[00:18] instructions there's three tasks clearly
[00:20] outlined the first one is to create a
[00:21] calendar event second one is to email up
[00:23] a digital to check in on the project and
[00:25] the third one is to email Nate herk to
[00:27] confirm lunch tomorrow and as you can
[00:29] see everything that the tools agent
[00:30] needs is going to be given from the deep
[00:32] SE planning agent which is really cool
[00:34] we don't have a system prompt as you can
[00:35] see and it already went up and created
[00:37] that calendar event and sent both those
[00:39] email tools so let's dive into how is
[00:41] the right way to use deep seek R1 as a
[00:43] planning agent to feed into your tools
[00:45] agents So lately there's been a ton of
[00:47] hype around deep seeks new reasoning
[00:48] model deep seek R1 and this is because
[00:51] of the cost and performance which it's
[00:53] pretty much 96% cheaper than using open
[00:55] AI a one reasoning model as well as
[00:58] being able to perform just as well as it
[01:00] or even better but when it actually
[01:01] comes to using this model in nadn for
[01:03] your AI agents you probably ran into a
[01:05] few of these issues which would be
[01:07] connecting through open router and it's
[01:08] spinning forever taking 15 20 minutes or
[01:11] you're connecting it to tools and it's
[01:12] going to tell you that this model
[01:13] doesn't support tool calling or function
[01:15] calling or it's going to spin Forever on
[01:17] different tools and call them
[01:18] unlimitedly here's an example this
[01:20] morning where I asked it to send an
[01:21] email just saying what's up and it sent
[01:22] through like 70 and I had to stop it
[01:24] because it was just looping back and
[01:25] forth and I think it was going to be an
[01:27] endless loop anyways there's no doubt
[01:29] that deep seek r1's reasoning ability is
[01:31] next level so what I'm going to show you
[01:32] guys today is how I plan to actually use
[01:35] them to support building agents and
[01:37] having them call different tools also
[01:38] going to show you how to connect to deep
[01:39] seek R1 as a chat model without going
[01:41] through open router so hopefully it can
[01:43] fix any of those issues you're having
[01:45] with um you know 15-minute calls so the
[01:47] first issue like I said you guys may be
[01:48] experiencing is calling it through open
[01:50] router where we are setting up a
[01:52] credential with the base URL of open
[01:53] router.
[01:55] aapi V1 we enter in the model name
[01:58] that's given to us in open router and we
[02:00] actually go to chat to this thing if I
[02:01] can type hello um that's going to work
[02:04] for now um the issue is it's just going
[02:06] to be spinning forever and I mean it is
[02:08] a reasoning model so it will likely take
[02:09] a little bit longer than something like
[02:11] a regular gbt 40 but what I've been
[02:14] seeing is that this is just spinning and
[02:15] taking way way too long so what you can
[02:18] do is actually connect to the base URL
[02:20] straight from Deep seek so in here as
[02:22] you can see um I'm connecting to deep
[02:23] seek Reasoner which is the Deep seek R1
[02:25] model and what we're doing for the base
[02:26] URL is connecting to api. Deep seek.com
[02:29] / V1 rather than going through open
[02:32] router to actually hit this model if you
[02:34] want to connect to deep seek like this
[02:35] what you're going to do is go to deep
[02:36] seek.com you're going to hit API
[02:38] platform once you get there it's going
[02:39] to pull up your dashboard as you can see
[02:40] I put in two bucks like last week um so
[02:43] far with um V3 I've used 880,000 tokens
[02:45] with R1 I've used 14,000 tokens and it's
[02:47] only cost me a little over 3 cents then
[02:50] you're going to go to API Keys you're
[02:51] going to create a new key and this will
[02:53] be used to set up our credential as well
[02:54] as the basee URL which we will find if
[02:56] we click right here on docs so we
[02:58] clicked on docs as you can see right
[02:59] here we have have a base URL and so this
[03:01] is what we're going to grab and put that
[03:02] in nadn as our base URL and then finally
[03:05] we have the option to choose a model of
[03:06] course we can choose deep seek D chat if
[03:09] we want V3 or deep seek D Reasoner if we
[03:12] want to get the newly released reasoning
[03:14] model which is deep seek R1 so back in N
[03:16] end looking at the credentials this is
[03:17] where you're going to put that API key
[03:18] you just generated this is where you're
[03:20] going to put that base URL that we just
[03:21] looked at in um deep seek docs and then
[03:23] finally the model right here will type
[03:25] in deep seek D Reasoner to access R1 so
[03:28] what we're going to do now is connect to
[03:29] this chat model and if we
[03:32] say hello you'll see how much quicker
[03:34] that we get a response back because we
[03:36] actually get a response um it's going to
[03:38] say why did the Scarecrow win an award
[03:40] because he was outstanding in his field
[03:42] another just ask so the reason it said
[03:44] that is just because in the system
[03:45] message it says you're an a helpful
[03:46] assistant who tells jokes so that's why
[03:49] it responded to us with a joke right
[03:51] away and similarly if we want to connect
[03:52] to deep seek V3 we can do the same thing
[03:54] use that exact same credential already
[03:56] all we have to do is change the model
[03:57] from Deep seek D Reasoner to deep seek
[03:59] chat we can come in here say hello and
[04:02] it should respond to us again with
[04:03] another joke because um hello there why
[04:06] don't scientists trust Adams because
[04:07] they make up everything what's up so
[04:08] it's because of the system prompt once
[04:10] again but then of course the question
[04:11] becomes how do we actually use this for
[04:12] Tool calling so if we connect um send
[04:15] email tool and we just say can you send
[04:18] an email to Nate
[04:21] asking um what's up so this is not going
[04:24] to work as you can see deep seek
[04:26] Reasoner does not support function
[04:27] calling um bad request please check your
[04:29] PR parameters so that's the issue
[04:30] everyone's seeing obviously it's
[04:32] frustrating because with such a powerful
[04:34] model and such a cheap model we want to
[04:35] be able to use this for our tool calling
[04:38] and for our AI agents that we're
[04:39] building um but what we want to do is
[04:41] think of this reasoning model as a
[04:43] really good planner it's going to create
[04:45] the steps and it's going to hand that
[04:46] off to another agent that can actually
[04:48] take action using tools so it's going to
[04:50] be a really simple example where we just
[04:51] have email and calendar but as you can
[04:53] see we have a deep seek planning agent
[04:55] that is hooked up to deep seek R1 it's
[04:57] going to receive input from us the human
[04:59] it's going to take that input construct
[05:01] a really step-by-step clear plan to feed
[05:03] over to the tools agent and um what
[05:05] we're going to do is in the tools agent
[05:06] we don't even have a prompt so it's
[05:07] going to just be relying on deep seeks
[05:09] planning ability to actually take action
[05:12] okay so let's give this thing a try I'm
[05:13] going to say I want to create a few
[05:14] calendar events the first one is with
[05:16] Nate herk 88 for tomorrow to have lunch
[05:18] at 12: p.m. then I want to send an email
[05:20] to up at digital to check on a project
[05:22] we've been working on finally I need you
[05:24] to send an email to Nate herk to confirm
[05:26] our lunch tomorrow at pole make sure to
[05:28] sign off emails as Nate so right now
[05:30] it's taking that input and it just
[05:31] created a list of instructions for the
[05:33] tools agent we'll take a look at those
[05:35] and as you can see it already created
[05:36] the event and sent two emails so
[05:38] hopefully those are correct but remember
[05:39] this prompt or sorry this agent is using
[05:41] GPT 40 and it's or sorry 40 mini and
[05:44] it's has no prompt inside of it so um
[05:47] first let's take a look at what it
[05:48] responded to us with I've successfully
[05:50] completed the requested tasks the event
[05:52] was created it's titled lunch with Nate
[05:55] um it's tomorrow January 25th at 12:00
[05:56] p.m. local time at Chipotle reminder 30
[05:59] minutes minutes before okay we can also
[06:00] view the event if we click on the link
[06:02] email has been sent to up a digital and
[06:04] a confirmation email was also sent to um
[06:07] Nate herk confirming lunch tomorrow at
[06:09] noon so let's take a look at what
[06:11] happened real quick as you can see the
[06:13] Deep seek agent got our prompt and then
[06:15] it output this prompt for personal
[06:17] assistant create calendar event for
[06:18] lunch tomorrow it gave the date gave the
[06:20] location um added participants it then
[06:24] um gave more details and set a reminder
[06:26] then the next step task number two was
[06:29] to send an email to up a digital it
[06:31] created a subject and a body and then it
[06:33] signed off as Nate and then finally it
[06:35] created a subject and a body for the
[06:37] final task which was to send a
[06:39] confirmation email to Nate herk about
[06:40] lunch tomorrow as far as the actual
[06:43] prompts we give this thing basically
[06:44] just said you're an AI agent responsible
[06:45] for creating clear and actionable
[06:47] prompts that guide a personal assistant
[06:48] in completing assigned tasks your
[06:50] context is to not use external tools
[06:53] because that would have it mess up of
[06:54] course um all you need to do is just
[06:56] focus on receiving the input and then
[06:59] understand the tasks creating a
[07:00] step-by-step list of instructions and
[07:02] handing off all the information it needs
[07:04] the next agent needs to it so yeah real
[07:06] quick wanted to say if you want to dive
[07:07] into this prompt a little more in depth
[07:09] or you want to play around with this
[07:10] agent that I made as well as the next
[07:12] one we're going to be looking at which
[07:13] is using an HTTP request then you can
[07:15] download this workflow completely for
[07:17] free by joining my free school Community
[07:19] the link for that is down in the
[07:20] description once you get in the free
[07:21] school Community you'll click on YouTube
[07:23] resources click on the post associated
[07:24] with this video and then you can
[07:26] download the workflow right here and
[07:27] import it into your nadn environment
[07:29] finally if you're looking to take your
[07:30] nidn and a automation skills a little
[07:32] bit farther and you'd like a more
[07:33] Hands-On approach then please check out
[07:35] my paid Community the link for that's
[07:36] also down in the description got a great
[07:38] community of members who are also
[07:40] learning Inn sharing their challenges
[07:41] sharing resources great classroom
[07:43] section with different Deep dive topics
[07:45] as well as a calendar with five live
[07:46] calls per week to make sure you're
[07:48] always getting questions answered and
[07:49] never getting stuck so I'd love to see
[07:51] you guys in this community anyways let's
[07:53] take a look at the tools agent real
[07:54] quick and see what actually happened so
[07:56] as we remember it's just getting the
[07:57] chat input from the previous um deep
[08:00] seek planner agent so this is all it's
[08:02] getting which is as you can see it's
[08:03] outlined very clear you have one task
[08:05] which is calendar event for lunch
[08:06] tomorrow and then it's going to give
[08:07] some specifics second task is to send an
[08:09] email to upid digital once again it
[08:10] gives a subject in a body and then
[08:12] finally the third task is to send a
[08:14] confirmation email again subject body
[08:16] and then final notes so that's all that
[08:18] the tools agent is actually getting like
[08:20] I said there's no system prompt so you
[08:22] know that the plan that it's actually
[08:23] getting from the deeps agent is pretty
[08:25] good and now let's take a look at um the
[08:27] actual tool calls so the first one was
[08:29] event as you can see it made it at noon
[08:31] and it called it lunch with Nate we have
[08:34] two emails being sent so the first one
[08:36] was to up a digital project check-in and
[08:38] it says I wanted to check in on the
[08:40] status of the project we've been working
[08:41] on blah blah blah and then the second
[08:43] one is um confirming lunch tomorrow with
[08:45] Nate just confirming our lunch at 12:00
[08:47] at Chipotle let me know if anything
[08:48] changes and here's that second email
[08:50] which is checking in the status of the
[08:51] project and then a calendar invite for
[08:53] noon for lunch well it's actually 1:
[08:55] p.m. because I'm in Central Time right
[08:57] now normally I'm in mountain standard
[08:58] time so my agent didn't think I'm in
[08:59] Mountain soon in time but anyways um it
[09:01] successfully created that calendar event
[09:03] with Nate herkelman as you can see um
[09:05] lunch for lunch with Nate so I hope this
[09:07] architecture makes sense and I hope you
[09:08] understand that if you have something
[09:10] way more complex the Deep seek planner
[09:11] agent was did a really really good job
[09:13] at the way that it broke down the tasks
[09:15] as you can see it pretty much you know
[09:17] said here's here's step one here's all
[09:18] the information you need for task one
[09:20] here's task two here's everything you
[09:21] need to do task two and then it's
[09:23] feeding that into the tools agent so
[09:25] that the tools agent can use um its
[09:27] model that it needs to use and the tools
[09:28] that it has access to to actually do
[09:30] that kind of um stuff and so this is
[09:32] going to be a very similar process if we
[09:33] actually want to do it with an HTTP
[09:35] request rather than an agent um so all
[09:37] we're doing is we're using an HTTP
[09:38] request to connect to um the Deep seek
[09:42] reasoning model as you can see and if
[09:43] you want to understand how to do this
[09:45] step by step um the previous video I
[09:47] made I'll I'll link it in the
[09:48] description and tag it right here I'll
[09:50] show you guys step by step how to do
[09:51] this but what we're doing is we're
[09:52] setting up the system role as you're a
[09:54] helpful assistant who is tasked with
[09:55] creating a step-by-step plan of action
[09:57] for a personal assistant and then we're
[09:58] just feeding in the chat input as the
[10:00] actual user message so as you can see we
[10:02] already got that back we can see we've
[10:04] got step-by-step plan of action um
[10:05] here's all the information that's coming
[10:07] out and um now if we went into the tools
[10:09] agent what we're feeding it is once
[10:11] again that step-by-step plan of action
[10:12] so as you can see it's very similar
[10:14] there's a few differences as far as um
[10:16] the structure and probably in the actual
[10:18] body messages and stuff like that but
[10:20] this is basic basically the idea that
[10:22] we're going to be using deeps R1
[10:24] reasoning as a planning um planning tool
[10:27] to basically take the input and make it
[10:29] just more detailed so that we can feed
[10:30] that right into an actual agent that has
[10:32] access to tools so I hope that all made
[10:34] sense um I just wanted to make a quick
[10:35] one about these different methods that I
[10:36] plan on using in order to actually have
[10:39] deep seek R1 reasoning model involved in
[10:41] my agentic functions which I think will
[10:43] be super cool you know this was a really
[10:44] simple example but as we start to add on
[10:46] more tools and a bit more of a complex
[10:48] use case I think that having a step to
[10:50] actually plan out some of this stuff to
[10:51] feed into your agents is going to be
[10:53] super super beneficial and super cool so
[10:55] that's going to be it for this one if
[10:56] you guys enjoyed the video please um
[10:58] give it a like let me know what else you
[10:59] want to see with deep seek in the
[11:01] comments and as always really appreciate
[11:02] you guys making it to the end of this
[11:04] video I will see you in the next one