Video Title: Untitled_Video
Video ID: bTF3tACqPRU
URL: https://www.youtube.com/watch?v=bTF3tACqPRU
View Count: 0

[00:00] Today I'm going to be showing you guys
[00:01] how you can set up an error workflow in
[00:02] Naden so that you can log all of your
[00:04] errors as well as get notified every
[00:06] time one of your active workflows fails.
[00:08] The cool part is all we have to do is
[00:09] set up one error workflow and then we
[00:11] can link that one to all of our
[00:12] different active workflows. So I think
[00:14] you'll be pretty shocked how quick and
[00:15] easy this is to get set up. So let's get
[00:17] into the video. All right, so here's the
[00:18] workflow that we're going to be using
[00:19] today as our test workflow that we're
[00:21] going to purposely make error and then
[00:23] we're going to capture those errors in a
[00:24] different one and feed that into a
[00:26] Google sheet template as well as some
[00:27] sort of Slack or email notification. And
[00:30] if you haven't seen my recent video on
[00:31] using this new Think tool in Niten, then
[00:32] I'll tag it right up here. Anyways, in
[00:34] order for a workflow to trigger an error
[00:36] workflow, it has to be active. So, first
[00:38] things first, I'm going to make this
[00:39] workflow active. There we go. This one
[00:40] has been activated. And now what I'm
[00:42] going to do is go back out to my NAND.
[00:44] We're going to create a new workflow.
[00:45] And this is going to be our error logger
[00:47] workflow. Okay, so you guys are going to
[00:49] be pretty surprised by how simple this
[00:50] workflow is going to be. I'm going to
[00:51] add a first step and I'm going to type
[00:53] an error. And as you can see, there's an
[00:54] error trigger which says triggers the
[00:56] workflow when another workflow has an
[00:58] error. So we're going to bring this into
[00:59] the workflow. We don't have to do
[01:00] anything to configure it. You can see
[01:02] that what we could do is we could fetch
[01:03] a test event just to see what
[01:05] information could come back. But what
[01:07] we're going to do is just trigger a live
[01:08] one because we're going to get a lot
[01:09] more information than what we're seeing
[01:11] right here. So, quickly pay attention to
[01:13] the fact that I named this workflow
[01:15] error logger. I'm going to go back into
[01:16] my Ultimate Assistant Active Workflow.
[01:19] Up in the top right, I'm going to click
[01:20] on these three dots, go down to
[01:21] settings, and then right here, there's a
[01:23] setting called error workflow, which as
[01:25] you can see, a second workflow to run if
[01:26] the current one fails. The second
[01:28] workflow should always start with an
[01:30] error trigger. And as you saw, we just
[01:32] set that up. So, all I have to do is
[01:33] choose a workflow. I'm going to type an
[01:35] error, and we called it error logger.
[01:37] So, I'm going to choose that one. Hit
[01:38] save. And now, these two workflows are
[01:40] basically linked. so that if this
[01:42] workflow ever has an error that stops
[01:44] the workflow, it's going to be captured
[01:46] in our second one over here with the
[01:48] information. So, let's see a quick
[01:49] example of that. Okay, so this workflow
[01:51] is active. It has a telegram trigger as
[01:53] you can see. So, I'm going to drag in my
[01:54] telegram and I'm just going to say,
[01:56] "Hey." And what's going to happen is
[01:57] obviously we're going to get a response
[01:59] back because this workflow is active and
[02:01] it says, "How can I assist you today?"
[02:03] Now, what I'm going to do is I'm just
[02:04] going to get rid of the chat model. So,
[02:06] this agent essentially has no brain. I'm
[02:08] going to hit save. We're going to open
[02:09] up Telegram again and we're going to
[02:11] say, "Hey." And now we should see that
[02:13] we're not going to get any response back
[02:14] in Telegram. If we go into the
[02:16] executions of this ultimate assistant,
[02:18] you can see that we just got an error
[02:19] right now. And that was when we just
[02:21] sent off the query that said, "Hey," and
[02:22] it errored because the chat model wasn't
[02:24] connected. So, if we hop into our error
[02:26] logger workflow and click on the
[02:28] executions, we should see that we just
[02:29] had a new execution. And if we click
[02:32] into it, we'll see all the information
[02:33] that came through. So what it's going to
[02:35] tell us is the ID of the execution, the
[02:37] URL of the workflow, the name of the
[02:39] workflow, and then we'll also see what
[02:41] node errored and the error message. So
[02:43] here under the object node, we can see
[02:45] different parameters. We can see what's
[02:46] kind of how the node's configured. We
[02:48] can see the prompt even. But what we're
[02:50] interested in is down here we have the
[02:51] name, which is ultimate assistant, and
[02:53] then we have the message, which was a
[02:54] chat model subnode must be connected and
[02:57] enabled. So anyways, we have our sample
[02:59] data. I'm going to hit copy to editor,
[03:01] which just brings in that execution into
[03:03] here so we can play with it. And now
[03:05] what I want to do is map up the logic of
[03:07] first of all logging it in a Google
[03:09] sheet. So here's the Google sheet
[03:10] template I'm going to be using. We're
[03:12] going to be putting in a timestamp, a
[03:13] workflow name, the URL of the workflow,
[03:15] the node that errored, and the error
[03:17] message. If you guys want to get this
[03:18] template, you can do so by joining my
[03:20] free school community. The link for that
[03:21] down in the description. Once you join
[03:23] the community, all you have to do is
[03:24] search for the title of the video up
[03:25] top, or you can click on YouTube
[03:27] resources, and you'll find the post. And
[03:28] then in the post is where you'll see the
[03:30] link to the Google sheet template.
[03:32] Anyways, now that we have this set up,
[03:33] all we have to do is go back into our
[03:35] error logger. We're going to add a new
[03:36] node after the trigger. And I'm going to
[03:38] grab a sheets node. What we want to do
[03:40] is append a row in sheets. Um I'm just
[03:42] going to call this log error. Make sure
[03:44] I choose the right credential. And then
[03:45] I'm going to choose the sheet which is
[03:47] called error logs. And so now we can see
[03:48] we have the values we need to send over
[03:50] to these different columns. So for time
[03:52] stamp, all I'm going to do is I'm
[03:53] actually going to make an expression.
[03:55] And I'm just going to do dollar sign
[03:56] now. And this is basically just going to
[03:58] send over to Google Sheets the current
[03:59] time whenever this workflow gets
[04:01] triggered. And if you don't like the way
[04:02] this is coming through, you can play
[04:03] around with format after dollar sign
[04:06] now. And then you'll be able to
[04:07] configure it a little bit more. And you
[04:08] can also ask chat to help you out with
[04:10] this JavaScript function. And feel free
[04:12] to copy this if you want. I'm pulling in
[04:14] the full year, month, day, and then the
[04:15] time. Okay, cool. Then we're just pretty
[04:17] much going to drag and drop the other
[04:19] information we need. So the first thing
[04:20] is the workflow name. And to get to
[04:22] that, I'm going to close out of the
[04:23] execution. And then we'll see the
[04:24] workflow. And we can pull in the name
[04:25] right there, which is ultimate personal
[04:27] assistant. For the URL, I'm going to
[04:29] open back up execution and grab the URL
[04:31] from here. For node, all I have to do is
[04:34] look within the node object. We're going
[04:35] to scroll down until we see the name of
[04:37] the node, which is right here, the
[04:39] ultimate assistant. And then finally,
[04:41] the error message, which should be right
[04:42] under that name right here. Drag that
[04:44] in, which says a chat model sub node
[04:46] must be connected and enabled. So, now
[04:48] that we're good to go here, I'm going to
[04:49] test step and then we'll check our
[04:50] Google sheet and make sure that that
[04:51] stuff comes through
[04:53] correctly. And as you can see, it just
[04:54] got populated and we have the URL right
[04:56] here, which if we clicked into, it would
[04:58] take us to that main ultimate personal
[05:00] assistant workflow. As you can see, when
[05:02] this loads up and it takes us to the
[05:03] execution that actually failed as well,
[05:05] so we could sort of debug. So, now we
[05:07] have an error trigger that will update a
[05:09] Google sheet and log the information.
[05:11] But maybe we also want to get notified
[05:12] when there's an error. So, I'm just
[05:14] going to drag this off right below and
[05:15] I'm going to grab the Slack node and I'm
[05:18] going to choose to send a message right
[05:20] here. And then we'll just configure what
[05:21] we want to send over. Okay. So, we're
[05:23] going to be sending a message to a
[05:24] channel. I'm going to choose the channel
[05:26] all awesome AI stuff. And then we just
[05:28] need to configure what the actual
[05:30] message is going to say. So, I'm going
[05:31] to change this to an expression. Make
[05:32] this full screen. And let's fill this
[05:35] out. So, pretty much just customize this
[05:37] however you want. Let's say I want to
[05:38] start off with workflow error. and we
[05:41] will put the name of the workflow. So
[05:43] I'll just close out of here. Throw that
[05:45] in there. So now it's going to come
[05:46] through saying workflow error ultimate
[05:48] personal assistant. And then I'm going
[05:49] to say like what node errored at what
[05:51] time and what the error message was. So
[05:53] first let's grab the name of the node.
[05:55] Um if I just have to scroll down to name
[05:57] right here. So Ultimate Assistant
[06:00] errored at and I'm going to do that same
[06:02] dollar sign now function. So it says
[06:05] Ultimate Assistant errored at
[06:07] 2025417. And then I'm just going to go
[06:09] down and say the error message was and
[06:14] we're just going to drag in the error
[06:16] message. There we go. And then finally,
[06:19] we'll just provide a link to the
[06:20] workflow. So see this execution here.
[06:24] And then we'll drag in the link which is
[06:26] all the way up top. And we should be
[06:28] good to go. And then if you want to make
[06:30] sure you're not sending over a little
[06:31] message at the bottom that says this was
[06:32] sent from NN, you're going to add an
[06:34] option. You're going to click on include
[06:35] link to workflow. And then you're going
[06:37] to turn that off. And now we hit test up
[06:38] and we hop into Slack and we can see we
[06:40] got workfl error ultimate personal
[06:41] assistant. We have all this information.
[06:43] We can click into this link and we don't
[06:45] have this little message here that says
[06:46] automated with this NN workflow. So
[06:48] maybe you could just set up a channel
[06:50] dedicated towards error logging,
[06:51] whatever it is. Okay, so let's save this
[06:53] real quick and um let's just do another
[06:56] sort of like example. Um one thing to
[06:58] keep in mind is there's a difference
[06:59] between the workflow actually erroring
[07:01] out and going red and just something not
[07:04] working correctly. And I'll show you
[07:05] exactly what I meant by that. So this
[07:07] example actually triggered the error
[07:09] workflow because the execution on this
[07:11] side is red and it shows an error. But
[07:13] what happens is for example with our
[07:15] Tavly tool right here, I have no
[07:16] authentication pulled up. So this tool
[07:18] is not going to work. But if I come into
[07:20] Telegram and say search the web for
[07:22] Apples, it's going to work. This this
[07:25] workflow is going to go green even
[07:26] though this tool is not going to work.
[07:28] And we'll see exactly why. So as you can
[07:29] see, it says I'm currently unable to
[07:31] search the web due to a connection
[07:32] error. So, if we go into the execution,
[07:34] we can see that this thing went green
[07:36] even though it didn't work the way we
[07:37] wanted to. But what happened is the tool
[07:39] came back and it was green and it
[07:41] basically just didn't work because our
[07:42] authentication wasn't correct. And then
[07:44] you can even see in the think node, it
[07:46] basically said the web search function
[07:47] is encountering an authentication error.
[07:49] I need to let the user know the search
[07:50] isn't currently available and offer
[07:51] alternative ways to help blah blah blah.
[07:53] But all of these nodes actually went
[07:55] green and we're fine. So, this example
[07:58] did not trigger the error logger. As you
[07:59] can see, if we check here, there's
[08:01] nothing. we check in Slack, there's
[08:02] nothing. So, what we can do is we'll
[08:04] actually make something error. So, I'll
[08:06] go into this memory and it's going to be
[08:08] looking for a session ID within the
[08:09] Telegram trigger and I'm just going to
[08:11] add an extra D. So, this variable is not
[08:13] going to work. It's probably going to
[08:14] error out and now we'll actually see
[08:16] something happen with our error
[08:18] workflow. So, I'm just going to say hey.
[08:20] And we will watch. Basically, nothing
[08:22] will come back
[08:24] here. Okay, that confused me, but I
[08:27] realized I didn't save the workflow. So,
[08:28] now that we've saved it, this is not
[08:29] going to work. So, let's once again say,
[08:31] hey, and we should see that nothing's
[08:32] going to come back over here. Um, I
[08:34] believe if we go into our error logger,
[08:36] we should see something pop through. We
[08:37] just got that row. And you can see the
[08:39] node changed, the error message changed,
[08:41] all that kind of stuff. And then in
[08:42] Slack, we got another workflow error at
[08:44] a new time and it was a different node.
[08:47] And finally, we can just come into our
[08:48] error logger workflow and click on
[08:49] executions. And we'll see the newest run
[08:52] was the one that we just saw in our logs
[08:54] and in our Slack, which was the
[08:56] memory node that aired. As you can see
[08:59] right here, simple memory. And so really
[09:00] the question then becomes, okay, well,
[09:02] what happens if this workflow in itself
[09:04] errors, too? I really don't foresee that
[09:06] happening unless you're doing some sort
[09:07] of crazy AI logic over here. But it
[09:10] really needs to just be as simple as
[09:11] you're mapping variables from here
[09:13] somewhere else. So, you really shouldn't
[09:14] see any issues. Maybe an authentication
[09:16] issue, but I don't know. Maybe if this
[09:18] if this workflow is erring for you a
[09:19] ton, you probably are just doing
[09:20] something wrong. Anyways, that's going
[09:22] to do it for this one. I know it was a
[09:23] quicker one, but hopefully if you didn't
[09:25] know about this, it's something that
[09:26] you'll implement and it will be helpful.
[09:28] But if you enjoyed or learned something
[09:29] new, please give it a like. Definitely
[09:30] helps me out a ton. And as always, I
[09:32] appreciate you guys making it to the end
[09:33] of the video, and I'll see you in the
[09:34] next one.