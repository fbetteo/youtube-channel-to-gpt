Video Title: Two Ways to Save 96% of Your Money Using DeepSeek R1 in n8n
Video ID: o69yGTxB8EE
URL: https://www.youtube.com/watch?v=o69yGTxB8EE
View Count: 11,556

[00:00] this is the riddle that we're going to
[00:00] send off to deep seek R1 and see if it
[00:03] can handle it you're in a room with
[00:04] three light switches each switch
[00:06] controls one of three light bulbs in a
[00:07] separate room but you can't see the
[00:09] light bulbs from where you are you can
[00:10] only enter the room with the light bulbs
[00:12] once how can you figure out which switch
[00:14] controls which bulb so we're going to
[00:16] send this riddle off to deep seek R1
[00:19] right now it's thinking about the riddle
[00:20] it's going to assess its options and
[00:22] then it's going to tell us the result as
[00:24] well as all of the reasoning steps that
[00:26] it took in its brain to get to the
[00:28] answer so should be pretty cool see what
[00:30] it comes up with so it just finished up
[00:31] running if we click into this HTTP
[00:33] request we can see what we got back was
[00:35] content as well as reasoning content and
[00:37] so if we click into this next node just
[00:38] so we can read it a little better we get
[00:40] the answer as well as the steps that it
[00:41] took to get to this answer so this
[00:44] method uses both light status as well as
[00:46] heat to understand which bulb
[00:49] corresponds to the switch and only
[00:50] entering the room once so got some
[00:52] really exciting news yesterday deeps
[00:54] just released R1 which is a new model
[00:56] that is a reasoning model that is
[00:58] comparable if not better than open AI 01
[01:01] reasoning model So today we're going to
[01:02] be looking at that a little bit breaking
[01:03] it down and then talking about the
[01:05] actual right way that you want to go
[01:06] ahead and use this within naden so let's
[01:09] jump into it and if you want to check
[01:10] out this report I will leave the link
[01:12] for that in the description if you want
[01:13] to read more about it and maybe read
[01:14] from the people that actually have
[01:16] developed this thing and understand it a
[01:17] lot better than I do anyways let's take
[01:19] a quick look at this LinkedIn post from
[01:21] shwam so as we can see deep seek just
[01:24] delivered what we want to call the
[01:25] impossible it's a model that matches
[01:27] open ai1 at just 12 27th of the cost so
[01:31] um we'll break up the cost in a sec but
[01:33] basically over here on the right we're
[01:34] seeing $60 which is um a million tokens
[01:37] for open ai1 output and then $
[01:41] 2.19 per million tokens for um deep seek
[01:44] R1 output which is 96.4% cheaper and
[01:47] deep seek is 100% open source so when
[01:50] we're looking at the numbers that matter
[01:51] like I said here are the cost per
[01:52] million output tokens 60 compared to
[01:55] 2.19 Bucks performance comparisons as
[01:58] you can see R1 versus 01 they're very
[02:00] very comparable and R1 is um better in
[02:04] this metric and this metric um both in
[02:06] the top 3.17% of code forces anyways
[02:09] here's the wild part open eye and
[02:11] anthropic rely on traditional training
[02:13] methods but deep seek took a completely
[02:14] different path so they used pure
[02:16] reinforcement learning so no human
[02:18] supervision just exploration and
[02:20] learning like a child figuring out
[02:21] puzzles iterating over time and then
[02:23] what they're calling the aha moment
[02:25] which is during training R1 starts to
[02:27] develop its own problem solving
[02:28] strategies so it teaches itself and
[02:31] starts to completely understand how to
[02:33] do things based on what it's already
[02:34] done and just get smarter and smarter so
[02:36] the evolution here started as a base
[02:38] model learned through trial and error
[02:40] developed its own problem solving
[02:41] strategies and eventually matched open
[02:42] ai's leading models the real question
[02:45] here is if you're using open aai 01 why
[02:48] would you be paying 27 times more for
[02:49] the same performance so what exactly are
[02:51] you paying for and let's look at that in
[02:53] NN because if you've gotten there and
[02:55] you've you know con tried to connect
[02:56] open router to deep seek R1 or even deep
[02:58] seek V3 you you may have noticed some
[03:00] things about the way it's calling tools
[03:02] or the way that it's calling your vector
[03:03] database that maybe you weren't too
[03:04] happy with so let's talk about the right
[03:06] way to be using deep seek R1 in an
[03:10] here's another quick comparison Um this
[03:11] can also be found in that research
[03:13] report that I'll link down below but as
[03:14] you can see we've got R1 01 another
[03:17] version of R1 that has different
[03:18] parameters 01 mini and then deep seek V3
[03:21] so as you can see in the on the far left
[03:23] of all these charts the dark blue with
[03:25] the stripes um deeps R1 is pretty much
[03:27] in the lead on everything and you can
[03:29] even see deeps V3 was super super
[03:31] powerful and how much R1 crushes V3
[03:34] here's another quick breakdown of the
[03:35] costs we've got open AI input and output
[03:37] tokens $15 or $60 for per million tokens
[03:41] and then deep seek input and output 55
[03:44] cents or $219 for million tokens so what
[03:47] that means is you can either use a
[03:48] million open AI input tokens or you
[03:50] could use 27.3 million deep seek R1
[03:52] tokens so you know do the math there but
[03:56] I'm sure at this point you guys have all
[03:57] seen different LinkedIn posts different
[03:58] YouTube videos about deep R1 so the
[04:01] question is how do you actually use it
[04:02] in naad then the right way because if
[04:04] you watch my deep seek V3 video what we
[04:06] did is we connected this open AI chat
[04:08] model and a lot of you guys said you
[04:09] know you can't find Bas URL base URL is
[04:12] no longer an option here you have to get
[04:14] that by going into your credential and
[04:16] then you get your API key and then
[04:17] here's where you set up the base URL so
[04:20] um if you were confused about Bas URL
[04:22] that's where it is now but let's quickly
[04:23] talk about how to set this up and um how
[04:26] you configure this credential so I'm
[04:28] going to be walking through setting up a
[04:29] new credential with you guys so let's
[04:30] click into here create new credential
[04:31] and let's go grab our base URL as well
[04:33] as our API key so head over to open
[04:36] router. okay now that we're in open
[04:38] router we're going to go to our profile
[04:39] click on keys we're going to create a
[04:41] new one and then you can name it
[04:43] whatever you want once you hit create
[04:45] you will get this API key that you will
[04:47] be able to copy and then paste this back
[04:48] into naden once that's pasted into naden
[04:51] you're going to go up to the top left
[04:52] search for models as you can see deep
[04:53] SEC car1 is already right there very
[04:55] popular and then you're going to go to
[04:56] API down here what we have is um the
[05:00] base URL is what we're looking for so
[05:01] we're going to copy this base URL and
[05:03] then paste that into the base URL in NN
[05:06] so right here this is currently pointing
[05:07] to open.com and that's why we'd be able
[05:09] to choose from a list of models which
[05:11] would be gbt 40 40 mini all that kind of
[05:13] stuff so we're going to change this base
[05:15] URL and now we're going to be pointing
[05:16] towards open router and then once we
[05:19] save this credential real quick we can
[05:21] see that now we have the option to um
[05:23] put in a different model so when this is
[05:25] pointed to open a you have a drop- down
[05:26] list of all of the different open models
[05:28] but what we're going to do is Chang this
[05:30] to expression and then we need to go
[05:31] find the actual deep seek model or any
[05:34] sort of open router model that we want
[05:35] to use and then paste that in here so
[05:38] back over to open router if we just
[05:39] scroll up to the top of the deeps R1
[05:41] right here is what we're looking for all
[05:42] we have to do is hit copy to clipboard
[05:44] and then we're going to paste that into
[05:45] the model section in n8n we paste that
[05:48] right in here you're going to get this
[05:49] red um error symbol that says the value
[05:52] deep seek is not supported but don't
[05:54] worry about that you're going to hit
[05:55] save and now you're pretty much hooked
[05:57] up to deep seek through open router but
[06:01] what I've noticed is that through
[06:02] testing even with deep seek V3 and now
[06:04] with deep seek R1 um if we want to use
[06:08] this it sometimes has errors with its
[06:12] tool calling with its um time with its
[06:14] endless Loops so I was testing this with
[06:16] with some rag and um it was hitting the
[06:18] pine con Vector store over and over and
[06:20] over like 12 times in a row and it just
[06:22] wouldn't stop sending queries so that
[06:24] was an issue I've also been experiencing
[06:25] this issue where I just want to say
[06:27] hello just to make sure that I'm
[06:28] actually connected and we know that are
[06:29] connected because we're not getting an
[06:31] error right away that's saying
[06:32] credentials are invalid or we're not
[06:34] hooked up to a chat model so we know
[06:37] it's working but going through open
[06:39] router I've seen stuff on community
[06:40] forums as well that people are just
[06:41] having this issue where it's taking
[06:43] minutes and minutes to come back so
[06:45] obviously this is not ideal and you know
[06:47] if you want to test this out with
[06:48] different functions in
[06:49] nadn you can't be waiting 15 minutes for
[06:52] each run so let me show you the way that
[06:55] right now I would start to implement
[06:56] deep seek R1 into my workflows real
[06:59] quick just wanted to say if you want to
[07:00] download this workflow you can do so for
[07:01] free by joining my fre School community
[07:03] that way you can just download it right
[07:04] away get this into your a into your NN
[07:06] environment and then you can just put in
[07:08] your API key and then you're good to go
[07:10] right away like I said once you join the
[07:11] free school Community click on YouTube
[07:13] resources click on the post associated
[07:15] with this video and then you'll be able
[07:16] to download the workflow right here then
[07:18] if you're looking to take your skills
[07:19] with nadn and a automation a little bit
[07:20] farther check out my paid Community the
[07:22] link for that will also be down in the
[07:23] description got a great community of
[07:24] members who are also learning nadn and
[07:26] sharing their resources as well as
[07:28] obstacles that they're running running
[07:29] into got a great classroom section with
[07:31] deep dive topics as well as a calendar
[07:33] with five live calls per week get
[07:35] questions answered make sure you're not
[07:36] getting stuck so I'd love to meet you
[07:38] guys in these calls anyways let's get
[07:40] back to the video what we're going to be
[07:41] doing is accessing deep seek R1 through
[07:43] an HTTP request where in here we're able
[07:46] to access the model and we're able to
[07:48] give it sort of a system prompt as well
[07:50] as an actual user prompt so in here it's
[07:52] just your helpful assistant and then I'm
[07:54] using the previous tool to set a query
[07:57] which in here is you're in a room with
[07:59] three light switches each switch
[08:01] controls one of three light bulbs in a
[08:02] separate room but you can't see the
[08:04] light bulbs from where you are you can
[08:05] only enter the room with the light bulbs
[08:07] once how can you figure out which switch
[08:09] controls which bulb so we're going to
[08:11] send this riddle off to deep seek R1
[08:13] right now it's thinking about the riddle
[08:15] it's going to assess its options and
[08:17] then it's going to tell us the result as
[08:19] well as all of the reasoning steps that
[08:20] it took in its brain to get to the
[08:22] answer so should be pretty cool to see
[08:24] what it comes up with so just finished
[08:26] up running if we click into this HTTP
[08:28] request we can see what we got back
[08:29] content as well as reasoning content and
[08:32] so if we click into this next node just
[08:33] so we can read it a little better we get
[08:35] the answer as well as the steps that it
[08:36] took to get to this answer so first of
[08:38] all it said to determine which switch
[08:40] controls each bulb with only one entry
[08:42] here's what you should do turn on switch
[08:44] a and leave it on for two to 3 minutes
[08:46] this allows that bulb if it's controlled
[08:48] by switch a to heat up turn off the
[08:50] first switch then immediately turn on
[08:52] switch B enter the room and observe the
[08:54] bulbs if the bulb that's on is control
[08:56] by switch B the bulb that's off but warm
[08:59] is controlled by switch a and then the
[09:01] bulb that's off but cold is controlled
[09:02] by switch C so this method uses both
[09:05] light status as well as heat to
[09:07] understand which bulb corresponds to the
[09:10] switch and only entering the room once
[09:12] so I'm not going to read all this
[09:14] reasoning but as you can see it's it's a
[09:15] pretty robust um amount of reasoning
[09:17] that this model did in order to Think
[09:19] Through what it what um the answer to
[09:21] this riddle is and so yeah this is a fun
[09:23] use case of riddles but let's say that
[09:24] we're actually doing a multi-step
[09:26] process like resolving inqueries sending
[09:28] emails
[09:29] um doing some sort of analysis on data
[09:32] and then taking action this is going to
[09:33] be super super cool because you're going
[09:35] to understand exactly why the model did
[09:37] what it did and that will also help you
[09:39] reprompt stuff later and it's going to
[09:41] just provide full transparency as to
[09:44] what is happening and why as you can see
[09:46] it started off by saying it's a classic
[09:48] puzzle um the challenge is figuring out
[09:49] which which switch controls which bulb
[09:51] so first thing is that you know the main
[09:53] constraint is that you can only enter
[09:54] the room once so you need to be a little
[09:55] creative about how you figure out which
[09:57] switch controls which bulb um they talk
[09:59] about being able to use heat because the
[10:02] model understands that if a bulb is on
[10:03] for a long time it's going to warm up
[10:04] more than a bulb that was just flipped
[10:06] on right away it even goes right here
[10:08] and says but wait this relies on the
[10:09] bulbs being incandescent and producing
[10:11] heat if they're LED or CFL they might
[10:13] not get as hot hm but the problem
[10:15] doesn't exactly specify the type of
[10:17] bulbs maybe we can assume they're
[10:18] traditional bulbs that generate
[10:21] heat anyways and it breaks down more
[10:23] approaches it tells you exactly the way
[10:24] it got to its answer um therefore the
[10:26] solution is to manipulate the switches
[10:28] in a way that allows you to use both
[10:29] both light and heat as indicators but as
[10:31] far as setting this up it's going to be
[10:32] super super simple you're going to go to
[10:33] deep seek.com you want to click up in
[10:35] the top right click on API platform and
[10:37] then all you have to do is first of all
[10:38] you want to top up with some credits I
[10:40] put in two bucks um a while ago and as
[10:42] you can see I've hardly tapped into that
[10:44] at all um and then what you need to do
[10:45] is grab your API key um and so we'll
[10:48] walk through an example real quick so
[10:49] I'm going to create a new key we'll call
[10:51] this one test two we'll grab this API
[10:54] key and copy that down for later and
[10:57] then on left hand side you're going to
[10:58] go to Docs once you get here this page
[11:00] is going to pull up that says your first
[11:01] API your first API call it's going to
[11:03] walk through a base URL it's going to
[11:05] walk through the different headers and
[11:06] parameters that we need to put in but
[11:07] all you really have to do is right here
[11:09] you have to grab this curl and click
[11:11] copy back in ended end we're going to
[11:13] grab an HTTP request and then all we
[11:15] have to do is click on import curl paste
[11:17] that curl in there hit import and now it
[11:20] fills out the HTTP request for us so as
[11:21] you can see it turned it into a post
[11:23] method it grabbed our right endpoint for
[11:25] us it said that we need to obviously put
[11:27] in our API key so right here it's going
[11:29] to be Bearer space your API key so let
[11:31] me put that in real quick okay so
[11:32] there's my API key just make sure you
[11:33] have a space between Bearer and the
[11:35] start of the token as well as at the end
[11:37] make sure we have no leading or sorry
[11:38] trailing white space and then down here
[11:40] we have our actual Json body parameters
[11:42] that we're sending over to the model so
[11:44] let's look into here and see what we got
[11:45] we have a system prompt which is you are
[11:47] helpful assistant and then we have the
[11:48] user prompt which is just saying hello
[11:50] and right now keep in mind the model is
[11:52] deep seek chat and if we go back to the
[11:55] documentation we can see that the Deep
[11:56] seek D chat model has been upgraded to
[11:58] deep seek V3 the API remains unchanged
[12:01] however if you want to use the latest
[12:03] reasoning model deep seek R1 you need to
[12:05] do deep seek Reasoner in the model so
[12:08] we're going to copy deep seek Reasoner
[12:09] back in end and end we're going to get
[12:10] rid of deep seek chat as the model
[12:12] parameter and change that to deep seek
[12:14] Reasoner and now that's pretty much it
[12:16] we can hit test step it's going to be
[12:17] sending over the message hello so DC is
[12:19] going to come back by saying something
[12:20] like hi so as you can see it said the
[12:23] user greeted me with hello so I should
[12:25] respond in a friendly way and welcoming
[12:26] manner let me make sure my response is
[12:28] approachable and offers help maybe
[12:29] something like hello how can I assist
[12:30] you today and straightforward opens the
[12:32] conversation I don't want to over
[12:34] complicate it keeping it professional
[12:35] and still warm and ended up saying hello
[12:38] how can I assist you today so obviously
[12:39] what I did in the previous example is I
[12:41] made the content and expression based on
[12:43] what we Dragged In from the previous
[12:44] field so you would obviously need to
[12:46] reference different variables and you
[12:48] could even change up the system prompt
[12:49] if you wanted to help have this agent do
[12:50] something very specific for you but
[12:52] let's say we said something like tell me
[12:55] a joke and we sent this off to deep seek
[12:58] um it's going reason about you know like
[13:00] the user asked me for a joke um it may
[13:03] talk about different senses of humor or
[13:05] whatever but so the joke we got is
[13:07] here's a light-hearted one for you why
[13:08] did the Scarecrow win an award because
[13:10] he was outstanding in the field okay um
[13:13] user asked for a joke let me think of a
[13:14] good one I want it to be light-hearted
[13:16] and not offensive maybe something with a
[13:18] pun people usually like those hm how
[13:20] about a classic setup with a Punchy with
[13:22] a punny punch line why did the Scarecrow
[13:24] win an award okay and as you can see it
[13:26] even went way more down it gave some
[13:28] other jokes and it explained them um but
[13:31] ultimately at the end it said that the
[13:32] Scarecrow one was safe and
[13:34] familyfriendly so present Clarity around
[13:36] it um all right it's it's super cool
[13:39] stuff so that's going to be the way to
[13:40] set up deep seek R1 as an HTTP request
[13:43] in here that you still have a lot of
[13:44] customization as far as the system
[13:45] prompt and the role prompt going in of
[13:47] course this will be super cool in the
[13:48] future though being able to give your
[13:49] agents the brain to do all the different
[13:51] tool calling within um you know by using
[13:54] deeps car1 it'll be cool once idend
[13:57] creates a native node for deep SE rather
[13:59] than having to go through open router
[14:00] because that's where I think the issues
[14:01] are coming from right now let's say if
[14:03] we tried to do this again and say um
[14:05] tell me a joke this one will probably
[14:07] not come through but as we saw when we
[14:09] did it down below with this HTTP request
[14:12] how quickly those those results came
[14:13] back so I I just figured some of you
[14:16] guys may be running into this issue so I
[14:17] wanted to show another way that you can
[14:19] connect to deep seek R1 in Ed end pretty
[14:21] easily so if you guys enjoyed this one
[14:23] please leave a like definitely helps me
[14:24] out um but besides that appreciate you
[14:26] guys making it to the end of this one
[14:28] and I will see you in the next video