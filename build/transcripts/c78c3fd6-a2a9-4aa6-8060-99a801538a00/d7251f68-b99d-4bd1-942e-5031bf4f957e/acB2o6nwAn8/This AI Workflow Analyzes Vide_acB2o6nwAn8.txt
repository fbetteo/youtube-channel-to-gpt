Video Title: This AI Workflow Analyzes Videos for FREE (n8n + Google Gemini)
Video ID: acB2o6nwAn8
URL: https://www.youtube.com/watch?v=acB2o6nwAn8
View Count: 23,971

[00:00] Okay. So, I'm going to go ahead and hit
[00:01] test workflow, which is going to open up
[00:02] this form that's going to prompt us to
[00:04] insert a video that we want to get
[00:05] analyzed. So, now that I've chosen my
[00:07] MP4 file, I'm going to submit that. And
[00:09] then we'll watch this workflow kick off,
[00:11] which is basically going to upload that
[00:12] file to Google Gemini, and then it's
[00:14] going to analyze it. And you can see
[00:15] that it's going to wait for about 5
[00:16] seconds, go check in on the status, and
[00:18] it looks like it is
[00:22] already done on that first try. So, it
[00:23] took under 5 seconds to analyze this
[00:25] video. And let's go take a look at what
[00:26] it says. So, here's the analysis that we
[00:28] just got back from Google. And what I'm
[00:30] going to do is just open up the full
[00:31] video right here and we can see if it
[00:32] matches up. So, the video presents a
[00:34] series of artistic renderings where
[00:35] well-known beverage containers are
[00:37] reimagined as buildings or structures.
[00:39] Number one is a Coca-Cola bottle. The
[00:41] video begins with a tall Coke
[00:42] bottle-shaped building seemingly located
[00:44] in a city. The building has multiple
[00:46] floors, appears to be a restaurant or
[00:47] cafe. So, as you can see, the
[00:49] description of the Coke bottle is super
[00:50] detailed. Let's move on to the next
[00:51] part, which is the Red Bull. The next
[00:53] scene features a giant Red Bull can
[00:54] transformed into a building. People are
[00:56] seen entering through a door near the
[00:57] base and others are on top. So, super
[01:00] detailed once again. Moving on to the
[01:01] third one, which is a Gatorade bottle.
[01:03] The subsequent segment displays a
[01:04] Gatorade bottle. Inside the bottle are
[01:06] mini figures engaging in sports and
[01:07] activities. There is smoke emanating
[01:09] from the building, which if we zoom
[01:11] forward, we can see that there is smoke
[01:12] right there. And now, let's move on to
[01:14] the fourth one, which was Monster
[01:15] Energy. The final scene shows a monster
[01:17] energy can as a structure around their
[01:18] base. There is greenery and a spiral
[01:20] staircase. People appear to be gathering
[01:21] near the entrance and the surrounding
[01:23] area. So, as you can see, we got a
[01:25] really detailed analysis on this video
[01:26] with four different parts. As you can
[01:28] see, four different drinks. And all of
[01:30] this was free of charge. And if you want
[01:32] to see how I automated all of these
[01:34] videos using NADN, you can watch that
[01:35] full video. I'll link it up here. All
[01:37] right. So, now that you've seen a demo
[01:38] of how this works, let's actually dive
[01:40] into what's going on within each step.
[01:42] So, if you want to follow along, click
[01:43] the link in the description for my free
[01:45] school community. And once you get in
[01:46] here, you'll be able to download this
[01:47] exact template for free. You'll just
[01:49] have to search for the name of this
[01:50] video using the search bar and then
[01:52] download that JSON file. So, for
[01:54] example, here's a video with a JSON file
[01:56] like this. You'll download that and then
[01:57] when you get into Niten, all you have to
[01:59] do is import that from file and then
[02:00] you'll have this exact workflow right
[02:02] here. Cool. So, now that you have that
[02:03] workflow and you're ready to follow
[02:04] along, what you want to do is go to
[02:06] Google and Google AI for developers and
[02:08] then just make an account real quick if
[02:10] you don't already have one so that you
[02:11] can get your free API key. To get that
[02:13] API key, you'll just click right here,
[02:14] explore models, and then up top, get API
[02:16] key. And this will give you a free
[02:18] Gemini API key to use. And then once
[02:20] you've grabbed that API key, you're
[02:21] going to go up to the top right where it
[02:22] says documentation and click on that,
[02:24] which is going to pull up Gemini's
[02:25] developer API. And down here on the
[02:27] left, we can see model capabilities. I'm
[02:29] going to scroll all the way down to
[02:30] video understanding, which is what we're
[02:32] looking at for today. And now we're
[02:33] going to be able to see how we can use
[02:35] Gemini to understand videos and YouTube
[02:37] videos. So the first one that we're
[02:39] doing is just uploading a video file.
[02:40] And this one has a couple different
[02:42] parts. As you can see, this is kind of a
[02:44] curl command, but it's not super great.
[02:46] meaning like we can't just copy this
[02:47] whole thing and import it in similar to
[02:49] how we can do that for other APIs. So
[02:51] luckily you already have the template.
[02:52] All you're going to have to do is plug
[02:53] in your own Gemini API key. So in order
[02:56] to do that, what we can see is that
[02:58] right here for the Google API key, this
[02:59] is in the form of a query parameter. And
[03:01] the only reason I know that is because
[03:03] it's included within the actual URL
[03:06] endpoint that we're trying to access. So
[03:08] what we're going to have to do is enter
[03:09] in key as the name and then the value is
[03:11] going to be our Google Gemini API key.
[03:14] So I'm going to go back into Naden and
[03:15] you would open up this node right here.
[03:17] And for authentication, you're going to
[03:19] choose generic. For generic type, you're
[03:21] going to choose query like we talked
[03:22] about. And then for the query off,
[03:24] you're going to come in here and create
[03:25] a new one. And basically, you're going
[03:26] to put the name as key. And the value
[03:29] will be your Google Gemini API key. As
[03:31] you can see, this is exactly how I set
[03:33] it up for this demo. Once you've set up
[03:35] your credential, you're pretty much good
[03:36] to go. But I'll show you some of the
[03:37] other stuff I had to do. I had to set up
[03:39] some header parameters according to the
[03:40] documentation. So we have our command,
[03:42] we have our content length, we have our
[03:43] content type, we have our application is
[03:45] JSON, and then we're going to have the
[03:47] actual file. So back in here, you can
[03:48] see I already set all this up. I was
[03:50] just able to reference the information
[03:52] that is coming from the binary data that
[03:54] we uploaded, which was our video. As you
[03:56] can see, if I click on view, this was
[03:57] the exact video that we had uploaded in
[03:59] that form submission. And then we're
[04:01] pretty much just sending over an end
[04:02] binary file in a binary field called
[04:05] video. So if I go back out of here, you
[04:07] can see right here the name here is
[04:08] video. So that's exactly what I typed in
[04:10] down here as an exact match. And so what
[04:13] this does is Google Gemini responds to
[04:15] us with, okay, cool. I got that video.
[04:17] Thanks for sending it over. Here is a
[04:19] URL for it. And also the state right now
[04:21] is processing. So obviously this doesn't
[04:23] happen instantly. It's kind of running
[04:24] on Google Gemini servers right now. So
[04:26] then what we want to do is we're going
[04:28] to go here and wait 5 seconds. And then
[04:30] after 5 seconds, we're going to use a
[04:32] different HTTP request, which is
[04:33] actually going to go check in on the
[04:35] status of that upload and see if it's
[04:36] done analyzing. And so I was able to get
[04:38] here because if you go back to the
[04:40] documentation, we can see the next step
[04:42] over here is to generate content from
[04:44] video. And so what I did was I basically
[04:46] copied this endpoint and I obviously
[04:48] same thing with the API key because we
[04:50] already have it saved in our NN. So I
[04:52] copied in that endpoint. I put in the
[04:54] same query author we already set up. And
[04:55] then the most important thing is that
[04:57] we're sending over this body which is
[04:58] telling Google like what to do with that
[05:00] URL. So there's three things that we're
[05:02] sending over. The first one is that
[05:04] actual file URI that Google gave us from
[05:06] earlier. So when we uploaded the file
[05:08] back here, as you can see, it gave us a
[05:09] URI. So I basically just dragged in that
[05:11] URI right here. Although, as you can
[05:13] see, this one's coming from JSON. So I
[05:14] actually dragged it in from the weight
[05:16] node. So I dragged it in from right
[05:17] here. But it's the same thing. And then
[05:19] it also asks for the mime type. So all I
[05:21] did was came here to the mime type from
[05:22] the previous node and dragged that in as
[05:24] well. And because these two things are
[05:26] variables, they're going to change every
[05:27] single time we upload a different video
[05:29] that triggers this process. But the text
[05:32] is fixed. And basically every time we're
[05:33] just saying, "Hey Google, describe
[05:35] what's going on in the video." in great
[05:37] detail describe the entire video. So now
[05:39] basically it's going to look at this
[05:41] specific video right here. It's going to
[05:43] understand it's this type of file type
[05:44] and this is what it needs to do with it.
[05:46] And then what happens is it basically
[05:48] spits out that entire chunk of what
[05:50] happened in the video. And what you'll
[05:52] notice is that we're using a method
[05:53] called polling which basically means
[05:54] we're going to continuously check in on
[05:56] the status of this video until it's
[05:58] done. And so what happens if we don't
[06:00] use polling here, let me show you down
[06:01] here with an example. is it's basically
[06:04] just going to error out right here and
[06:05] we're never going to get our analysis.
[06:07] So, I'm going to activate this form
[06:08] submission real quick and I'm going to
[06:09] come up here and deactivate this one and
[06:11] I'm going to drop in a different video.
[06:13] All right, so this time I'm dropping in
[06:14] coffee chains. We're going to submit
[06:16] that and watch it get uploaded and then
[06:18] it's going to try to run that analysis,
[06:19] but the file basically isn't ready. So,
[06:21] as you can see, it fails and it
[06:23] basically says the file URI is not in an
[06:25] active state and usage is not allowed.
[06:27] But now that it's been about 5 seconds,
[06:28] if I went ahead and tested the step
[06:30] again, we should see that it's actually
[06:31] going to work. You see it's spinning and
[06:33] now we're going to get an analysis on
[06:34] that video. And as you can see, it just
[06:36] finished up. I'm just going to add a set
[06:37] node real quick so we can actually read
[06:39] it in a bit more of a clean way. Cool.
[06:41] So now we have the analysis. Let me pull
[06:42] up the actual video. It's very similar
[06:44] to the last one. First we have a
[06:45] Starbucks cup. A round window is where
[06:47] the logo typically is. Then we move on
[06:49] to the Dutch Bros cup where it is a blue
[06:51] stylized building that is clearly
[06:52] designed to look like a Dutch Bros cup.
[06:54] We have our Duncan with a pink and white
[06:55] Duncan cup functioning as a building.
[06:57] And then finally, we have our Tim
[06:59] Horton's cup. So anyways, that is
[07:00] exactly why we need to pull. Otherwise,
[07:03] we'd be taking a shot in the dark at how
[07:04] long do we wait until it's done. And
[07:06] then if we don't have that retry loop,
[07:08] it's basically just going to end if we
[07:11] don't get it right. Okay, cool. So that
[07:12] is like a local file that you have on
[07:14] your PC. Now, let's say we want to
[07:17] analyze a YouTube video. What I'm going
[07:18] to do is come into the documentation
[07:20] once again. And if I continue to scroll
[07:22] down, we can see that we have an option
[07:24] to include a YouTube URL. And this is a
[07:26] completely different type of request, a
[07:28] different endpoint with different body
[07:29] parameters. So what I'm going to do for
[07:31] this one is once again I can't copy this
[07:33] whole code sample for the curl. But I
[07:36] know that if I can copy from here
[07:37] onwards, it'll be good just because this
[07:39] two dev null thing would break it. So
[07:41] I'm copying this. I'm going to open up a
[07:43] new HTTP request in this workflow. Click
[07:45] import curl. Paste that in there and hit
[07:47] import. And now that's pretty much
[07:49] autopop populated everything. As you can
[07:51] see, we have the option to add our API
[07:52] key as a query parameter. I'm just going
[07:54] to flick that off because we've already
[07:56] set up our query parameters. So, let me
[07:57] just navigate back to Google Gemini. And
[08:00] now this body basically is telling
[08:01] Google Gemini, okay, here's the video
[08:04] that you're going to get, which we will
[08:05] put in a YouTube URL right here. And
[08:07] then it says, please summarize this
[08:09] video in three sentences. So, we're just
[08:10] going to run with that. You could say 10
[08:12] sentences. You could say, you know,
[08:13] extract two key highlights from this
[08:16] video, whatever you want. But we're just
[08:17] going to stick with the default prompt
[08:18] for now. So, let me go to YouTube real
[08:20] quick and just grab the saddest video of
[08:22] the decade, which is Outdoor Boys saying
[08:25] goodbye. So, I copied that video URL.
[08:27] I'm just going to paste that right in
[08:29] there. Now, this one points to that
[08:30] video of Outdoor Boys. And I'll just hit
[08:32] test step right here. And this is
[08:34] basically Oh, where'd my node go? It's
[08:35] all the way down here. This is basically
[08:37] just going to spin until it is done
[08:39] analyzing that whole YouTube video.
[08:41] Maybe it's looking at the transcript,
[08:42] but it's also looking at the visual
[08:44] elements of the YouTube video, as you'll
[08:45] see when we get this analysis back,
[08:48] which I'll check in in a sec. All right,
[08:49] so we just got that finished up. And let
[08:51] me quickly just add a set node so we can
[08:52] look at this a bit more clean. I'm going
[08:54] to drag this in here real quick. We'll
[08:56] just call this text. And now we should
[08:58] be able to Oops, we need a trigger.
[09:03] All right, so I'm going to add a manual
[09:04] trigger. And quick tip, I'm going to pin
[09:06] this data because we already have what
[09:07] we want. And I'm just going to run this
[09:09] workflow. And it opens up the form.
[09:11] Nice. Okay, so I deactivated both forms.
[09:14] Now we'll hit test workflow and we
[09:15] should get the data right here, which is
[09:17] basically a three sentence summary of
[09:18] the video. The vlogger opens up in an
[09:21] Alaskan woodland and explains that he is
[09:23] taking a break from making videos. He's
[09:25] created over a thousand videos in the
[09:26] past 11 years and dedicates so much time
[09:28] to that endeavor. But also, he and his
[09:30] family face a lot of attention in
[09:31] public. And the vlogger explains that he
[09:32] needs to focus on other things,
[09:34] especially his oldest son, Tom, and he
[09:35] wants to help other people. And though
[09:37] he sells footage, he'll just hold it and
[09:39] post it later. So, if I real quick just
[09:41] go into the actual video, by the way, 12
[09:43] million views in two days is insane.
[09:44] But, as you can see, it's he's sitting
[09:46] by a little river in an Alaskan
[09:48] woodland, just like the request said
[09:50] back to us right here. All right. And
[09:52] just to try something else, I'm going to
[09:53] go ahead and grab a video from my
[09:55] channel. We're going to copy this over
[09:57] to this node and unpin this data and try
[09:59] something else. I'm going to throw that
[10:01] URL in there, but then for the actual
[10:02] text, I'm going to say, "Please describe
[10:04] what's happening in the video and the
[10:06] most important key takeaway." There we
[10:08] go. And I'm going to send off this whole
[10:09] process and we can see what type of
[10:11] analysis we get back from this YouTube
[10:13] video. Okay, so just finished up. That
[10:15] one took a little bit longer cuz it was
[10:16] like a 10-minute video, but what this
[10:17] one says is here's a summary of what's
[10:20] happening in the video and the key
[10:21] takeaway. The video shows a way to
[10:22] create an AI agent workflow where the
[10:24] agent dynamically chooses which model to
[10:26] use for a specific task. This helps
[10:28] optimize both cost and performance. The
[10:29] agent uses Open Router, which is
[10:31] connected to hundreds of AI models. The
[10:33] key takeaway is that you can set up a
[10:35] system where the AI agent chooses its
[10:36] brain dynamically to optimize cost and
[10:38] performance. Okay, cool. So, it didn't
[10:40] describe too much about like what it's
[10:41] actually seeing, but it's probably tough
[10:42] because it's NAN. And just purely out of
[10:45] curiosity, I'm going to ask it to just
[10:46] like say what tool is being used in the
[10:48] video. All right, let's take a look.
[10:50] What we get is in the video, the tool
[10:52] being used is NAN. So, that's pretty
[10:54] cool. It was able to understand vision.
[10:56] Well, it also probably was looking in
[10:58] the transcript and could hear that I
[11:00] said NAN, but either way, it got it
[11:02] right. All right, so that's going to do
[11:03] it for this one. I know it was a quick
[11:05] one, but if you enjoyed, you learned
[11:06] something new, please give it a like.
[11:07] Definitely helps me out a ton. Once
[11:09] again, you can get this whole template
[11:10] for free in my free school community.
[11:11] You'll just go over there and then
[11:12] search for the title of the video. Or if
[11:14] you're looking for a more hands-on
[11:15] approach, then check out my paid
[11:16] community. The link for that's also down
[11:17] in the description. We've got 1.8,000
[11:19] members who are building and learning
[11:21] with NIDN every single day. We've also
[11:22] got two full courses. One's called Agent
[11:24] Zero, which is like the foundations of
[11:25] AI getting into AI automation. And then
[11:28] we have 10 hours to 10 seconds where you
[11:29] learn how to identify, design, and build
[11:31] time-saving automations. So, I'd love to
[11:33] see you guys in either of these
[11:34] communities. But that's going to do it
[11:36] for today. Really appreciate you making
[11:37] it to the end of the video as always,
[11:39] and I'll see you guys in the next one.
[11:40] Thanks everyone.