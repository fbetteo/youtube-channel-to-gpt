Video Title: I Built a Human In The Loop Sales Team That Waits for Feedback and Approval in n8n
Video ID: FcAAlOw6KZ8
URL: https://www.youtube.com/watch?v=FcAAlOw6KZ8
View Count: 41,554

[00:00] today I'm going to be breaking down this
[00:01] awesome team of sales agents that uses
[00:02] humanin thee Loop functionality for
[00:04] feedback and approval so every time a
[00:06] lead form is submitted and captured an
[00:07] air table it's going to send that to
[00:08] this sales agent that's going to write
[00:10] an email and then send it off to us the
[00:12] human not only just for approval but
[00:14] also for feedback if the email gets
[00:15] approved it's going to be sent off to
[00:17] that lead but if it's not it's going to
[00:18] get sent to the revision agent so the
[00:20] revision agent is then going to take the
[00:22] email that the sales agent made it's
[00:23] going to take the feedback from the
[00:25] human and it's going to revise that
[00:26] email and create a new one then as you
[00:28] can see it Loops right back to the human
[00:30] for another round of feedback and
[00:31] approval so this system is really cool
[00:33] because it's going to allow you to make
[00:34] unlimited revisions until you're happy
[00:35] with the output and then when you're
[00:37] finally good to go you can tell the
[00:38] agent to send it off and it will do that
[00:39] for you so let's show off a quick demo
[00:41] then I'm going to show you guys how you
[00:42] can download this workflow for free and
[00:44] then we'll get in there and break down
[00:45] every single node that you see right
[00:47] here so on the left screen we've got my
[00:48] email as you can see I've been doing a
[00:49] lot of testing and on the right we have
[00:51] the sales agent team so let's hit test
[00:53] workflow and we can see that it's going
[00:54] to be pulling in a form response from
[00:56] Air table the sales agent is now pulling
[00:59] in data from our project database to
[01:00] craft that email that it's going to send
[01:02] off to us for approval and feedback of
[01:04] course right now it's writing the agent
[01:06] and we're using Cloud 3.5 sonnet to
[01:07] write the the email just because I
[01:09] really like the way that that comes back
[01:10] and now you can see that we're waiting
[01:12] for feedback so if I refresh my email
[01:14] right here we have a new email this one
[01:16] says approval required for a new lead
[01:18] Robert California let's take a look at
[01:19] what we've got here Robert California
[01:21] from saber is looking for custom AI
[01:23] solution their budget is $10,000 to
[01:25] $155,000 with an immediate timeline of 1
[01:27] to 2 weeks please approve or decline the
[01:29] sending of this message generated by Jim
[01:31] our AI sales agent so here's the subject
[01:34] and then here's the email dear Robert
[01:36] thank you for reaching out to Dunder AI
[01:37] regarding your custom AI powered
[01:39] customer support and sales optimization
[01:41] system I'm excited to discuss how we can
[01:43] meet saber specific needs and exceed
[01:44] your expectations your project aligns
[01:46] perfectly with our expertise we recently
[01:48] completed a similar solution for a
[01:50] high-end Electronics e-commerce client
[01:52] that addresses many of your requirements
[01:54] so this is the element of the sales
[01:55] agent looking at its project database to
[01:57] pull back hey here's what we did for a
[01:58] previous client and this is just going
[02:00] to make the lead feel really safe in
[02:02] knowing that we can deliver the solution
[02:04] anyways it lists out the seven features
[02:05] that we were able to provide for this
[02:06] client and then it says the results were
[02:08] impressive 23% reduction in response
[02:10] time 142% increase in sales conversion
[02:13] and significantly enhanced customer
[02:14] satisfaction we're confident we can
[02:16] deliver a tailored solution for saber
[02:17] within your budget and desired timeline
[02:19] our team is prepared to start
[02:20] immediately and can have a fully
[02:21] operational system deployed within 3
[02:23] months meeting your scalability security
[02:25] and brand customization requirements and
[02:27] then the call to action at the end I'd
[02:28] love to schedule a call to discuss your
[02:30] project in more detail demonstrate our
[02:32] capabilities and explore how we can
[02:33] create a solution that drives
[02:34] substantial value for saber when would
[02:36] be a convenient time for you this week
[02:38] best regards jym Dunder AI so now what
[02:40] we're going to do is click on respond
[02:41] and it's going to open up this tab where
[02:43] we can actually give feedback so what
[02:44] I'm saying in the feedback is make it
[02:46] more concise because this email is
[02:47] pretty wordy and then I said also don't
[02:49] mention 23% in reduction time right up
[02:51] here and propose that we meet on
[02:53] Thursday so I'm going to hit submit and
[02:55] then we're going to see the workflow
[02:57] start up again so hit submit now the
[02:59] agents got that that feedback it's
[03:00] sending it to the revision agent and
[03:02] it's taking that original email that was
[03:03] created by the sales agent and revising
[03:05] it based on our feedback as you can see
[03:06] we now have um more feedback to give
[03:09] because it's waiting on our approval
[03:11] again so back in Gmail I'm going to go
[03:12] back to my main inbox hit refresh we can
[03:14] see we have another action approval
[03:16] required and same exact thing as far as
[03:18] the initial email but now we have a new
[03:20] email as you can see it's much shorter
[03:21] so dear Robert thank you for your
[03:23] interest in dunders Dunder AI custom a
[03:25] powered blah blah blah here are the
[03:26] features that we delivered for a
[03:28] previous client that had similar
[03:29] requirements
[03:30] um the results were impressive with
[03:31] significant increases in sales
[03:32] conversion and customer satisfaction so
[03:34] it got rid of the um decreases in
[03:37] response time we're confident we can
[03:38] deliver a tailored solution I'd like to
[03:40] schedule a call this Thursday to discuss
[03:42] your project in detail so as you can see
[03:43] we gave it three pieces of feedback
[03:45] which were make it more concise um don't
[03:48] mention the 23% reduction in time and
[03:51] then also let's meet on Thursday so this
[03:52] looks good to go we'll hit respond we'll
[03:55] say send it off um let's spell send
[03:58] correctly and then we'll submit that and
[04:00] then we'll watch this go up into the
[04:01] approved branch and now that email got
[04:03] sent off so let's go check on that real
[04:05] quick so here's that email that got sent
[04:06] off to Robert California Dunder AI
[04:08] custom AI solution for Sabers customer
[04:10] support and sales optimization this is
[04:11] the one that we just read through and
[04:13] approved as you can see meeting on
[04:14] Thursday doesn't mention 23% reduction
[04:16] and it signs off best regards Jim Dunder
[04:19] AI this is a super cool build I hope you
[04:21] guys can see the value in the fact that
[04:22] we're not only approving or denying but
[04:24] we're saying hey let's give the agent
[04:25] more feedback and and tell it how to
[04:27] make the email better and better until
[04:29] we're happy with with it so let's break
[04:30] down this workflow so before we start
[04:32] breaking this down I wanted to mention
[04:33] that you can download this workflow for
[04:35] free and plug it straight into your NN
[04:36] environment you go to my free school
[04:38] Community the link for that's down in
[04:39] the description click on YouTube
[04:41] resources click on the post associated
[04:42] with this video and you'll have the Json
[04:44] right there to download Once that's
[04:46] downloaded come into nadn open up a new
[04:47] workflow and then click import from file
[04:50] in the top right and if you're looking
[04:51] to take your skills with nadn and a
[04:52] automation a little bit farther and
[04:54] you're looking for more Hands-On
[04:55] approach check out my paid Community the
[04:56] link for that's also in the description
[04:58] we have a great community of people
[04:59] always asking questions and sharing
[05:00] resources about nadn looking at
[05:02] different nadn projects and then we have
[05:04] five live calls per week and all of
[05:05] those get recorded in here in case you
[05:07] can't make them we've got a great
[05:08] classroom section with deep di topics
[05:09] like building agents Vector databases
[05:11] doing one right now about HTTP requests
[05:13] and apis like I said five live calls per
[05:15] week tech support Q&A networking to make
[05:17] sure you don't get stuck we also have
[05:19] three guest speakers coming in the month
[05:20] of February and more in the month of
[05:22] March so would love to see you guys in
[05:24] this community anyways let's break down
[05:26] what's going on in this workflow from
[05:27] the beginning which is the trigger to
[05:29] the end result which is sending off an
[05:30] email to that new lead so first what we
[05:33] should do is look into our air table
[05:35] base as you can see right here this is
[05:36] our leads table so this is the one that
[05:37] we're watching as the trigger so every
[05:39] single time a new lead gets put into
[05:41] this form we will basically send off the
[05:44] process of sending them an initial sales
[05:46] email this has information obviously
[05:47] like their email their company what
[05:49] their intent is their budget their
[05:50] project description and then their
[05:52] timeline then we have our projects table
[05:54] in this case I just threw in three for
[05:55] example to make sure that the agent
[05:56] could pick the one that's the most
[05:57] relevant in this example it picked the
[05:59] this one which is the most relevant to
[06:01] what Robert California's lead submitted
[06:03] but as you can see it looked through
[06:04] this information it talked about how
[06:06] what we developed for this client and
[06:07] then at the end the result which was
[06:08] reducing response time and increasing
[06:10] sales conversions so that's the project
[06:12] database tool that the agent has this is
[06:14] the trigger that the agent gets to kick
[06:15] off this whole project and then the only
[06:17] other thing connected to this agent is
[06:19] obviously it's Claude 3.5 chat model
[06:21] which we're using because um I really
[06:23] like the way that Claude writes emails
[06:25] generates content and then we also have
[06:27] the structured output parser so let me
[06:28] dive into why doing this so the goal of
[06:30] this agent obviously is to just write an
[06:32] email take incoming information scrape
[06:34] the project database and then write an
[06:36] email so what we want to do with this
[06:37] output parser is we want to Define let
[06:39] me just change this up here we want to
[06:41] Define what it's actually going to
[06:42] Output so typically when you're working
[06:44] with an AI agent it just outputs
[06:45] everything in a field called output as
[06:47] you can see output but what we're doing
[06:49] here is we want to create two different
[06:51] basically Json parameters for the agent
[06:53] output which is one for subject and one
[06:55] for email like you can see it did right
[06:57] here so we do this by connecting a
[06:59] structured output parser and we're
[07:00] telling it here's the Json you should be
[07:02] outputting the first thing is a subject
[07:04] and we describe that that's the subject
[07:05] line of the email the second thing is an
[07:07] email which is the body content of the
[07:09] email and both of these data types
[07:11] coming through are going to be strings
[07:12] which just basically means words and so
[07:14] how you actually do that is within the
[07:16] sales agent configuration you have to
[07:18] flip this switch on which says require
[07:21] specific output format and then that
[07:22] will allow you to connect a different
[07:24] type of output parser and so the value
[07:25] here is later when we're trying to
[07:27] access the email or the subject we can
[07:29] just drag and drop in just the subject
[07:31] rather than the agent outputting all of
[07:33] that lumped into one body but now within
[07:35] the agent we have a user message to
[07:36] configure as well as a system message to
[07:38] configure so first let's take a look at
[07:40] what we're doing in the user message all
[07:42] we're saying is here's an incoming lead
[07:43] and this is going to change every time a
[07:45] new form is submitted of course because
[07:46] we're using variables here it's an
[07:48] expression field and then as you can see
[07:49] on the right this is what's actually
[07:50] being fed into the agent so we gave it
[07:52] its name it's email intent budget
[07:55] company name product description and
[07:56] timeline this is how it's able to write
[07:58] a really really um personalized Outreach
[08:01] message to this new lead now taking a
[08:03] look at the system message so I kept
[08:04] this really concise but really clear the
[08:06] overview is that you're an expert
[08:07] salesperson for an agency that delivers
[08:09] AI Solutions your job is to respond to
[08:11] incoming leads by addressing their needs
[08:12] in a professional manner you will
[08:14] receive information like the leads
[08:15] project description and timeline and
[08:17] your goal is to convince them that we
[08:19] are the best AI Agency on the market
[08:22] you've only got access to one tool which
[08:23] is the project database and you're going
[08:24] to use this to search through previous
[08:26] projects we've done then I gave it three
[08:28] rules the first one is that you're going
[08:29] to receive information about a lead and
[08:31] you need to craft a professional email
[08:32] keep it concise nobody wants to read a
[08:34] huge email second one is your main
[08:36] objective is to convince the lead to
[08:38] book in a second call your job is to
[08:39] make them believe that we can deliver
[08:41] the project they have described and
[08:42] exceed their
[08:43] expectations then finally the third rule
[08:45] is to retrieve information about
[08:47] previous projects to share with the lead
[08:49] to prove that our team is capable of
[08:50] handling the project find a similar
[08:52] project we have done to share with the
[08:53] lead and then share the results of how
[08:55] we helped that client and then the final
[08:57] notes are to sign off emails as Jim from
[08:59] Dunder Ai and then I gave it the current
[09:01] date and time in case it needs to
[09:03] reference that so that's pretty much all
[09:04] that's going on within the sales agent
[09:06] it created a subject and an email and
[09:08] now what we're doing is we're feeding in
[09:10] just the email into a set node and this
[09:13] is a little bit more complex so let me
[09:14] try to break down what is going on here
[09:16] so in NN when you're referencing
[09:18] variables how it works is if you
[09:19] reference json. something it's going to
[09:22] be looking for the node that's previous
[09:24] so in this get feedback node if we say
[09:26] json. something it's going to be looking
[09:27] in the set node if you want to reference
[09:29] a node that's further back then you
[09:31] would say sales agent do something.
[09:33] something so let me show you an example
[09:35] in this get feedback node we're giving
[09:37] the subject and we're doing that by
[09:39] saying look at the node sales agent and
[09:41] then we can find the Json subject but
[09:44] the email we're looking for is going to
[09:46] be coming from the node completely right
[09:48] before this so json. email and that's
[09:50] why we set an email in the previous node
[09:52] this set basically ensures that every
[09:54] time a revision has come through that
[09:55] the new email is going to be sent for
[09:57] feedback and that the new email will
[09:59] either be sent off to the lead or be
[10:02] sent off to the revision agent to revise
[10:03] on that version too if we didn't have
[10:06] this set then every time we wanted to
[10:07] make a revision it would just be looking
[10:08] at the original email that was created
[10:10] so that's just not very efficient
[10:12] because then our revisions can't stack
[10:13] on top of each other so for instance if
[10:15] we took the first email and said please
[10:17] make it shorter and it made it shorter
[10:18] and then we wanted to revise by taking
[10:20] something else out it wouldn't be
[10:21] looking at the shortened email to revise
[10:23] it would be looking back at that first
[10:25] email so if we want to make unlimited
[10:26] revisions we have to set this here so
[10:28] that we can can continue to feed in the
[10:30] most recent version either to the send
[10:32] email tool or to the revision agent
[10:34] every single time so I hope that makes
[10:36] sense I don't want to spend too much
[10:37] time here if you're struggling to
[10:38] understand something like this set the
[10:40] loop or the structured output parser
[10:42] then the paid Community is definitely
[10:43] what you're looking for where you can
[10:44] get get your questions answered and we
[10:45] will dive deeper into all of these
[10:47] builds anyways from there we move into
[10:49] the get feedback node which is basically
[10:51] just saying it's an operation in Gmail
[10:53] where we're sending but we're not just
[10:55] sending we're waiting for a response and
[10:57] I just wanted to throw out there this
[10:58] operation is not just in Gmail they have
[11:00] it in telegram slack Discord Outlook um
[11:02] you'll be able to get in there and just
[11:03] when you're looking for an operation
[11:05] look for set send and wait for response
[11:07] so you can play around with some other
[11:08] stuff now what we need to do is we need
[11:09] to configure the two the subject of the
[11:11] message so for the two I'm keeping this
[11:13] fixed just sending it to my email um and
[11:15] for the subject what we did was set up
[11:17] approval required in all caps so we can
[11:19] give approval right away um and then we
[11:21] put in the new lead which is coming from
[11:22] the air table trigger node so as you can
[11:24] see we're not referencing dollar sign
[11:26] Json dot we're referencing the air table
[11:28] trigger node
[11:29] and then this comes through on the right
[11:30] as Robert California and then we set up
[11:33] the message so in here it looks a little
[11:35] more intimidating but all we're doing is
[11:36] referencing a bunch of stuff to make
[11:38] kind of a sentence Robert California
[11:40] from saber is looking for custom a
[11:42] solution their budget is 10 to 15K with
[11:44] an immediate timeline please approve or
[11:46] decline the message blah blah blah and
[11:48] then we list out the subject and the
[11:49] email as you can see on the right this
[11:50] is how it's coming through so now going
[11:52] back to why we need to set the email
[11:54] previously looking at run number one of
[11:55] this node where we reference json. email
[11:58] we're getting that first original email
[12:00] from the sales agent because it's the
[12:01] long one now if we switch this to run
[12:03] number two and we come in here json.
[12:05] email is now the shortened version of
[12:06] the email then the final configuration
[12:08] down here is what type of response we're
[12:10] looking to get back from this node we
[12:12] can do approval which is just going to
[12:13] be looking for either one button that
[12:15] says approve we can change it to approve
[12:17] or disapprove you can set up that I
[12:19] thought it would be much cooler to set
[12:20] up a free text where rather than just
[12:22] saying yes or no we can actually give
[12:25] feedback to the agent to make the sales
[12:26] team really really smart for like I
[12:28] mentioned earlier limited revisions that
[12:30] take human feedback and then put that
[12:32] into the prompts of the agent and then
[12:34] down at the bottom your last options are
[12:35] just configuring the form title
[12:37] description you can set the wait time on
[12:40] how long this node will actually wait
[12:41] before it just stops the process stuff
[12:43] like that okay cool so then we move into
[12:44] a text classifier AI node in this node
[12:47] I'm using Gemini flash 2.0 just because
[12:49] it's free flash 2.0 is pretty solid and
[12:52] all it's doing here is it's just
[12:54] deciding based on the feedback If the
[12:56] message was approved or declined so we
[12:58] don't need to use a power more of a
[12:59] powerful model like 40 or Claude 3.5
[13:02] Sonet here we can get the job done
[13:03] really quick and easy with uh Gemini 2.5
[13:06] flash so anyways first thing we are
[13:07] saying what text do we actually need to
[13:09] classify this is json. data. text which
[13:11] is coming from that get feedback node
[13:14] which is just pulling in the response
[13:16] that we sent in Gmail or sorry the
[13:18] feedback we sent and then all we do is
[13:20] we set up two categories so we have
[13:22] approved which we Define here as the
[13:24] email has been reviewed and accepted as
[13:25] is the human explicitly or implicitly
[13:28] expresses approval indicating that no
[13:29] changes are needed and then we gave it
[13:31] some example phrases of what an approval
[13:33] message might look like and then we did
[13:35] the same thing for declined except for
[13:36] obviously changed up the description the
[13:38] email has been reviewed but the human
[13:39] requests modifications before it's sent
[13:42] like tweaks removing Parts rewarding Etc
[13:44] and then once again gave it some example
[13:46] phrases so on the right we can see for
[13:48] the first run where we said make it more
[13:50] concise also don't mention 23% reduction
[13:52] and proposed that we meet on Thursday it
[13:54] put this out in the decline Branch but
[13:56] then on the second run where we said
[13:57] send it off approve that message and
[14:00] because it got approved it went down
[14:02] this path which leads into the send
[14:03] email tool rather than going down the
[14:05] decline path that gets sent to the
[14:07] revision agent okay let's break down
[14:09] what's going on within the revision
[14:10] agent the first thing is we're using the
[14:12] exact same structured output parser
[14:14] because we're feeding it into the exact
[14:16] same nodes essentially so we don't want
[14:17] to change the weight it's output we
[14:18] still want to get a subject and an email
[14:20] in two different parameters so we're
[14:22] able to just connect them up to the same
[14:23] one you don't have to you could just
[14:25] copy and paste one from over here the
[14:27] only reason I do this is because I don't
[14:28] want one to say structured output parser
[14:31] and one to say structured output parser
[14:32] one so I just like to connect them
[14:34] together same thing with the chat model
[14:35] I just connected them the same one you
[14:37] don't have to anyways let's click into
[14:39] this revision agent and see what's going
[14:41] on um the data isn't going to be there
[14:42] because it's kind of weird with feeding
[14:44] in two items but let's just take a look
[14:46] regardless of what we're seeing so all
[14:48] we're feeding in for the user message is
[14:50] the email which we're grabbing from the
[14:51] set email node so the set email that we
[14:53] set right um here before the get
[14:56] feedback that's what we're looking for
[14:58] for the email
[14:59] because if we were looking for this for
[15:00] the email like I said if we revised it
[15:02] it would not be grabbing the most recent
[15:04] version so by setting an email here
[15:06] we're always passing through the most
[15:07] recent version to both of these two
[15:09] tools so anyways in here we gave it the
[15:14] um actual email to revise and then we
[15:16] gave it the feedback from the human this
[15:17] is coming from the um get feedback note
[15:20] of course and then in the system message
[15:23] what we said was you're an expert email
[15:25] writer your job is to take an incoming
[15:26] email and revise it based on the
[15:27] feedback that human submitted
[15:29] and um same rules as the first agent
[15:31] sign off his gym and here's the date and
[15:33] time so that's how that agent works and
[15:35] now let's say it revises it again it
[15:37] comes through it needs to make another
[15:39] revision it'll rise it again comes
[15:40] through and then let's say the human
[15:42] finally says okay it's good goes up
[15:44] through the approved branch and what we
[15:45] see here is the two we're going to be
[15:47] selecting this from the air table
[15:49] trigger so that every time a lead comes
[15:50] in we're going to send it to that actual
[15:52] lead then we're choosing the subject
[15:54] which we're able to grab from the sales
[15:56] agent because this isn't really getting
[15:57] revised this isn't going to change
[15:59] change you could work the logic in to
[16:01] change the the subject as well but we
[16:02] didn't in this example and then finally
[16:05] we're actually grabbing the email which
[16:07] once again we're grabbing this from the
[16:08] set email node that we created which
[16:11] makes sure that this is always going to
[16:12] be the most upto-date version of the
[16:15] email so that's basically what's going
[16:16] on in this flow what I want to do now is
[16:19] Show an example where we make like three
[16:20] or four revisions so you can see that
[16:23] it's going to come through every single
[16:24] time and you can basically do that until
[16:25] you're happy with the output all right
[16:27] so we're going to show another example
[16:28] here I'm going to hit hit test up and
[16:29] we're just going to be doing the same um
[16:31] form so it's going to be Robert
[16:32] California once again so the email may
[16:34] look a little similar but we're going to
[16:35] show doing you know maybe three or four
[16:37] revisions rather than just one so the
[16:40] agent right now has scraped the database
[16:42] and it's creating that email we just saw
[16:43] that it hit the get feedback node and
[16:45] it's waiting for us we'll refresh the
[16:46] Gmail and here is the form so as you can
[16:49] see it's very similar it has um you know
[16:51] here's how we did something for a
[16:52] different client that was similar here's
[16:54] what we did here's the result here's the
[16:56] call to action so let's respond and for
[16:58] this first feedback let's just say make
[17:00] it shorter because we want to be able to
[17:02] iterate over this so now we can see it's
[17:04] feeding off to the revision agent
[17:06] creating that email and then that's
[17:07] going to Loop right back into setting
[17:09] that email and then getting more
[17:10] feedback so let's go back into Gmail we
[17:13] have new feedback to give as you can see
[17:14] the email was is much shorter this time
[17:16] let's just tell it to get rid of the
[17:18] number seven bullet point which is
[17:19] Advanced analytics dashboard so get rid
[17:23] of um we'll say bullet point 7 send this
[17:29] off it's going to go to the revision
[17:30] agent once again and now it's going to
[17:31] be using that second version to make
[17:35] revisions on so it should still be a
[17:36] pretty short email as you can see it's
[17:38] waiting for us already um yeah as you
[17:40] can see it's a short email so it was
[17:41] taking version two and no longer has um
[17:44] bullet point number seven so finally
[17:46] let's just tell it to um we're confident
[17:50] we can deliver let's just we'll do the
[17:52] same thing from the previous example we
[17:53] will
[17:54] say
[17:57] um change the call to action to a
[18:03] meeting on
[18:04] Monday at 400 p.m. so we'll send this
[18:08] one off it's going to go through now
[18:09] it's being revised once again we will
[18:11] close out of this tab and we will wait
[18:12] for that response there we go it's
[18:15] waiting for feedback again we can come
[18:17] in here and as you can see now it says
[18:18] are you available this week Monday at 4
[18:20] p.m. so we could keep going forever but
[18:23] I'm I'm let's say I'm content with this
[18:24] email once again we're just going to say
[18:27] good to go it should be able realize
[18:29] that that means that we've approved the
[18:30] email there we go it got sent off
[18:32] through the approved Branch come back
[18:33] into email refresh this guy and we
[18:36] should see here's the email for Robert
[18:38] California by Jim from Dunder AI I can
[18:41] only imagine his last name is Halpert
[18:43] that's going to be it for this one I
[18:44] hope you guys enjoyed I had a lot of fun
[18:46] building this one it was really cool to
[18:47] see not only that approval functionality
[18:49] of human in the loop but being able to
[18:51] put feedback directly into a prompt and
[18:53] continue to iterate over itself um I
[18:55] think that this is going to open a ton
[18:56] of possibilities when it comes to
[18:58] different ways to add human feedback
[18:59] within that Loop of um automating
[19:02] processes and using using agents in your
[19:04] processes so if you guys enjoy this one
[19:06] or learn something new please give it a
[19:07] like it really really helps me out and I
[19:09] really appreciate you guys making it to
[19:10] the end of the video um feel free to let
[19:12] me know in the comments what else you
[19:13] guys want to see next but um as always
[19:16] thanks so much guys I will see you in
[19:18] the next one