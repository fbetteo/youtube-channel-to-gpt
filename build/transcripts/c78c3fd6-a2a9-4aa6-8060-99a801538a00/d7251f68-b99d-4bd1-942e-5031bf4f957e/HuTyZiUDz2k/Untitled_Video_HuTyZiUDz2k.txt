Video Title: Untitled_Video
Video ID: HuTyZiUDz2k
URL: https://www.youtube.com/watch?v=HuTyZiUDz2k
View Count: 0

[00:00] Everyone is talking about AI agents
[00:01] right now, but the truth is most people
[00:03] are using them completely wrong and
[00:05] admittedly myself included. It's such a
[00:07] buzzword right now and it's really cool
[00:09] in n to visually see your agents think
[00:11] about which tools they have and which
[00:13] ones to call. So a lot of people are
[00:14] just kind of forcing AI agents into
[00:16] processes where you don't really need
[00:18] it. But in reality, a simple AI workflow
[00:20] is not only going to be easier to build,
[00:22] it's going to be more cost effective and
[00:24] also more reliable in the long run. If
[00:25] you guys don't know me, my name's Nate
[00:27] and for a while now, I've been running
[00:28] an agency where we deliver AI solutions
[00:30] to clients. And I've also been teaching
[00:31] people from any background how to build
[00:33] out these things practically and apply
[00:35] them to their business through deep dive
[00:37] courses as well as live calls. So, if
[00:39] that sounds interesting to you,
[00:40] definitely check out the community with
[00:41] the link in the description. But let's
[00:42] get into the video. So, we're going to
[00:44] get into Naden and I'm going to show you
[00:45] guys some mistakes of when I've built
[00:46] agents when I should have been building
[00:48] AI workflows. But before that, I just
[00:50] wanted to lay out the foundations here.
[00:52] So, we all know what chat GBT is. At its
[00:54] core, it's a large language model that
[00:55] we talk to with an input and then it
[00:57] basically just gives us an output. So,
[00:58] if we wanted to leverage chatbt to help
[01:00] us write a blog post, we would ask it to
[01:02] write a blog post about a certain topic.
[01:04] It would do that and then it would give
[01:05] us the output which we would then just
[01:07] copy and paste somewhere else. And then
[01:08] came the birth of AI agents, which is
[01:10] when we actually were able to give tools
[01:12] to our LLM so that they could not only
[01:14] just generate content for us, but they
[01:16] could actually go post it or go do
[01:17] whatever we wanted to do with it. AI
[01:19] agents are great and there's definitely
[01:20] a time and a place for them because they
[01:22] have different tools and basically the
[01:23] agent will use its brain to understand
[01:25] okay I have these three tools based on
[01:27] what the user is asking me do I call
[01:29] this one and then do I output or do I
[01:31] call this one then this one or do I need
[01:33] to call all three simultaneously it has
[01:35] that option and it has the variability
[01:37] there so this is going to be a
[01:38] non-deterministic workflow but the
[01:40] reality is most of the processes that
[01:42] we're trying to enhance for our clients
[01:44] are pretty deterministic workflows that
[01:46] we can build out with something more
[01:47] linear where we still have same tools.
[01:49] We're still using AI, but we have
[01:51] everything going step one, step two,
[01:53] step three, step four, step five, step
[01:55] six, which is going to reduce the
[01:57] variability there. It's going to be very
[01:58] deterministic and it's going to help us
[02:00] with a lot of things. So, stick with me
[02:02] because I'm going to show you guys an AI
[02:03] agent video that I made on YouTube a few
[02:05] months back and I started re-evaluating
[02:07] it like why would I ever build out the
[02:09] system like that? It's so inefficient.
[02:11] So, I'll show you guys that in a sec,
[02:12] but real quick, let's talk about the
[02:13] pros of AI workflows over AI agents. And
[02:15] I narrowed it down to four main points.
[02:17] The first one is reliability and
[02:19] consistency. One of the most important
[02:20] concepts of building an effective AI
[02:22] agent is the system prompt because it
[02:24] has to understand what its tools are,
[02:25] when to use each one, and what the end
[02:27] goal is, and it's on its own to figure
[02:29] out which ones do I need to call in
[02:30] order to provide a good output. But with
[02:32] a workflow, we're basically keeping it
[02:34] on track, and there's no way that the
[02:35] process can sort of deviate from the
[02:37] guardrails that we've set up because it
[02:39] has to happen in order, and it can't
[02:41] really go anywhere else. So this makes
[02:42] systems more reliable because there's
[02:44] never going to be a transfer of data
[02:45] between workflows where things may get
[02:47] messed up or incorrect mappings being
[02:49] sent across, you know, agent to a
[02:51] different agent or agent to tool. We're
[02:53] just basically able to go through the
[02:54] process linearly. So the next one is
[02:56] going to be cost efficiency. When we're
[02:58] using an agent and it has different
[03:00] tools, every time it hits a tool, it's
[03:02] going to go back to its brain. It's
[03:03] going to rerun through its system prompt
[03:05] and it's going to think about what is my
[03:06] next step here. And every time you're
[03:08] accessing that AI agent's brain, it
[03:10] costs you money. So, if we're able to
[03:12] eliminate that aspect of decision-m and
[03:13] just say, "Okay, you you finished step
[03:15] two, now you have to go on to step
[03:17] three." There's no decision to be made,
[03:19] we don't have to make that extra API
[03:21] call to think about what comes next, and
[03:23] we're saving money. Number three is
[03:25] easier debugging and maintenance. When
[03:26] we have an AI workflow, we can see
[03:28] exactly which node errors. We can see
[03:30] exactly what mappings are incorrect and
[03:32] what happened here. Whereas with an AI
[03:34] agent workflow, it's a little bit
[03:36] tougher because there's a lot of
[03:37] manipulating the system prompt and
[03:38] messing with different tool
[03:39] configurations. And like I said, there's
[03:41] data flowing between agent to tool or
[03:43] between agent to subworkflow. And that's
[03:45] where a lot of things can happen that
[03:47] you don't really have full visibility
[03:48] into. And then the final one is
[03:50] scalability. Kind of backpacks right off
[03:51] of number three. But if you wanted to
[03:53] add more nodes and more functionality to
[03:55] a workflow, it's as simple as, you know,
[03:56] plugging in a few more blocks here and
[03:58] there or adding on to the back. But when
[04:00] you want to increase the functionality
[04:01] of an AI agent, you're probably going to
[04:03] have to give it more tools. And when you
[04:04] give it more tools, you're going to have
[04:06] to refine and add more lines to the
[04:08] system prompt, which could work great
[04:10] initially, but then previous
[04:12] functionality, the first couple tools
[04:13] you added, those might stop working or
[04:15] those may become less consistent. So
[04:17] basically, the more control that we have
[04:19] over the entire workflow, the better. AI
[04:21] is great. There are times when we need
[04:22] to make decisions and we need that
[04:24] little bit of flexibility. But if a
[04:26] decision doesn't have to be made, why
[04:27] would we leave that up to the AI to
[04:29] hallucinate five or 10% of the time when
[04:31] we could basically say, "Hey, this is
[04:32] going to be 100% consistent." Anyways,
[04:34] I've made a video that talks a little
[04:35] bit more about this stuff as well as
[04:37] other things I've learned over the first
[04:38] 6 months of building agents. If you want
[04:40] to watch that, I'll link it up here. But
[04:42] let's hop into Naden and take a look at
[04:43] some real examples. Okay, so the first
[04:45] example I want to share with you guys is
[04:47] a typical sort of rag agent. And for
[04:49] some reason, it always seems like the
[04:51] element of rag has to be associated with
[04:53] an agent, but it really doesn't. So,
[04:55] what we have is a workflow where we're
[04:56] putting a document from Google Drive
[04:57] into Pine Cone. We have a customer
[04:59] support agent and then we have a
[05:00] customer support AI workflow. And both
[05:02] of the blue box and the green box, they
[05:04] do the exact same thing, but this one's
[05:06] going to be more efficient and we also
[05:07] have more control. So, let's break this
[05:09] down. Also, if you want to download this
[05:10] template to play around with, you can
[05:11] get it for free if you go to my free
[05:13] school community. The link for that's
[05:14] down in the description as well. You'll
[05:15] come into here, click on YouTube
[05:16] resources, and click on the post
[05:18] associated with this video, and then the
[05:20] workflow will be right here for you to
[05:21] download. Okay. Okay. So, anyways, here
[05:23] is the document that we're going to be
[05:24] looking at. It has policy and FAQ
[05:26] information. We've already put it into
[05:28] Pine Cone. As you can see, it's created
[05:29] eight vectors. And now, what we're going
[05:31] to do is we're going to fire off an
[05:32] email to the customer support agent to
[05:34] see how it handles it. Okay. So, we just
[05:36] sent off, do you offer price matching or
[05:38] bulk discounts? We'll come back into the
[05:39] workflow, hit run, and we should see the
[05:41] customer support agent is hitting the
[05:43] vector database, and it's also hitting
[05:44] its reply email tool. But what you'll
[05:46] notice is that it hit its brain. So,
[05:48] Google Gemini 2.0 on a flash. In this
[05:50] case, not a huge deal because it's free.
[05:52] But if you were using something else,
[05:53] it's going to have hit that API three
[05:54] different times, which would be three
[05:56] separate costs. So, let's check and see
[05:58] if it did this correctly. So, in our
[06:00] email, we got the reply. We do not offer
[06:02] price matching currently, but we do run
[06:04] promotions and discounts regularly. Yes,
[06:06] bulk orders may qualify for a discount.
[06:08] Please contact our sales team at
[06:09] saleshaven.com for inquiries. So, let's
[06:11] go validate that that's correct. So, in
[06:13] the FAQ section of this doc, we have
[06:15] that they don't offer price matching,
[06:16] but they do run promotions and discounts
[06:18] regularly. And then for bulk discounts,
[06:20] um, you have to hit up the sales team.
[06:22] So, it answered correctly. Okay. So, now
[06:24] we're going to run the customer support
[06:25] AI workflow down here. It's going to
[06:27] grab the email. It's going to search
[06:28] Pine Cone. It's going to write the
[06:30] email. I'll explain what's going on here
[06:31] in a sec. And then it responds to the
[06:33] customer. So, there's four steps here.
[06:34] It's going to be an email trigger. It's
[06:36] going to search the knowledge base. It's
[06:37] going to write the email. And then
[06:38] respond to the customer in an email. So,
[06:41] why would we leave that up to the agent
[06:42] to decide what it needs to do if it's
[06:44] always going to happen in those four
[06:45] steps every time? All right, here's the
[06:47] email we just got in reply. As you can
[06:49] see, this is the one that the agent
[06:50] wrote, and this one looks a lot better.
[06:51] Hello, thank you for reaching out to us.
[06:53] In response to your inquiry, we
[06:54] currently do not offer price matching.
[06:56] However, we do regularly run promotions
[06:58] and discounts, so be sure to keep an eye
[07:00] out for those. That's accurate.
[07:02] Regarding bulk discounts, yes, they may
[07:04] indeed qualify for a discount, so reach
[07:05] out to our sales team. If you have any
[07:07] other questions, please feel free to
[07:08] reach out. Best regards, Mr. helpful
[07:10] tech haven. And obviously I told it to
[07:13] sign off like that. So now that we've
[07:15] seen that, let's actually break down
[07:16] what's going on. So it's the same
[07:18] trigger. You know, we're getting an
[07:19] email and as you can see, we can find
[07:20] the text of the email right here, which
[07:22] was, "Do you guys offer price matching
[07:23] or bulk discounts?" We're feeding that
[07:26] into a pine cone node. So if you guys
[07:27] didn't know, you don't even need these
[07:29] to be only tools. You can have them just
[07:30] be nodes. Or we're searching for the
[07:32] prompts that is, do you guys offer price
[07:34] matching or bulk discounts? And maybe
[07:36] you might want an AI step between the
[07:38] trigger and the search to maybe like
[07:40] formulate a query out of the email if
[07:42] the email is pretty long. But in this
[07:44] case, that's all we did. And now we can
[07:45] see we got those four vectors back. Same
[07:48] way we would have with the agent. But
[07:49] what's cool is we have a lot more
[07:51] control over it. So as you can see, we
[07:53] have a vector and then we have a score,
[07:55] which basically ranks how relevant it
[07:57] the vector was to the query that we sent
[07:59] off. And so we have some pretty low ones
[08:01] over here. But what we can do is say,
[08:03] okay, we only want to keep if the score
[08:05] is greater than 04. So, it's only going
[08:07] to be keeping these two, as you can see.
[08:08] And it's getting rid of these two that
[08:10] aren't super relevant. And this is
[08:11] something that's a lot easier to control
[08:13] in this linear flow compared to having
[08:15] the agent try to filter through vector
[08:17] results up here. Anyways, then we're
[08:19] just aggregating however many results it
[08:21] pulls back. If it's four, if it's three,
[08:23] or if it's just one, it's still just
[08:24] going to aggregate them together so that
[08:26] we can feed it into our OpenAI node
[08:28] that's going to write the email. So
[08:29] basically in the user prompt we said
[08:31] okay here's the customer inquiry here's
[08:32] the original email and here's the
[08:34] relevant knowledge that we found all you
[08:36] have to do now is write an email and so
[08:37] by giving this AI node just one specific
[08:39] goal it's going to be more quality and
[08:42] consistent with its outputs rather than
[08:43] we gave the agent multiple jobs it had
[08:46] to not only write the email but it also
[08:47] had to figure out how to search through
[08:49] information and figure out what the next
[08:50] step was. So this node it only has to
[08:53] focus on one thing it has the knowledge
[08:55] handed to it on a silver platter to
[08:56] write the email with and basically we
[08:58] said you're Mr. helpful. A customer
[09:00] support rep for TechHaven. Your job is
[09:01] to respond to incoming customer emails
[09:03] with accurate information from the
[09:04] knowledge base. You must only answer
[09:06] using relevant knowledge provided to
[09:08] you. Don't make anything up. We gave it
[09:10] the tone and then we said only output
[09:11] the body in a clean format. It outputs
[09:13] that body and then all it had to do was
[09:15] map in the correct message ID and the
[09:17] correct message content. Simple as that.
[09:20] So, I hope this makes sense. Obviously,
[09:21] it's a lot cooler to watch the agent do
[09:23] something like that up here, but this is
[09:25] basically the exact same flow and I
[09:26] would argue that it's going to be a lot
[09:28] better, more consistent, and cheaper.
[09:30] Okay, so now to show an example where I
[09:32] released this as a YouTube video and a
[09:34] couple weeks later I was like, why did I
[09:35] do it like that? So, what we have here
[09:37] is a technical analyst. And so,
[09:39] basically, we're talking to it through
[09:40] Telegram and it has one tool which is
[09:43] basically going to get a chart image and
[09:45] then it's going to analyze the chart
[09:46] image and then it sends it back to us in
[09:47] Telegram. And this is the workflow that
[09:49] it's actually calling right here where
[09:51] we're making an HTTP request to
[09:53] chart-image. We're getting the chart,
[09:55] downloading it, analyzing the image,
[09:56] sending it back, and then responding
[09:58] back to the agent. So there's basically
[09:59] like two transfers of data here that we
[10:01] don't need because as you can see down
[10:03] here, we have the exact same process as
[10:06] one simple AI workflow. So there's going
[10:08] to be much much less room for error
[10:10] here. But first of all, let's demo how
[10:11] this works and then we'll demo the
[10:13] actual AI workflow. Okay, so it should
[10:15] be listening to us now. I'm going to ask
[10:17] it to analyze Microsoft. And as you can
[10:18] see, it's now hitting that tool. We
[10:20] won't see this workflow actually in real
[10:22] time just because it's like calling a
[10:24] different execution, but this is the
[10:25] workflow that it's calling down here. I
[10:27] can actually just it's basically calling
[10:28] this right here. Um, so what it's going
[10:30] to do is it's going to send us an image
[10:32] and then a second or two later, it's
[10:34] going to send us an actual analysis. So
[10:36] there is Microsoft's stock chart and now
[10:38] it's creating that analysis as you can
[10:40] see right up here and then it's going to
[10:41] send us that analysis. We just got it.
[10:43] So, if you want to see the full video
[10:44] that I made on YouTube, I'll I'll tag it
[10:46] right up here, but not going to dive too
[10:48] much into what's actually happening. I
[10:49] just want to prove that we can do the
[10:50] exact same thing down here with a simple
[10:53] workflow. Although, right here, I did
[10:55] evolve this workflow a little bit. So,
[10:56] it's it it's not only looking at NASDAQ,
[10:58] but it can also choose different
[10:59] exchanges and feed that into the API
[11:01] call. But anyways, let's make this
[11:04] trigger down here active and let's just
[11:06] show off that we can do the exact same
[11:07] thing with the workflow and it's going
[11:10] to be better. So test workflow. This
[11:13] should be listening to us now. I'm just
[11:15] going to ask it to um we'll do a
[11:16] different one. Analyze uh Bank of
[11:18] America. So now it's getting it. It is
[11:20] going to be downloading the chart.
[11:22] Actually want to open up Telegram so we
[11:23] can see. Downloading the chart,
[11:25] analyzing the image. It's going to send
[11:26] us that image. And then pretty much
[11:29] immediately after it should be able to
[11:30] send us that analysis. So we don't have
[11:32] that awkward 2 to 5 second wait.
[11:35] Obviously we're waiting here, but as
[11:37] soon as this is done, we should get the
[11:38] both the image and the text
[11:39] simultaneously. There you go. And so you
[11:41] can see the results are basically the
[11:43] same, but this one is just going to be
[11:45] more consistent. There's no transfer of
[11:47] data between workflow. There's no need
[11:48] to hit an AI model to decide what tool I
[11:51] need to use. It is just going to be one
[11:53] seamless flow. You can al also get this
[11:55] workflow in the free school community if
[11:56] you want to play around with it. Just
[11:58] wanted to throw that out there. Anyways,
[12:00] that's going to wrap us up here. I just
[12:01] wanted to close off with this isn't me
[12:03] bashing on AI agents. Well, I guess a
[12:05] little bit it was. AI agents are super
[12:07] powerful. They're super cool. It's
[12:08] really important to learn prompt
[12:10] engineering and giving them different
[12:11] tools, but it's just about
[12:12] understanding, am I forcing an agent
[12:15] into something that doesn't need it. Am
[12:17] I exposing myself to the risk of lower
[12:19] quality outputs, less consistency, more
[12:21] difficult time scaling this thing?
[12:23] Things along those lines. And so that's
[12:25] why I think it's super important to get
[12:26] into something like Excala Draw,
[12:28] wireframe out the solution that you're
[12:29] looking to build. Understand what are
[12:31] all the steps here? What are the
[12:32] different API calls or different people
[12:34] involved? What could happen here? Is
[12:37] this deterministic or is there an aspect
[12:39] of decision-m and variability here?
[12:41] Essentially, is every flow going to be
[12:43] the same or not the same? So, that's
[12:45] going to be it for this one. Let me know
[12:47] down below what you guys thought. I
[12:49] appreciate all the support as always.
[12:50] Appreciate you guys making it to the end
[12:51] of this one. And, you know, thanks for
[12:53] 100K. We just hit that milestone, so
[12:55] that was super super exciting to see.
[12:56] But, if you guys appreciated this video
[12:58] or you learned something new or you just
[12:59] enjoyed, please give it a like.
[13:00] Definitely helps me out a ton. Hit that
[13:02] subscribe button. It is completely free
[13:04] and takes 2 seconds. But anyways, I'll
[13:07] see you guys in the next one.