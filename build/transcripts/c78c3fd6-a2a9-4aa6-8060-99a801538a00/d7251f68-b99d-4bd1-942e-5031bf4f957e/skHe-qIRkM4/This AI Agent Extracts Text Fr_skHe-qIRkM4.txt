Video Title: This AI Agent Extracts Text From Images in n8n
Video ID: skHe-qIRkM4
URL: https://www.youtube.com/watch?v=skHe-qIRkM4
View Count: 45,092

[00:00] we got telegram open I'm just going to
[00:01] drag over an invoice here drop it in to
[00:03] telegram hit send and now we will see
[00:05] telegram's going to download that file
[00:06] we're hitting an OCR API which is going
[00:09] to take the image extract the text it's
[00:11] going to parse it out it updates our
[00:13] database with our invoices and now we're
[00:14] redownloading that file so we can put it
[00:16] into a Google Drive so we can access
[00:17] that original file if we want and now
[00:19] we're hitting the agent which we just
[00:20] saw we got a response thanks for
[00:22] submitting the invoice the total amount
[00:24] is 950 due date is December 15th it
[00:26] gives us some notes so please make the
[00:28] payment without the due within the due
[00:29] dat to avoid late fees it gives us some
[00:31] contact information um it tells us about
[00:33] the penalties and then it says that the
[00:35] original invoice has been added to the
[00:36] Google drive here is the file name and
[00:38] then you can also access the database
[00:40] here so we're going to open up that
[00:42] database we will see that this invoice
[00:44] got populated into our database here and
[00:46] then if we go to our Google Drive we can
[00:48] see that we got the actual invoice put
[00:50] in here the original file so in case we
[00:52] need to look at it we're good to go so
[00:54] that is what's going on in this workflow
[00:56] let's dive into what's going on within
[00:57] each node okay so let's dive into what's
[01:00] going on within this invoice agent as
[01:02] you saw in the demo we're talking to it
[01:03] through telegram so right here is where
[01:04] we send an image file of an invoice and
[01:07] then it will download the file send it
[01:08] off to an OCR to analyze the image
[01:11] extract the text we're then parsing the
[01:12] text putting it into our database we're
[01:14] redownloading the file because um and
[01:17] then's kind of weird about the way that
[01:18] binary information can pass through so
[01:19] we'll talk about that but then we're
[01:21] downloading that file so we can put it
[01:22] into our Google drive folder of all of
[01:24] our invoices and then we're pretty much
[01:26] just giving the agent the information it
[01:27] needs in order to write a response to us
[01:29] back in telegram of course so let's um
[01:32] walk through a live example where we
[01:33] actually trigger this workflow and we'll
[01:35] go through no by node and we'll watch
[01:36] the data move through each step all
[01:39] right I'm going to be using the same
[01:40] example invoice from the demo so we'll
[01:42] hit test step we will hop into our
[01:43] Telegram and just drag in the sample
[01:45] invoice hit send and now we have the
[01:47] information coming back so what's
[01:49] important to understand here is that
[01:50] we're looking for um a file ID and as
[01:53] you can see there are three different
[01:54] file IDs coming through um and you can
[01:56] see there's different there different
[01:57] sizes and different sort of dimensions
[02:00] so what we did was we grabbed the
[02:01] largest one pretty sure and that's the
[02:04] one we wanted to download just so it's
[02:05] the best quality um we downloaded
[02:07] document. file ID and if we hit test
[02:10] step we can see that we're downloading
[02:11] that file and now let's say we wanted to
[02:13] download this to make sure it's coming
[02:14] through correctly we can see this is the
[02:16] sample invoice that we're using um we
[02:18] got the number the date the amount the
[02:20] address the due date and then some notes
[02:22] and we're not giving the agent all of
[02:24] this information because obviously if we
[02:26] saw the invoice and we sent a picture we
[02:28] don't want a full summary of exactly all
[02:30] this we kind of maybe just want the date
[02:33] the due date the amount and then the
[02:34] notes that's how we have it set up but
[02:36] obviously you can change however you
[02:37] want the agent to get your stuff back
[02:40] anyways once we download that file as
[02:41] you saw it was um comes through as
[02:43] binary so all we're getting here is the
[02:46] file ID and um the path and we're
[02:49] actually really looking for the binary
[02:51] so that we can pass it into OCR an OCR
[02:54] to download this information so I am
[02:57] using a free OCR it's only limits really
[02:59] are that you can't have a file that's
[03:00] bigger than 1 Megabyte in this case
[03:02] we're fine um this is what it looks like
[03:04] um I'll put a link for this specific OCR
[03:07] that I used in the description OCR
[03:09] stands for optimal character recognition
[03:11] and it's basically just a better way of
[03:14] getting text from an image obviously
[03:16] this is a free one so it's probably not
[03:17] the highest quality but um if you were
[03:19] to use like an open AI
[03:21] um analyze an image
[03:23] node it's it's just not really great yet
[03:26] so you have this option here which can
[03:27] do some basic stuff which is cool to
[03:29] play with of course but um if you really
[03:31] need to get in you know like complicated
[03:33] PDFs and stuff like that you probably
[03:34] want to use a third party um OCR so
[03:37] anyways we're setting up this request
[03:39] here of
[03:40] course you will um you put in the
[03:42] endpoint you need to put in your API key
[03:44] and then I pretty much just told it that
[03:47] we're loading in an nnn binary file and
[03:50] then in the binary file um we're just
[03:52] looking for the in input field called
[03:54] data which is right
[03:56] here um so yeah that's pretty much it
[03:58] we'll hit test step and then while this
[04:00] is running I just wanted to say um this
[04:01] workflow that you see right here will be
[04:03] available for download in the free
[04:04] school Community Link for that will be
[04:05] down in the description you'll just
[04:07] download the workflow and then you can
[04:08] import it straight into your NAD you'll
[04:10] have it up and running right away um and
[04:12] then if you're looking to go a little
[04:13] bit deeper you want to go into some deep
[04:14] Dives some hands- on learning some real
[04:16] projects insights then check out my paid
[04:18] Community Link for that will also be
[04:19] down in the description and then if you
[04:21] want me to sort of build out some stuff
[04:22] like that or you're looking for some
[04:24] consulting services for your business
[04:26] then check out the website um my website
[04:29] in the description as well and you can
[04:30] book in a call anywayss so what we see
[04:33] here is we take the binary the file the
[04:35] jpeg file and then once it goes through
[04:37] this HTTP request to this OCR we're
[04:40] getting the actual parse text back so um
[04:43] let me just make this a little
[04:45] bigger can I not expand this okay
[04:47] anyways um parse text so we're getting
[04:49] the invoice number the date the amount
[04:51] billing address we're getting all the
[04:52] information back um pretty much as we
[04:54] saw it right here so that's what we're
[04:57] getting back and from here we're just
[04:59] parsing information so I had chat gbt
[05:02] write this code um I didn't write this
[05:04] at all of course and all it's taking is
[05:06] it's taking this input and then it's
[05:08] just going to get us out the different
[05:09] fields for um you know as you can see
[05:12] invoice number invoice date total amount
[05:14] billing address due date and notes so
[05:16] that's all that's happening in this code
[05:17] node we're just parsing out the text and
[05:19] we want them in separate Fields so that
[05:21] in our Google Sheets node or if you're
[05:22] going to use air table or base row
[05:24] anything like that we can just specify
[05:26] what columns we want what data we want
[05:29] to go to column so um in the example as
[05:32] you can see in our Google Sheets we have
[05:34] the columns invoice date invoice number
[05:37] date total amount all this kind of stuff
[05:39] and then if we are to um hit test step
[05:42] and pop back into our database we will
[05:43] see that information will populate
[05:45] through because we were able to
[05:46] configure you know which information we
[05:49] want to go to which column so that's all
[05:52] that's happening here as you can see we
[05:53] set up that kind of stuff right in this
[05:55] node and then from there this is what I
[05:57] was talking about where we wanted to
[06:01] have the original file that we sent over
[06:03] in our telegram that got downloaded
[06:04] right here we want this file to be put
[06:07] into our Google Drive of invoices and we
[06:10] can see all the different invoices in
[06:12] case we want to just go reference the
[06:13] original image so when we do this we
[06:18] need to give the Google Drive node the
[06:21] binary that we want to actually be
[06:24] downloaded so it's a little bit weird in
[06:27] NN when you have a binary file like we
[06:29] see right here
[06:30] here it's hard to reference that back
[06:32] later because you can see we're getting
[06:34] binary but in the schema we don't see
[06:36] the binary anywhere in the table we
[06:38] don't see the binary anywhere so it's
[06:39] hard to later reference it it pretty
[06:41] much has to be you know the binary has
[06:44] to be the node that feeds straight into
[06:45] the next node that needs to use that
[06:47] input field called data which is binary
[06:50] so if we run this again all that we're
[06:52] doing here is we're just redownloading
[06:53] the file um we're referencing the node
[06:57] that we did earlier which was over here
[06:58] and we're just referencing the file ID
[06:59] that originally gave it so these nodes
[07:02] are practically identical so we're
[07:04] downloading the file and then when we
[07:05] hop into this Google Drive node we have
[07:07] the binary right here to actually
[07:08] reference again so all we're doing here
[07:11] is we're setting up the file name which
[07:12] I hardcoded in invoice square brackets
[07:14] and then I used a formula to just say we
[07:17] want today's date um so we have invoice
[07:20] December 5th 2024 and I played around
[07:23] with the formatting here um actually
[07:25] I'll keep it in here but if we went to
[07:28] if we went in here right and Weck
[07:29] changed the format so we did this oh
[07:33] okay um I have an
[07:35] extra anyways let's just do this again
[07:37] so we have we have now right dollar sign
[07:39] now gives us the date and we don't want
[07:41] the invoice to come in like that so if
[07:42] we do format we get it like
[07:45] this we have the four digigit year with
[07:48] the months and with the dates and so all
[07:50] I did was I took away the year because I
[07:52] don't want that in the front I came back
[07:54] and put the year in the end and then I
[07:56] also wanted the month to be an actual
[07:59] the full name rather than 12 so if I do
[08:02] one more M it goes to the shortened full
[08:03] name which is des for December and if I
[08:06] put one more M it goes to the full
[08:07] December 5th 2024 so that's all I did
[08:09] there and then we just have to link to
[08:11] what um folder we want it's in my drive
[08:14] and we're uploading it to the folder
[08:16] called invoices so we hit test step
[08:19] here this is just extracting the not
[08:22] extracting it's just downloading the
[08:23] file so it can put it in and then this
[08:25] is basically a success message that says
[08:27] that we got it you know the image type
[08:28] is a Json or jpeg it gives us the link
[08:31] to that folder and then if we come in
[08:33] here we should see we just got the
[08:34] second one um at 1112
[08:37] so if we click on it that's the original
[08:39] invoice okay and then from there we're
[08:41] pretty much done so in the set node all
[08:43] we're doing is we're giving the agent
[08:44] the invoice information and the file
[08:46] name so in here we have um the results
[08:50] from the OCR so we have the text that we
[08:53] extracted and then in here we're just
[08:55] giving it the json. name which came from
[08:57] our um file Google drive file
[09:01] thing and then here we're just giving it
[09:03] the actual name of the file that we just
[09:05] created which is invoice with the date
[09:08] um and maybe you want to play around
[09:09] with that in case you're uploading
[09:10] multiple
[09:12] invoices in the same day so but this is
[09:15] just an example so we're giving it this
[09:16] information so that the agent now
[09:18] has invoice information the file name
[09:21] and a link to the invoice database and
[09:24] then we're telling it in here
[09:26] basically you know this prompt will be
[09:27] included in the workflow if you choose
[09:29] to download it but we're giving it the
[09:31] it's Ro it's a very simple ro we're
[09:33] giving it an example input and then
[09:35] giving it an example output so the way
[09:36] we want it to be structured we want it
[09:38] to be readable we don't want it to
[09:39] Output all the information it's getting
[09:41] just kind of a high level summary so
[09:43] we'll hit test step
[09:45] here we will see that we are getting um
[09:48] thanks for submitting the invoice the
[09:49] total amount is this the due day is this
[09:51] and then some notes and then once again
[09:54] the link so from there we're just
[09:55] feeding it into telegram as you can see
[09:57] we just got this message back it's very
[09:59] clean it has um line breaks it gives us
[10:01] the link to the database and then um
[10:03] yeah that's pretty much all it is all
[10:05] we're doing is we have to configure in
[10:07] here the chat ID so from the telegram
[10:09] trigger let me just go into this real
[10:11] quick from the telegram trigger we're
[10:12] getting some stuff back and if you see
[10:13] right here we have a chat ID this
[10:15] basically is just the identifier of this
[10:18] channel that we're texting the telegram
[10:20] bot in so that's why we need to make
[10:21] sure that we're responding to that chat
[10:24] ID we give it the text which is just the
[10:26] output from the agent and then um
[10:29] obviously with our window buffer
[10:31] memory we're also giving it you know
[10:34] normally when you set up window buffer
[10:35] memory it's going to do take from
[10:36] previous note automatically but we
[10:38] wanted to Define this below and once
[10:40] again we are doing the chat ID so this
[10:42] key right here is the exact same key
[10:45] that we're going into here for the chat
[10:46] ID responding to the telegram agent so I
[10:49] know this one was a quick simple build
[10:51] but hopefully the workflow here has
[10:52] sparked some ideas for you if you choose
[10:54] to download the file um you know maybe
[10:56] you can play around with ways you can
[10:57] expand off the build make it a little
[10:58] more production ready one thing I wanted
[11:00] to mention real quick is I if you notice
[11:03] this was as a tools agent even though it
[11:04] has no tools simply because I started
[11:07] this off with a conversational agent but
[11:08] it wasn't completely understanding my
[11:10] prompting the way I wanted it to um it
[11:12] wasn't outputting the information the
[11:13] way I want it to and I switched it to a
[11:14] tools agent I gave it the same prompt
[11:16] and it just seemed to work a little
[11:17] better so that's the only reason I did
[11:19] that there but if you guys enjoyed this
[11:20] one please give it a like definitely
[11:22] helps me out um let me know in the
[11:23] comments what else you want to see and
[11:25] um hopefully I'll see you guys in the
[11:26] school Community or on some of the live
[11:27] calls in the pay community so thanks
[11:29] guys