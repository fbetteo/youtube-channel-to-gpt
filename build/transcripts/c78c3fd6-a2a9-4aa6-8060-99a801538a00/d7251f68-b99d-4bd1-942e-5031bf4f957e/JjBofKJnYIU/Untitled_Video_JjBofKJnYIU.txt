Video Title: Untitled_Video
Video ID: JjBofKJnYIU
URL: https://www.youtube.com/watch?v=JjBofKJnYIU
View Count: 0

[00:00] so today I'm going to be showing you
[00:00] guys how to connect postgress SQL and
[00:02] superbase to naden so what I'm going to
[00:04] be doing today is walking through
[00:05] signing up for an account creating a
[00:07] project and then connecting them both to
[00:08] Ed in so you guys can follow every step
[00:10] of the way but real quick postgress is
[00:12] an open source relational database
[00:13] management system that you're able to
[00:15] use plugins like PG Vector if you want
[00:16] Vector similarity search in this case
[00:18] we're just going to be using postgress
[00:19] as the memory for our agent and then
[00:21] superbase is a backend as a service
[00:22] that's kind of built on top of postgress
[00:24] and in today's example we're going to be
[00:25] using that as the vector database but
[00:27] don't want to waste any time here we are
[00:28] at nadn and what we know we're going to
[00:30] do here for our agent is give it memory
[00:32] with postgress and access to a vector
[00:34] database and superbase so for memory I'm
[00:36] going to click on this plus and click on
[00:37] postgress chat memory and then we'll set
[00:38] up this credential and then over here we
[00:40] want to click on the plus for Tool we'll
[00:42] grab a superbase vector store node and
[00:44] then this is where we'll hook up our
[00:45] superbase credential so whenever we need
[00:46] to connect to these third party Services
[00:48] what we have to do is come into the node
[00:50] go to our credential and then we want to
[00:51] create a new one and then we have all
[00:53] the stuff to configure like our host our
[00:54] username our password our Port all this
[00:57] kind of stuff so we have to hop into
[00:58] subase first create a account create a
[01:00] new project and then we'll be able to
[01:02] access all this information to plug in
[01:04] so here we are in superbase I'm going to
[01:05] be creating a new account like I said
[01:06] just so we can walk through all of this
[01:08] step by step for you guys so first thing
[01:09] you want to do is sign up for a new
[01:10] account so I just got my confirmation
[01:12] email so I'm going to go ahead and
[01:13] confirm once you do that it's going to
[01:14] have you create a new organization and
[01:16] then within that we create a new project
[01:17] so I'm just going to leave everything as
[01:19] is for now it's going to be personal
[01:20] it's going to be free and I'll hit
[01:21] create organization and then from here
[01:23] we are creating a new project so I'm
[01:24] going to leave everything once again as
[01:25] is this is the organization we're
[01:27] creating the project in here's the
[01:28] project name and then you need to create
[01:29] create a password and you're going to
[01:31] have to remember this password to hook
[01:32] up to our subbase node later so I've
[01:34] entered my password I'm going to copy
[01:36] this because like I said you want to
[01:37] save this so you can enter it later and
[01:39] then we'll click create new project this
[01:40] is going to be launching up our project
[01:42] and this may take a few minutes so um
[01:44] just have to be patient here as you can
[01:46] see we're in the screen it's going to
[01:47] say setting up project so we pretty much
[01:48] are just going to wait until our
[01:50] project's been set up so while this is
[01:51] happening we can see that there's
[01:52] already some stuff that may look a
[01:53] little confusing we've got project API
[01:55] keys with a service R secret we have
[01:57] configuration with a different URL and
[01:59] some sort of JW secret so I'm going to
[02:01] show you guys how you need to access
[02:03] what it is and plug it into the right
[02:05] places in N end but as you can see we
[02:07] got launched to a different screen the
[02:08] project status is still being launched
[02:10] so just going to wait for it to be
[02:11] complete so everything just got set up
[02:13] we're now good to connect to nadn and
[02:15] what you want to do is typically You'
[02:16] come down to product settings and you
[02:17] click on database and this is where
[02:19] everything would be to connect but it
[02:20] says connection string has moved so as
[02:22] you can see there's a little button up
[02:23] here called connect so we're going to
[02:24] click on this and now this is where
[02:25] we're grabbing the information that we
[02:27] need for postgress so this is where it
[02:29] gets a little confused using because
[02:30] there's a lot of stuff that we need for
[02:31] postgress we need to get a host a
[02:33] username our password from earlier when
[02:35] we set up the project and then a port so
[02:37] all we're looking for are those four
[02:38] things but we need to find them in here
[02:40] so what I'm going to do is change the
[02:41] type to postgress SQL and then I'm going
[02:43] to go down to the transaction Pooler and
[02:46] this is where we're going to find the
[02:46] things that we need the first thing that
[02:48] we're looking for is the host which if
[02:49] you set it up just like me it's going to
[02:51] be after the dash so it's going to be
[02:53] AWS and then we have our region. pool.
[02:55] superb.com so we're going to grab that
[02:57] copy it and then we're going to paste
[02:59] paste that into the host section right
[03:01] there so that's what it should look like
[03:02] for host now we have a database and a
[03:04] username to set up so if we go back into
[03:05] that superbase page we can see we have a
[03:07] d and a u so the D is going to stay as
[03:09] postgress but for user we're going to
[03:12] grab everything after the U which is
[03:13] going to be postgress dcom and then
[03:15] these um different characters so I'm
[03:18] going to paste that in here under the
[03:19] user and for the password this is where
[03:21] you're going to paste in the password
[03:22] that you use to set up your superbase
[03:23] project and then finally at the bottom
[03:25] we're looking for a port which is by
[03:26] default 5342 but in this case we're
[03:29] going to grab the port from the
[03:30] transaction Pooler right here which is
[03:31] following the lowercase p so we have
[03:34] 6543 I'm going to copy that paste that
[03:36] into here as the port and then we'll hit
[03:38] save and we'll see if we got connection
[03:40] tested successfully there we go we got
[03:41] green and then I'm just going to rename
[03:42] this so I can keep it organized so there
[03:44] we go we have connected to postgress as
[03:46] our chat memory we can see that it is
[03:47] going to be using the connected chat
[03:49] trigger node that's how it's going to be
[03:50] using the key to store this information
[03:52] and it's going to be storing it in a
[03:53] table in super base called nadn chat
[03:55] histories so real quick I'm going to
[03:56] talk to the agent I'm just going to
[03:58] disconnect the super base so we don't
[03:59] get any errors so now when I send off
[04:00] hello AI agent it's going to respond to
[04:02] us with something like hey how can I
[04:04] help you today hello how can I assist
[04:05] you and now you can see that there were
[04:07] two things stored in our postgress chat
[04:08] memory so we'll switch over to superbase
[04:10] and now we're going to come up here in
[04:11] the left and go to table editor we can
[04:13] see we have a new table that we just
[04:15] created called nadn chat histories and
[04:17] then we have two messages in here so the
[04:18] first one as you can see was a human
[04:20] type and the content was hello AI agent
[04:22] which is what we said to the AI agent
[04:24] and then the second one was a typee Ai
[04:26] and this is the ai's response to us so
[04:28] it said hello how can i s you today so
[04:30] this is where all of your chats are
[04:32] going to be stored based on the session
[04:33] ID and just once again this session ID
[04:35] is coming from the connected chat
[04:36] trigger node so it's just coming from
[04:38] this node right here as you can see
[04:40] there's the session ID that matches the
[04:41] one in our our chat memory table and
[04:44] that is how it's using it to store sort
[04:46] of like the unique chat conversations
[04:49] cool now that we have postgress chat
[04:50] memory set up let's hook up our
[04:52] superbase Vector store so we're going to
[04:54] drag it in and then now we need to go up
[04:56] here and connect our credentials so I'm
[04:58] going to create new credential and we we
[04:59] can see that we need two things a host
[05:01] and a service R secret and the host is
[05:03] not going to be the same one as the host
[05:05] that we use to set up our postgress so
[05:07] let's hop into superbase and grab this
[05:08] information so back in superbase we're
[05:10] going to go down to the settings we're
[05:12] going to click on data API and then we
[05:14] have our project URL and then we have
[05:16] our service R secret so this is all
[05:18] we're using for URL we're going to copy
[05:20] this go back to subase and then we'll
[05:21] paste this in as our host as you can see
[05:23] it's supposed to be
[05:24] https um and then your superbase account
[05:27] so we'll paste that in and you can see
[05:29] that that's what we have. co also keep
[05:31] in mind this is because I launched up an
[05:33] organization and a project in superbases
[05:35] Cloud if you were to self-host this it
[05:36] would be a little different because
[05:37] you'd have to access your local host and
[05:40] then of course we need our service roll
[05:41] secret so back in superbase I'm going to
[05:43] reveal copy and then paste it into n and
[05:45] end so let me do that real quick and as
[05:46] you can see I got that huge token just
[05:48] paste it in so what I'm going to do now
[05:49] is save it hopefully it goes green there
[05:51] we go we have connection tested
[05:52] successfully and then once again just
[05:54] going to rename this The Next Step from
[05:56] here would be to create our superbase
[05:57] Vector store within the platform that we
[05:59] can actually push documents into so
[06:00] you're going to click on docs right here
[06:02] you are going to go to the quick start
[06:04] for setting up your vector store and
[06:05] then all you have to do right here is
[06:06] copy this command so in the top right
[06:08] copy this script come back into
[06:10] superbase you'll come on the left hand
[06:11] side to SQL editor you'll paste that
[06:13] command in here you don't change
[06:14] anything at all you'll just hit run and
[06:16] then you could should see down here
[06:17] success no rows returned and then in the
[06:19] table editor we'll have a new table over
[06:21] here called documents so this is where
[06:23] when we're actually vectorizing our data
[06:24] it's going to go into this table okay so
[06:26] I'm just going to do a real quick
[06:27] example of putting a Google doc into to
[06:29] our sub base Vector database just to
[06:31] show you guys that everything's
[06:32] connected the way it should be and
[06:33] working as it should so I'm going to
[06:34] grab a Google Drive node right here I'm
[06:36] going to click download file I'm going
[06:38] to select a file to download which in
[06:40] this case I'm just going to grab Body
[06:41] Shop Services terms and conditions and
[06:43] then hit test step and we'll see the
[06:45] binary data which is a doc file over
[06:47] here and now we have that information
[06:49] and what we want to do with it is add it
[06:50] to superbase superbase Vector store so
[06:53] I'm going to type in superbase we'll see
[06:54] Vector store the operation is going to
[06:56] be add documents to Vector store and
[06:59] then we have to choose the right
[07:00] credential because we have to choose the
[07:01] table to put it in so this is in this
[07:03] case we already made a table as you can
[07:05] see in our super base it's called
[07:06] documents so back in here I'm going to
[07:08] choose the credential I just made I'm
[07:10] going to choose insert documents and I'm
[07:11] going to choose the table to insert it
[07:12] to not the NAD and chat histories we
[07:14] want to insert this to documents because
[07:16] this one is set up for factorization
[07:19] from there I have to choose our document
[07:20] loader as well as our embeddings so I'm
[07:22] not really going to dive into exactly
[07:24] what this all means right now if you're
[07:25] kind of confused and you're wanting a
[07:27] deeper dive on Rag and building agents
[07:29] definitely check check out my paid
[07:29] Community we've got different deep dive
[07:31] topics about all this kind of stuff but
[07:33] I'm just going to set this up real quick
[07:34] so we can see the actual example I'm
[07:35] just choosing the binary data to load in
[07:37] here I'm choosing the embedding and I'm
[07:39] choosing our text splitter which is
[07:40] going to be recursive and so now all I
[07:42] have to do here is hit run it's going to
[07:44] be taking that binary data of that body
[07:45] shop file it split it up and as you can
[07:47] see there's three items so if we go back
[07:49] into our superbase Vector store and we
[07:51] hit
[07:52] refresh we now see three items in our
[07:54] Vector database and we have the
[07:56] different content and all this
[07:57] information here like the Standard Oil
[07:59] Change the synthetic oil change is
[08:00] coming from our body shop document that
[08:02] I have right here that we put in there
[08:03] just to validate the rag and we know
[08:06] that this is a vector database store
[08:07] rather than a relational one because we
[08:09] can see we have our Vector embedding
[08:10] over here which is all the dimensions
[08:12] and then we have our metadata so we have
[08:14] stuff like the source and um The Blob
[08:16] type all this kind of stuff and this is
[08:17] where we could also go ahead and add
[08:18] more metadata if we wanted to anyways
[08:20] now that we have vectors in our
[08:22] documents table we can hook up the
[08:24] actual agent to the the correct table so
[08:26] in here what I'm going to call this is
[08:28] um body shop for the description I'm
[08:30] going to say use this to get information
[08:34] about the body shop and then from the
[08:37] table name we have to choose the correct
[08:38] table of course so we know that we just
[08:39] put all this into something called
[08:41] documents so I'm going to choose
[08:42] documents and finally we just have to
[08:44] choose our embeddings of course so that
[08:46] it can embed the query and pull stuff
[08:48] back accurately and that's pretty much
[08:49] it we have our AI agent set up so let's
[08:52] go ahead and do a test and see what we
[08:53] get back so I'm going to go ahead and
[08:55] say what break services are offered at
[08:57] the body shop it's going to update the
[08:59] postgress memory so now we'll be able to
[09:00] see that query it hit the superbas
[09:02] vector store in order to retrieve that
[09:04] information and then create an augmented
[09:06] generated answer for us and now we have
[09:08] the body shop offers the following
[09:10] breake Services 120 per axle for
[09:12] replacement 150 per axle for rotor
[09:15] replacement and then full break
[09:16] inspection is 30 bucks so if we click
[09:19] back into our document we can see that
[09:20] that's exactly what it just pulled and
[09:22] then if we go into our Vector database
[09:24] within subase we can find that
[09:26] information in here but then we can also
[09:27] click on nadn chat history and we can
[09:29] see we have two more chats so the first
[09:31] one was a human which is what we said
[09:33] what break services are offered at the
[09:34] body shop and then the second one was a
[09:36] AI content which is the body shop offers
[09:38] the following break Services blah blah
[09:40] blah and this is exactly what it just
[09:42] responded to us with within naden down
[09:44] here as you can see and so keep in mind
[09:46] this AI agent has zero prompting we
[09:47] didn't even open up the system message
[09:49] all that's in here is you are a helpful
[09:50] assistant but if you are setting this up
[09:52] what you want to do is you know explain
[09:53] its role and you want to tell it you
[09:55] know you have access to a vector
[09:56] database it is called X it has
[09:58] information about X Y and Z and you
[10:00] should use it when a client asks about X
[10:03] Y and Z anyways that's going to be it
[10:04] for this one SB Bas and postgress are
[10:06] super super powerful tools to use to
[10:08] connect up as a database for your agents
[10:09] whether it's going to be relational or
[10:11] vector databases and you've got lots of
[10:13] options with you know self-hosting and
[10:14] some good options for security and
[10:16] scalability there so anyways hope this
[10:17] one was helpful if you learned something
[10:19] new please give it a like it definitely
[10:20] helps me out a lot and appreciate you
[10:22] guys as always so thanks see you in the
[10:24] next one