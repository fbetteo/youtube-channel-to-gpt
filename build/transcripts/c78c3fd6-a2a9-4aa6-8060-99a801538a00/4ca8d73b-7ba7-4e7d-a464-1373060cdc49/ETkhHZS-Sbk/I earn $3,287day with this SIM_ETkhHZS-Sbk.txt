Video Title: I earn $3,287/day with this SIMPLE tech stack
Video ID: ETkhHZS-Sbk
URL: https://www.youtube.com/watch?v=ETkhHZS-Sbk
View Count: 32,473

[00:00] pick one text tag and stick to it
[00:01] forever. 3 years ago, I made the
[00:03] decision to never ever change my text
[00:05] tag ever again. And since that, I have
[00:07] built over 30 website that gets around
[00:09] 500,000 page views per month and make
[00:11] over a million dollar per year. Okay,
[00:12] let's start with the front end because
[00:13] front end is always funnier than back
[00:15] end. H I use React, the most popular
[00:18] library, uh to build all my user
[00:20] interface. What I love about it is that
[00:21] they have a bunch of libraries. So, for
[00:23] instance, the beautiful charts I showed
[00:24] you earlier, it's coming from the
[00:26] Rechart library. It's just so easy to
[00:27] build pretty much anything with React.
[00:29] And often people say React is hard. I
[00:31] don't think React is really hard if
[00:32] you're using for like building little uh
[00:34] internet businesses. Those are all the
[00:36] stuff. I don't know how it works in
[00:38] React. I just use those three hooks and
[00:40] it works pretty well for my 30 websites.
[00:42] Okay, now moving on with my favorite
[00:44] part of coding, the design and styling.
[00:47] Uh I use Tailg CSS instead of CSS. Uh
[00:50] man, this is just so good. I don't even
[00:52] know why someone would use CSS. It comes
[00:54] with a bunch of pretty fine colors. Uh
[00:56] you also have all those animation
[00:58] transitions like uh it's super easy to
[00:59] write helm in CSS. I use it for every
[01:01] single my website and even this little
[01:03] uh game I made on top of it. I add Daisy
[01:06] UI. So it's my UI component library. Be
[01:08] very careful here. This is where people
[01:10] will try to get you to switch to their
[01:12] new trendy UI library. Don't fall for
[01:14] it. Stick to one UI library you like.
[01:16] Mine is Daisy UI. You have access to uh
[01:18] all of those components and a bunch of
[01:20] others like toggles, form, etc. And you
[01:22] can also customize each of them if you
[01:24] want. And so for instance, I always
[01:26] start with the same base project. So the
[01:28] buttons always have a similar look. And
[01:30] then I would customize the colors. For
[01:32] instance, uh on this website, it's more
[01:33] of a gradient style, but they behave the
[01:35] same. So there's this like a little
[01:36] animation, popsup animation, but under
[01:38] the hood, those two website are using
[01:40] the exact same Daisy UI templates. And
[01:43] also they have over 30 themes, so you
[01:45] can customize to um as deep as you want.
[01:47] And finally, I wrap everything inside of
[01:49] a Nex.js project. And I absolutely love
[01:52] it. If I want to create a new page, I
[01:53] just create a page.j js file. If I want
[01:55] to create a new layout that applies to
[01:57] all of my other pages, I just create a
[01:59] layout.js file. It's just so easy. And
[02:01] then I can easily have a bunch of pages
[02:03] created for me. For instance, this is
[02:05] another of my project that gets a couple
[02:07] hundred pages ranked on Google. And uh
[02:09] it's using basically pages and layout
[02:11] from Nex.js. So I have those like
[02:13] programmatic SEO pages automatically
[02:15] generated for me. This is just make it
[02:16] so easy to create a proper page and have
[02:18] it indexed on Google. And here we go.
[02:20] For the backend part, I use uh Nex.js js
[02:23] for all of my API endpoint. It's
[02:25] literally that simple. I just create a
[02:28] route.js inside of a big API folder and
[02:32] boom, I have a post endpoint. I have a
[02:34] patch endpoint. I have a delete
[02:35] endpoint. I have literally everything I
[02:37] want inside of the exact same project. I
[02:40] don't have to uh bother creating a new
[02:41] server. I don't have to uh maintain the
[02:43] server. I don't have to update my
[02:44] server. Uh this is using serverless. And
[02:46] this is just so simple. And for the
[02:48] database, I use MongoDB. I don't know
[02:50] why whenever I tweet about MongoDB
[02:52] people say that this is one of the worst
[02:54] database in the world. I have no idea
[02:56] because all of my projects are running
[02:57] on MongoDB. They have a free plan so you
[02:59] can get started for nothing. They have
[03:01] automated backup so I don't have to
[03:02] think about you know what if something
[03:04] goes wrong. And also I forgot to add the
[03:06] icon but on top of MongoDB I use mongus
[03:08] just to organize a little bit my
[03:09] document. So in every of my project
[03:11] there is a models folder. Uh there's one
[03:13] usually for the user who sign in. There
[03:15] is usually a model for every type of
[03:17] data the users can create and inside I
[03:20] have just a bunch of keys that you know
[03:21] I want to say for users a name email
[03:24] customer ID that I get from stripe etc
[03:26] etc and then in any API endpoint I just
[03:29] do userfind by ID and then I retrieve
[03:31] the user I update whatever the data is
[03:33] uh it's just so simple and now for the
[03:36] hosting part where where is the money
[03:38] spent uh in versal and MongoDB Atlas for
[03:41] Versal I host uh my front end and my
[03:43] back end because once again I'm using
[03:44] Nex.js. So I have my API and my front
[03:47] end in the same project. So everything
[03:49] is hosted on Versal. Uh those are all of
[03:51] my projects. I have been using Versal
[03:53] since I guess 2021 or something. And I
[03:56] just love it because it's just so so so
[03:58] easy to I just click and it deploys. All
[04:00] I have to do is to uh commit and push to
[04:02] prod and then it will be redeployed
[04:03] automatically on the internet. And also
[04:05] I wanted to show you what this tech
[04:07] stack costs. Uh so for Versal it is a
[04:10] tricky situation because I have been on
[04:12] the pro plan for like years and um I
[04:15] think about 6 or 12 months ago they
[04:17] changed their pricing structure. Uh for
[04:19] most people they ended up paying more
[04:21] and I was one of them. So I don't know
[04:23] exactly how much I should be paying
[04:24] because around the same time they
[04:26] reached out to me. Uh they say that
[04:27] because I have 30 websites on their on
[04:29] their platforms they want to get some
[04:31] feedback from me in exchange of $0 bill
[04:34] at the end of the month. I am
[04:35] technically not paying for Versal. I am
[04:37] not sponsored by Versal. I am not
[04:38] sponsored with any of the tools I'm
[04:40] mentioning in this video. Uh but I also
[04:42] want to be totally transparent. So they
[04:43] are just uh paying my bills at the end
[04:45] of the month. Um if we look at January
[04:47] for instance, I would have have to pay
[04:50] $1,000 for January, which is roughly 50
[04:54] times more than what I used to pay at
[04:56] the same date last year. But at the same
[04:58] time I also ship a bunch of new apps get
[05:00] way more traffic and one of them is
[05:01] datafast where u it's a web analytics
[05:04] platform and I use versal API endpoints
[05:06] to track those events uh which means
[05:08] like if I have let's say 200 customers
[05:10] who are sending me events from 200
[05:12] websites my API endpoint is called like
[05:14] a multiple time per which is probably
[05:16] also why my versal bill went up and for
[05:19] the database hosting I am using MongoDB
[05:21] Atlas and those are all of my project on
[05:24] the left side I create one cluster per
[05:26] project And then I have usually a prod
[05:28] database. And usually if I want to test
[05:30] stuff, I have like a testing database on
[05:32] my computer. And same for MongoDB since
[05:35] I am now running like this web analytic
[05:38] tool. Uh my bill went up by crazy. It
[05:41] was uh it was at $9 a month. At top I
[05:44] was at $67 per month. And then in
[05:46] October when I launched this web
[05:48] analytics tools, my bill went crazy up.
[05:51] So right now I'm paying about $500 a
[05:53] month for the database. So 10x what I
[05:56] used to pay uh at the same time last
[05:58] year as well. Uh I think for this one I
[06:00] can just optimize a little bit. I need
[06:02] to think I just didn't have time for
[06:03] that. Okay. So this is like the
[06:05] foundation of uh everything I built
[06:07] with. And then likely I will need a
[06:10] third party tools for I don't know
[06:11] processing payments, user
[06:12] authentification, etc. Not all of those
[06:14] tools are used in all of my apps. So I'm
[06:16] going to cover each of them, how much I
[06:17] pay for them and what I use them for.
[06:19] The first one uh is one you're likely
[06:21] going to need to is OJS to authenticate
[06:23] users. Um, I use it for all of my
[06:25] websites. Like I have this like a page
[06:27] build. Then I can just input my Google
[06:29] API key. I set up magic links and then I
[06:31] have an entire login system set up. It's
[06:33] free. It's open source. It's working
[06:34] super well. Now for emails to send
[06:36] transactional emails. I broke my rule of
[06:39] never changing my text tag because I
[06:40] used to use Mail Gun to send emails and
[06:42] I still use Mail Gun for all the apps
[06:44] that I didn't migrate. But every new app
[06:47] I use now are using recent. It's a more
[06:50] I would say friendly like it's uh the
[06:52] user interface is much easier to use
[06:53] than mail gun. But the number one reason
[06:55] I use them is because they don't only
[06:57] have transactional emails which are
[06:58] email you send for like signups and
[07:00] stuff but they also have marketing
[07:01] emails and since I build my product in
[07:03] public I need to update my power users
[07:06] after a week a month about new features
[07:08] that I've released and this is why I
[07:10] switched to recent and so I can create
[07:12] audiences of people when they sign up to
[07:14] my app for instance and then I can
[07:15] broadcast messages. So for instance, the
[07:17] other day I released a new feature. So I
[07:19] can just write an email with like some
[07:21] placeholder stuff and I can just
[07:22] broadcast this email to the exact same
[07:24] emails of people who signed up for my
[07:26] products. The fact that recent have
[07:28] transactional and marketing emails makes
[07:30] my life so much easier. And billing wise
[07:33] I am at $60 a month. So the the
[07:35] transactional emails are pretty cheap.
[07:37] And then marketing as always it's uh
[07:39] it's higher more expensive. And this is
[07:41] pretty much what I'm paying right now.
[07:42] the most expensive and also the most
[07:45] important part of my tech stack, Stripe.
[07:47] I use Stripe to process payments on all
[07:49] websites I create. They take about 5%
[07:51] cut on every payment. So, uh by the end
[07:54] of the year, that's $60,000,
[07:56] but I guess uh you know, that's the the
[07:58] only way to uh get make money on the
[08:00] internet. Uh so, I'm more than happy to
[08:02] pay that. And I mean, the software is
[08:03] just beautiful. I create one project
[08:06] every single time uh I have a new
[08:08] business idea, I will create a new
[08:10] Stripe account. And all those Stripe
[08:11] accounts are owned by the same exact
[08:13] company, my company. I know Stripe is a
[08:15] little uh tricky to uh to set up when
[08:17] you're getting started. If you want,
[08:19] there is a video on my channel called
[08:20] the easy way to set up recurring
[08:22] payments with Stripe. Um you can check
[08:24] that out. All right. Now, moving on with
[08:25] the next product and uh this one is one
[08:27] product I own called Datafast. It's a
[08:30] web analytics platform. Um I build it
[08:32] for myself initially because um all the
[08:34] analytics tool I find are either like
[08:36] very boring like Google Analytics which
[08:38] is just a complete headache or they're
[08:40] more made for like developers. But since
[08:42] I'm on the middle between developers and
[08:44] entrepreneur I wanted to have payment. I
[08:46] wanted to see how does the revenue
[08:48] connects with the traffic. So my dataf
[08:50] dashboard is going to show me a little
[08:52] bit like all the traffic and the revenue
[08:54] I make in the past 24 hours. And for
[08:56] each website I have more information
[08:58] about um you know the data the
[08:59] analytics. So, for instance, for this
[09:00] one, um I can compare what it does
[09:02] compared to the previous month. Um it
[09:04] calculates some metrics like the the
[09:06] revenue generated per visitor. Uh this
[09:08] is good because then I know if I spend
[09:09] less than $1, um in Facebook ads to
[09:12] drive traffic to this product, I am
[09:13] still profitable. For instance, it also
[09:15] connects the revenue to the visitor. So,
[09:17] I know uh which marketing channels bring
[09:19] the most money. Uh I know which
[09:21] countries uh are more profitable. I know
[09:23] which internet browser they're using.
[09:24] And also one thing I was really curious
[09:26] about is what do people do before making
[09:28] a purchase. So I've created this like
[09:30] little thing here called journey where
[09:33] uh I can see for one person what they
[09:35] have done before making the payment. So
[09:37] I can see that this person has found the
[09:39] website through uh YouTube. So likely my
[09:41] YouTube channel uh what they did during
[09:42] that day came back a month later then
[09:44] came back 5 days later and the next day
[09:47] through egg so through Twitter they
[09:48] probably found one of my tweet and ended
[09:50] up making a purchase. It helps me as a
[09:52] business owner understand a little bit
[09:53] what is going on on my site. Now what I
[09:55] want to do is to connect that with an AI
[09:57] and hopefully the AI will find patterns
[09:59] in what are some recurring actions that
[10:02] people do before purchasing a product.
[10:03] So I can just see what do I need to
[10:05] double down to make more money. Okay,
[10:07] next part we have AWS. I use it only
[10:09] when I need to make some stuff with
[10:11] images and videos. For instance, for
[10:13] these little websites it's like a link
[10:15] in bio like a portfolio builder tool. Uh
[10:17] people can upload logos if they want.
[10:19] they can change their profile photos,
[10:21] etc. I put all of those images into a
[10:23] big S3 bucket and then I use Cloud
[10:25] France to load those images fast. Then I
[10:29] use Upstash for background tasks that
[10:32] are pretty long. For instance, I have
[10:33] this little um leaderboard where anyone
[10:36] can sign up and share their revenue uh
[10:38] using Stripe. Um holy wow, this guy
[10:40] crossed 10 million. Crazy. here. Um, for
[10:43] instance, for a guy like him, it would
[10:44] take a long, long time to fetch all the
[10:47] payments from his stripe account in
[10:48] order to display this amount of money.
[10:50] And I do that using up stash. And I also
[10:52] use currency API for uh this website
[10:55] here, this little board, uh, because
[10:57] some people are making money in foreign
[10:58] currencies and I want to unify that in
[11:01] US dollars. So like it's I can compare
[11:03] and like rank them uh based on their uh,
[11:05] revenue. And I use the the actual the
[11:07] actual currency rate from currency API.
[11:09] Also, I forgot to mention this cost me
[11:11] maybe5 or $10 a month. And this is a
[11:14] paid plan and I think it's $30 a month.
[11:16] I use namecheep when I need to buy
[11:18] domain name. This is my favorite place
[11:20] to go for just shopping. And sometimes I
[11:22] need to buy like a exotic domain. For
[11:25] instance, I have this like shipa.st. If
[11:28] I want to buy ST domain names, Namechip.
[11:30] NameChip does not let me do that. So I
[11:33] use Netim instead. Each of the domains I
[11:35] own cost me around $20 a year. So I
[11:38] guess I have maybe four or $600 a year
[11:41] or maybe even more than that of domain
[11:42] name payments. Okay. Uh this is new in
[11:45] my text tag because I didn't need that
[11:46] before but recently I launched a course
[11:49] named codefast where I teach people um
[11:51] how to code an entire software from
[11:53] scratch and I wanted the platform to be
[11:54] good. I wanted to know fast and for that
[11:57] I use Mox. It's like a I don't know it's
[11:59] like a mix of AWS with a good user
[12:01] interface where you can just drag and
[12:02] drop videos and then they will be able
[12:04] to stream your videos with a very nice
[12:06] player uh that you know it looks good
[12:09] like I can go forward backward they will
[12:10] load in 720p if I don't have much data
[12:13] coverage uh you can go up to 4K if my
[12:15] internet connection is great it just
[12:17] feels great and because I started using
[12:19] this for the course I also uh start to
[12:21] use the Mox player for pretty much any
[12:24] product I make because it's just good
[12:25] it's pleasurable to see so for instance
[12:26] for data fast there's the change log
[12:28] where I update people about what's new.
[12:30] Um, I also use the master layer here.
[12:32] Uh, they have this like amazing feature
[12:34] like English autogenerated subtitles.
[12:37] So, I just push the video. It has
[12:39] perfect quality. People can stream it.
[12:40] Their subtitles is just so good. On the
[12:42] downside, it's pretty expensive. Uh, I
[12:44] think for my course, I spend around $500
[12:48] a month just to stream videos. Uh,
[12:50] luckily there's something if you ever
[12:51] use their service where if you make
[12:53] content for developers, they have this
[12:55] like little uh badge that you can add to
[12:57] your site and they will cover up to
[12:59] $1,000 worth of spent on your bill.
[13:01] Okay. And finally, uh, Capacitor. Man,
[13:04] this tool changed my life. This is
[13:05] crazy. I don't know anything about
[13:07] building iOS or Android apps. I just I
[13:09] am a web developer and I built this uh,
[13:11] habit tracker as long as two other uh,
[13:13] web apps and I turned them into a mobile
[13:16] app. though for instance this habit
[13:17] tracker has it's it's actually an app on
[13:20] the app store so you can uh download it
[13:21] on your phone and I still don't know how
[13:23] to code native apps but I use capacitor
[13:26] just to basically wrap like a a native
[13:29] view around my web app I can just push
[13:31] it and boom I have a little uh apps app
[13:34] right here um that is ranked on the app
[13:36] stores and finally we are in 2025 80% of
[13:40] my code is written by an AI so I think I
[13:42] need to mention uh the AI part of my
[13:44] text stack um I use cursor as the code
[13:46] editor and I have a little LLM inside.
[13:49] So, at the moment I'm using code 3.5
[13:52] set. Uh, I use the chat heavily to
[13:54] create stuff. I also use the composer
[13:56] sometimes when I know what I want. Uh,
[13:58] the AI is actually really good and
[13:59] really fast. You can go on the internet.
[14:00] It can open my terminal and run some
[14:02] comments. But I also use cursor AI to do
[14:05] a bunch of other stuff. For instance,
[14:06] since it knows my entire codebase, I can
[14:08] ask if there are any like a security
[14:11] flaws or endpoints that are not secure.
[14:13] It is really good at finding uh security
[14:15] issues in my codebase since it knows the
[14:17] entire copy of my site. It's also really
[14:20] good at writing uh documentation, change
[14:22] logs and also just copy itself and I
[14:24] think very few very few people are using
[14:25] this feature uh but cursor AI is so good
[14:28] at design. What you can do is if you
[14:30] want a time picker just go on Google uh
[14:32] you find whatever link of a time picker
[14:34] you like. You just take a little uh
[14:36] screenshot of it and then in cursor you
[14:39] just well you just copy past the image.
[14:41] you can just write a little piece of
[14:42] text like recreate these components and
[14:44] you know change the colors, change the
[14:45] border radius, whatever it is getting
[14:47] really good at designing at the moment.
[14:49] All right, that's the end of the video.
[14:50] Uh these are all the little website I've
[14:52] created in the past 3 years. If you want
[14:54] to check out, there's a link in uh the
[14:55] description. Also, each of those
[14:57] websites are connected with my Stripe
[14:59] account. So, um my actual revenue is on
[15:01] this page. It took me almost 7 years to
[15:03] get to this point. And in the first 3 to
[15:05] 5 years, I kept changing my tech stack
[15:07] over and over. And I really wish I knew
[15:09] that tech stack don't matter. Your
[15:10] customers really don't care about the
[15:12] invisible. They care about the problem
[15:13] you're solving for them. Your tech stack
[15:15] is like a muscle. The more you practice,
[15:17] the more you build apps with the same
[15:18] text, the better I get at it you get. So
[15:20] the faster you'll be able to ship. And
[15:21] the faster you ship, the faster you will
[15:23] get customers because you're going to
[15:24] make a bunch of small bets. And that's
[15:26] the end of this video. If you liked it,
[15:28] well, you can like it. And until the
[15:29] next video, I hope you keep shipping.
[15:32] Oh, I almost forgot. I just made this
[15:34] video. It took me about a month to make
[15:37] that. It's an entire video about how to
[15:39] learn how to code using AI. It goes from
[15:42] complete beginner to learning how to
[15:43] build a SAS. And it's completely free.
[15:45] It's about 3 hours long. So enjoy it.
[15:47] Cheers.