Video Title: How I Would Learn to Code in 2025 (if I had to start over)
Video ID: k4Zpe6u1rLI
URL: https://www.youtube.com/watch?v=k4Zpe6u1rLI
View Count: 26,422

[00:00] coding is easy the hard part is knowing
[00:02] what to learn and most importantly what
[00:04] to skip in the next few minutes I am
[00:06] going to show you exactly what you need
[00:08] to know in order to build any online
[00:10] business my name is Mark I have built
[00:12] those 30 tiny internet businesses and
[00:14] I'm now financially independent if you
[00:16] start today you could be making money
[00:18] online with a digital product in just a
[00:19] few weeks so stay with me okay so the
[00:22] number one mistake people make when
[00:24] they're learning how to code is they
[00:25] want to go too fast and use those great
[00:27] AI tools to build a website yes you can
[00:29] input a little bit of English is going
[00:30] to create a beautiful site for you but
[00:32] this is misleading if you want to add
[00:34] more features if you want to fix bugs
[00:35] you will have no idea what to tell the
[00:38] AI because you need to know the
[00:40] fundamentals of the internet in order to
[00:42] be able to instruct an AI to code for
[00:44] you so we want to start first with the
[00:45] fundamentals and for that of course
[00:47] we're going to use AI but not to code
[00:49] but to explain us how the internet works
[00:52] the first part is understanding how the
[00:53] internet works as a consumer you right
[00:55] now browsing YouTube you are an internet
[00:57] consumer what I would do very first is
[00:59] to go to chat GPT and just explain me
[01:02] what is happening when I visit whatever
[01:04] website your favorite website.com ask CH
[01:06] GPT to not use any technical skills and
[01:09] to explain this simply using metaphors
[01:11] try to understand the the the overall
[01:13] journey of what happens when you visit a
[01:15] websites then you will want to learn the
[01:17] fundamental concepts internet browser
[01:19] HTTP URL DNS those are some of the Core
[01:23] Concepts of the internet the entire
[01:25] internet relies on those Concepts to try
[01:27] to learn what each of them is doing
[01:28] without getting too much into details
[01:30] but just the overall The Core Concepts
[01:32] and again here you want to use tgpt to
[01:34] explain you exactly what it is and then
[01:36] to have a pick at what's next open the
[01:38] developer console just like this and
[01:39] inspect any website and over the
[01:41] elements and try to you know just get
[01:43] curious of what you actually see as a
[01:45] developer the next part is to understand
[01:47] internet as a developer what do you have
[01:49] to do as a developer so that your
[01:51] website is seen by millions of people
[01:53] across the world first you will need to
[01:55] install a code editor you have vs code
[01:57] you have cursor AI the which are great
[01:59] editors and then you want to build web
[02:01] pages if you have completed the previous
[02:03] step you now know what a web page is and
[02:05] you want to learn those three languages
[02:07] HTML CSS and JavaScript one more time
[02:10] any website you see on the internet is
[02:13] made with those three languages you
[02:14] don't want to go too deep you want to
[02:16] learn just 10% of each of those
[02:18] languages just enough in order for you
[02:20] to build a tiny web page that you could
[02:22] send to a friend it could be just your
[02:24] portfolio website that could be just a
[02:25] landing page for your future business
[02:27] idea it doesn't matter you can build
[02:29] anything with h HML CSS and JavaScript
[02:31] for each of those three languages I
[02:33] added some of the core components you
[02:35] want to learn so for instance you want
[02:37] to learn what are HTML links inputs
[02:39] button Etc HTML is used as a structure
[02:41] of a page CSS is mostly like to style
[02:44] things so uh properties like colors
[02:46] display margin padding Etc are important
[02:48] to learn and JavaScript you used to make
[02:50] a web page interactive like uh pressing
[02:52] buttons like double clicking on here for
[02:54] instance don't overthink it just learn
[02:56] the minimum you need to build a little
[02:58] web page and show it to a friend by by
[02:59] the way if you need this road map I'll
[03:01] add a link in the description so that
[03:03] you can uh follow along with me and
[03:05] whenever you're done learning one of
[03:06] those elements you can just uh double
[03:08] tap and I think it will save your
[03:09] progress okay now we are entering the
[03:12] fun part you're watching this video
[03:14] probably because you want to build an
[03:15] online business you so you will need a
[03:17] landing page to present your idea you
[03:19] will need a probably like a private user
[03:21] dashboard so people can do stuff like
[03:23] update their profile or download files
[03:25] and probably a way to send emails and
[03:28] charge payments we're going to cover all
[03:29] that in this section and the first thing
[03:31] you want to do is to pick a text tack
[03:33] this is my text tack uh I use the this
[03:35] these tools and products and libraries
[03:37] in order to uh build my 30 websites for
[03:40] instance I use Daisy UI as a component
[03:42] library to style my websites I use OJs
[03:45] to authenticate users I use data fast to
[03:47] track web analytics now you may be
[03:49] wondering why we're not using pure HTML
[03:51] JavaScript and CSS and the answer is
[03:53] just because of the speed you want to
[03:55] ship apps fast to the market you could
[03:58] technically build anything with HTML and
[04:00] CSS but as developers we are we are lazy
[04:03] and so it's better to use a text tag
[04:05] like react to build UI components
[04:06] instead of writing them in pure HTML
[04:08] JavaScript and CSS as a quick example uh
[04:10] if you want to make just a button with a
[04:12] counter where when you press it increase
[04:14] the counter by one this is what you
[04:15] would have to do using HTML and
[04:17] JavaScript but if you're using react
[04:19] this library in order to build user
[04:21] interface you would just have to write
[04:23] this in other word having a text tack
[04:25] will help you ship faster there's a big
[04:27] misconception especially on YouTube
[04:29] where people will try to make you feel
[04:30] like you're missing out if you don't try
[04:32] the the newest UI library or the latest
[04:35] reactjs version or something this is
[04:37] pure procrastination what you want to do
[04:39] is you pick one text Tack and you stick
[04:40] to it forever uh if you want you can
[04:42] just copy mine this is a very popular
[04:44] text tack you don't have to use all the
[04:45] third party tools I'm using here uh a
[04:48] lot of them are have like a specific use
[04:49] case and we're going to cover that later
[04:51] okay once you have your Tex tack you
[04:52] need to get just a little comfortable
[04:54] with the terminal the terminal is this
[04:56] little app that is installed already on
[04:58] your computer that lets you navigate
[05:00] with your computer but as a developer
[05:01] there are four commments here that I
[05:03] think are important to know and again
[05:04] Ask chpt to explain you real quick what
[05:07] is the terminal and how to use it then
[05:08] you're going to have to set up your
[05:09] computer so that depends on the text
[05:11] you've picked of course for this video
[05:12] I'm going to pretend you've picked the
[05:14] exact same text tack as me first you'll
[05:15] need to install nodejs so it lets you
[05:18] run JavaScript everywhere then you want
[05:20] to also install nextjs which is like a
[05:22] framework that's going to uh compile and
[05:24] combine all of your pages that we're
[05:26] going to serve to the client and if you
[05:28] haven't already you will need a code
[05:30] editor and then you will have an entire
[05:32] project up and running at this point you
[05:34] want to understand a little bit of what
[05:36] is going on because this uh nextjs thing
[05:39] is going to install a bunch of stuff so
[05:40] let's uh you know step by step break
[05:42] down what is on your machine so first
[05:45] you will have access to a package
[05:47] manager called npm it's basically a
[05:49] bunch of uh libraries and free stuff
[05:51] that other developers have built that
[05:53] you can reuse for instance this is one
[05:55] of my websites and you can see here
[05:57] there's a beautiful chart that changed
[05:58] colors Etc I did not create this chart
[06:01] by myself I am using a library called
[06:03] rechart and this library is available on
[06:05] npm you want to understand a little bit
[06:07] of how npm works you are basically two
[06:09] things you have a package.json which is
[06:11] like the kind of the control center of
[06:13] your app which you will find right here
[06:15] in your project and you have two
[06:16] commands npm install to install a
[06:18] package npm run to run a script another
[06:21] big part is the linter called es L if I
[06:24] go back to my code and I make a typo I
[06:26] remove these brackets then I will see
[06:27] red colors it's because I have a l
[06:30] basically a little program that runs on
[06:31] my machine that tells me when I make
[06:32] mistakes as a developer so I make just
[06:34] less mistakes you also want to
[06:36] understand a little bit about how the
[06:37] next chest architecture works so as you
[06:39] can see here in this project I have a
[06:41] bunch of folders I have app components
[06:43] data uh you might have less than this
[06:44] because this is an actual project where
[06:46] I built stuff on it but you will
[06:47] probably have the app folder and a few
[06:49] other files uh you want to ask chpt to
[06:52] explain you a little bit of how this
[06:54] works a quick tip here what you can do
[06:56] is you can ask an AI inside of your code
[06:58] editor uh to explain you what this or
[07:01] that does okay the next one is the
[07:03] version control system so there are two
[07:05] major components to that there is a
[07:07] GitHub GitHub is basically Google Drive
[07:10] for developer so this is for instance my
[07:12] profile on GitHub those are all the
[07:13] repository so all the projects I work on
[07:16] you want to create an account and this
[07:17] is where you're going to start pushing
[07:19] code and to push code to upload your
[07:21] code you'll need to use gits so you need
[07:23] to install gits then you want to learn
[07:25] the very basic of gits G add git commit
[07:28] git push that's all all you need to know
[07:30] in order to use Git it can get really
[07:31] complex so just learn those ones and git
[07:33] is going to help you make versions of
[07:35] your codes whenever you make an update
[07:36] on your ad you can write a little
[07:38] message and then you push this update
[07:40] and it will be pushed automatically to
[07:41] GitHub okay now you have a little
[07:43] understanding of your project you want
[07:44] to move on and you want to start
[07:45] building a landing page you want to
[07:47] start with the visual part things that
[07:48] you can send to friends that people can
[07:50] see because it's the I mean at least for
[07:52] me it is the funniest part so there are
[07:54] three major components when you're
[07:55] building a landing page with this modern
[07:57] text tack one is react react is a
[08:00] library that is going to help us build
[08:03] interative user interactions like user
[08:05] interface um those are of the core
[08:07] concept of react that I think you should
[08:09] be learning and these are some a little
[08:12] Advanced JavaScript concept that you
[08:13] haven't learned previously that you will
[08:15] have to learn as well to uh use react
[08:18] properly nextjs is a wrapper like a it's
[08:21] a framework around react it's going to
[08:23] organize all your pages and files Etc
[08:26] one more time here you want to learn
[08:28] just the minimum you need to build
[08:30] something um this is for instance what
[08:32] our react hooks are you will learn that
[08:34] later um there are around 20 of them I
[08:37] built 30 websites using the three hooks
[08:40] only so you really really really don't
[08:43] need to learn everything okay and the
[08:44] final component The Styling part is done
[08:46] with Tailwind CSS uh this is what you
[08:49] would find in Project like this where
[08:51] you would write semantic classes in
[08:53] order to style your app and on top of it
[08:56] I use the daisy UI component Library so
[08:58] this little website here where uh they
[09:00] give you a bunch of components like
[09:02] those uh toggle checkbox uh cards Etc I
[09:05] want my uh website designed to always
[09:07] look similar I don't want to design
[09:09] everything from scratch and so Daisy UI
[09:11] gives me access to a bunch of components
[09:14] once you build a little something to
[09:15] present you want to deploy your site on
[09:17] the internet I use versal to host all of
[09:20] my websites for instance those are all
[09:22] of my projects on versal and this is
[09:24] what it looks like as a workflow so you
[09:27] as a developer work on your computer you
[09:29] git commit and git push your changes
[09:31] which will be uploaded to GitHub and
[09:33] then when uh there is a new update on
[09:35] GitHub they're going to update versal
[09:37] your server on the internet and versal
[09:38] is going to run some comments and to
[09:40] deploy redeploy your new website uh you
[09:42] will see it is actually extremely simple
[09:45] and by the way I am not paid by versal
[09:47] or any of the other uh tools I promote
[09:49] in this video this is not a sponsored
[09:51] video those are just the tools I use for
[09:53] myself and finally you will want to get
[09:55] a domain name that's the funniest part
[09:57] as a developer you I use name sh to my
[09:59] domain names if for some reason the Doom
[10:02] is not available for your idea which is
[10:04] likely to happen because they're all
[10:05] taken um it doesn't matter yeah you
[10:07] don't need to have aom TLD aom extension
[10:10] in order to make money on the internet
[10:12] just try to buy a domain name that is
[10:14] easy to read and makes sense and
[10:15] congratulation you can already build a
[10:17] front page you can add a pay button and
[10:19] you can already make money on the
[10:20] internet now you might want to do some
[10:22] more advanced stuff like saving users in
[10:24] database downloading things Etc this is
[10:26] where the backend notion comes in place
[10:28] a back end is basically all the things
[10:30] that are not visible to visitors of your
[10:31] site one of the most common use of
[10:33] backend is API endpoint an API endpoint
[10:36] is basically like a little door where
[10:38] you can send information you can save
[10:40] that someone click on your site you can
[10:42] uh create a checkout link you can save a
[10:44] user in the database it all starts with
[10:46] an API endpoint some developers are
[10:48] using different framework and even
[10:49] different languages to create API
[10:51] endpoints but since we're using next JS
[10:53] for our project you can just create an
[10:55] entire API endpoint using the SLA SL API
[10:59] folder if you can just create a file
[11:02] named route. JS in this folder you will
[11:04] have created an API endpoint and
[11:06] congrats you are a backend developer so
[11:08] you will learn some of the fundamentals
[11:09] concept we talked about earlier what is
[11:11] an HTTP method what is what are htttp
[11:14] parameters and how to return a respond
[11:16] from this API endpoint there are also
[11:18] some Advanced JavaScript uh things you
[11:19] will have to learn because then it
[11:21] brings the notion of asynchronous when
[11:23] you call an API the request has to go
[11:25] through the internet you don't know how
[11:27] long that takes so uh that's why we have
[11:29] to um handle those cases with JavaScript
[11:31] async weight and promises and if you
[11:33] want to haveen you can also call another
[11:35] API not your own API but someone else
[11:37] for instance chpt has an API uh you can
[11:41] uh get started in just a few minutes and
[11:42] you can for instance just use this
[11:44] little piece of code in order to call
[11:46] the chbt API now having an API endpoint
[11:48] is nice but you likely want to do
[11:50] something with this API endpoint and one
[11:52] of the most common uh use of a back end
[11:55] is to have a database they store some
[11:56] information for my database I use a
[11:59] nosql database it's mongodb it's hosted
[12:02] on mongodb Atlas so this little website
[12:05] here they have a free plan so you can
[12:06] create a little cluster like a little
[12:08] mini database for free and because I'm
[12:10] lazy and I want to visualize my database
[12:12] on my computer without having to code I
[12:14] use compass mongodb compass in order to
[12:17] um see what's inside of my database and
[12:19] to connect to your database mongodb is
[12:21] going to give you a little connection
[12:23] string which is like a private key that
[12:25] only you should know in order to um
[12:28] connect to database and perform
[12:29] operations like read or write the
[12:31] database that's when the notion of
[12:33] environment variables comes in so in
[12:35] your project there is something called
[12:37] of. loo which is like a secret file that
[12:40] you want to keep on your machine only I
[12:42] cannot show you mine at the moment uh
[12:44] but is basically where you want to store
[12:45] all your connection string API Keys Etc
[12:48] going back to the examples of chpt
[12:50] earlier um if you want to call the chpt
[12:52] API they will also give you an anop aai
[12:54] API key like a secret key in order to uh
[12:57] identify yourself and say like hey I am
[12:59] developer XYZ and I want to ask jgpt
[13:01] this question right now that we have a
[13:03] database moving on to authenticated
[13:04] users for that I use OJs this open
[13:07] source project here is very simple to
[13:09] get started um with just a few lines of
[13:11] code you can have a page like this one
[13:13] when you have a button for people to log
[13:14] in with Google login with email Etc uh
[13:16] they have core concept the provider is
[13:18] basically what uh type of services users
[13:21] will be able to use to log in so Google
[13:22] and magic links for instance adapters is
[13:25] where you're going to store the user
[13:26] data so when the user log in with Google
[13:28] for instance I want to save the user
[13:30] data in my database and OJs is going to
[13:32] do that automatically for me you also
[13:34] want to learn about cookies because
[13:35] those are like very important like you
[13:37] need cookies in order to authenticate
[13:39] users and then you will see it's pretty
[13:40] simple you want to sign in sign out
[13:41] users so there's like just two functions
[13:44] and then you will create private Pages
[13:46] private apis like content that is only
[13:48] available for people who are logged in
[13:50] to your app you might have to send
[13:52] emails there are two types of email
[13:53] there's the transactional emails and the
[13:55] marketing emails marketing emails are
[13:57] the ones who usually end in your folder
[13:59] transactional emails are are emails that
[14:01] we send as developer for people to sign
[14:03] in for instance you can send like a
[14:04] login to my app and there's a magic link
[14:07] and you would send that by email I use a
[14:09] resend for that they're really good
[14:11] because they also have marketing emails
[14:12] so if I if I want to follow up and you
[14:14] know uh send marketing emails like
[14:16] discounts I can use uh resent as well
[14:18] you will learn about MX record which are
[14:20] like a DNS record specifically for
[14:21] sending emails and um and of course
[14:23] you'll learn about sending magic links
[14:25] and now moving on to the next part
[14:27] charging money on the internet for for
[14:29] that you will need a payment provider uh
[14:31] there are two famous ones stripe and
[14:33] lemon squeezie and many others I use
[14:35] stripe personally uh if you're from
[14:37] India you won't be able to use stripe so
[14:39] you can use lemon squeezy uh they make
[14:40] everything a little simpler cuz they
[14:42] handle the vat for you I have been using
[14:44] stripe for a long long time and I
[14:45] basically open a new stripe account for
[14:48] any kind of business I launched on the
[14:50] internet depending on what type of
[14:52] payment you want to handle uh you will
[14:54] likely have to learn how to create a
[14:56] checkout session so that implies
[14:58] creating like a physical component a
[15:00] little H button like this one for people
[15:02] to click and it will uh open a payment
[15:04] page just like this one and the webbook
[15:07] stripe is going to send you a little
[15:08] notification to your API endpoint that
[15:10] says that hey this person with this
[15:12] email just made a payment this is where
[15:14] you would uh give the person access to
[15:16] your service and then very likely you
[15:18] will need a customer portal or customer
[15:19] billing whatever this is called uh this
[15:21] is the place where usually you can go uh
[15:24] here and click billing I can see what is
[15:25] my current plan what the credit card is
[15:27] used what is the invoice I'm using in
[15:29] stripe it's called portal it's very
[15:31] simple to set up they'll give you back a
[15:32] little URL like this one and you can
[15:35] give to your customers and they can
[15:36] handle everything here themselves right
[15:38] now you already have all the core
[15:39] concept of building a digital business
[15:41] uh one thing that is very important is
[15:43] about security to make sure that you
[15:44] don't leak your customer data that uh
[15:47] everything is safe etc for that you can
[15:49] use AI heavily inside of your codebase
[15:51] you normally have a chat with an AI and
[15:53] then you can ask lots of question do you
[15:55] think my app is safe you can start like
[15:58] large and refine until you uh cover
[16:00] every edge cases you really want to make
[16:02] sure that you ship an app where there is
[16:04] no security flows there are things that
[16:06] are important in terms of security it's
[16:08] to understand the notion of react server
[16:11] and client components it's safe to do
[16:13] things inside of react server components
[16:15] because they stay on the server it's not
[16:17] safe to do things like SEC things on the
[16:19] client components of course you want to
[16:20] use environment variables and store your
[16:22] API keys there to make sure that you
[16:23] don't push them accidentally on the
[16:25] internet uh you want to make sure that
[16:26] your API end points are safe and secure
[16:29] for instance that you verify that the
[16:31] person is authenticated in order to make
[16:32] the request that the person eventually
[16:34] has paid for a service in order to make
[16:35] the request Etc and then for more
[16:37] advanced concept where you uh your app
[16:39] is deployed on the internet you might
[16:41] have like people trying to scam you or
[16:43] something um you could use middlewares
[16:45] or firewalls in order to block access to
[16:48] your app to some countries some people
[16:50] Etc and uh finally you might want to
[16:53] learn some advanced concepts I don't
[16:54] really recommend learning anything
[16:56] unless you have like a strong use for it
[16:59] but those are some things that might be
[17:00] worth your time uh in nextjs learn how
[17:03] to use metadata in order to um
[17:05] eventually be index and rank on Google
[17:07] you can learn how to use tawin CSS
[17:09] Transitions and animations in order to
[17:11] make your app a little bit nicer to use
[17:13] the local storage in JavaScript is a
[17:16] really nice place to uh store some data
[17:18] where you don't need a database that is
[17:20] really up to you and up to your needs
[17:22] and we are now entering the most
[17:23] exciting part the 10x programmer using
[17:26] AI likely in your code editor you
[17:28] already have an AI that will help you
[17:30] write code explain Etc if you're using
[17:32] VSCO they have a free plan if you're
[17:34] using Cur like me I think it starts at
[17:35] $20 a month the llm is basically like
[17:38] the type of large language model you're
[17:40] using I'm using clo 3.7 sunet at the
[17:42] moment they just released it but to be
[17:44] honest it really doesn't matter as long
[17:46] as you don't do some like very Advanced
[17:48] programming uh it wouldn't make much
[17:49] difference and your AI will become your
[17:51] best buddy there are three core features
[17:54] the autocomplete one is more like a
[17:56] inline feature where you can select a
[17:58] line uh press command K and you can just
[18:00] you know rewrite a little something you
[18:02] have chat features that I use usually to
[18:05] ask the AI about how to organize my data
[18:07] about security Etc and a composer which
[18:10] can use an agent and can create files
[18:12] for you run script Etc you can become
[18:15] super super duper fast using AI you just
[18:17] have to use it right I'll link below to
[18:19] a video that I made about exactly how I
[18:21] use AI to code 10x faster there has
[18:24] never been a better time in history to
[18:26] learn how to code and build a side
[18:28] project for sure coding takes time but
[18:30] if you show up every single day for 30
[18:32] minutes you won't believe where you are
[18:34] in just a few months from now future you
[18:36] is begging you to get started right now
[18:37] so close this video and go build
[18:39] something and just in case you want to
[18:41] dive a little deeper into this road map
[18:43] I made a longer three hours long video
[18:46] for free on YouTube where I walk you
[18:47] step by step through each of those steps
[18:50] until the next video I hope you keep
[18:51] shipping