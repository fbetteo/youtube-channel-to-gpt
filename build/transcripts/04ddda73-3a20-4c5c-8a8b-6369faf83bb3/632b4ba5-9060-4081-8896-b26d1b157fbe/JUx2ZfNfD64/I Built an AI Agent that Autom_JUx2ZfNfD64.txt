Video Title: I Built an AI Agent that Automated my Inbox with n8n (No Code)
Video ID: JUx2ZfNfD64
URL: https://www.youtube.com/watch?v=JUx2ZfNfD64
View Count: 34,641

[00:00] so what you're looking at right here is
[00:01] an inbox management agent I was able to
[00:03] build this thing in about 25 to 30
[00:05] minutes using absolutely no code so by
[00:07] the end of this video you guys should
[00:08] all understand what's taking place in
[00:09] this workflow and how you can get one of
[00:11] these things up and running within your
[00:12] own email to completely manage your
[00:14] inbox and almost completely remove
[00:15] yourself out of the process of emails
[00:18] this agent is going to save me a ton of
[00:19] time as you get an email it comes in
[00:21] here it goes through this classifier and
[00:23] it gets labeled into one of four groups
[00:25] of email and then there's a certain
[00:27] action that takes place based on what
[00:28] type of email it is so for example
[00:30] example with high priority emails it
[00:31] just creates a draft for you in your
[00:33] Gmail but it doesn't actually send it
[00:35] because it's high priority so you
[00:36] probably want some manual touch Point
[00:37] involved but then it's also going to
[00:39] send you a telegram notification on your
[00:41] phone that you got a high priority alert
[00:43] so um that's just sort of how this is
[00:45] going to work and one thing I wanted to
[00:46] point out is that this section of the
[00:47] workflow this is just where we sort of
[00:50] label an email based on the content of
[00:52] the email but this section I have a
[00:54] video about right here where I sort of
[00:56] go step by step of how to actually build
[00:57] this part and then over here is what we
[01:00] added today which I'll be expanding on
[01:02] which is based on the label we're going
[01:04] to do a specific type of action and it's
[01:06] also going to telegram us what happened
[01:09] and why it happened so we're going to
[01:11] break down each node each path so that
[01:13] everyone can understand what exactly is
[01:14] taking place here and we'll do a demo
[01:16] for each one too so let's just get
[01:17] started here with high priority as the
[01:20] first example real quick I don't want to
[01:21] take too much time away from this video
[01:23] but just wanted to announce that our
[01:24] school Community is finally open so you
[01:26] can find the link to that down in the
[01:27] description it's 100% free to join
[01:30] um hopefully we can get a lot of people
[01:31] in here a lot of people to bounce ideas
[01:33] off of and get our questions answered
[01:35] with one another because we all are sort
[01:36] of interested in the same space you know
[01:38] sometimes you guys ask for you know the
[01:39] workflows for me to share them with you
[01:41] or code Snippets that I use in the video
[01:43] so all those resources can sort of be
[01:44] attached to certain videos under there
[01:46] so everything will be in one clean space
[01:48] so please hop in there I'd love to chat
[01:49] with you guys and you know I I'll see
[01:51] you in there but back to the video all
[01:52] right so here is the high priority email
[01:54] we're about to fire off it says hi Nate
[01:56] we need your immediate approval on the
[01:57] final proposal for the Johnson project
[01:59] the deadlines 5: p.m. today and the
[02:01] client is expecting us to proceed please
[02:03] review and confirm as soon as possible
[02:05] thanks Dwight so what we're going to do
[02:07] is we're going to fire this email off
[02:09] now back in N end we're going to hit
[02:10] test workflow we're going to bring in
[02:12] the telegram we can see that it got
[02:13] classified as a high priority email
[02:15] created a draft create the draft in
[02:17] Gmail and then it let us know high
[02:19] priority email from Nate herkelman we
[02:21] have created a draft with the subject
[02:23] approval needed for Johnson project
[02:25] proposal so if we hop into Gmail we can
[02:27] see the email that we got if we refresh
[02:30] this real quick we should see that it
[02:31] got labeled as high priority and then
[02:33] within our drafts we'll see the draft
[02:35] that was created which says hi Dwight I
[02:37] received the final proposal for the
[02:38] Johnson project and I approve it to
[02:40] proceed everything looks in order let's
[02:41] move forward as planned so it's nice
[02:43] that it makes this draft for you it
[02:45] won't actually send this off because you
[02:46] know something high priority you want to
[02:47] make sure that you're involved make sure
[02:49] that you're getting the right
[02:49] information fed back to whoever the
[02:51] email is from but that's nice because it
[02:53] gives you a nice starting point or
[02:55] sometimes you can just send it off right
[02:56] away okay so let's break down this
[02:58] branch of the work flow first thing I
[03:00] want to point out is that it says high
[03:02] priority email from Nate herkelman and
[03:04] you might be confused as to why it's not
[03:05] coming from Dwight and that's because
[03:09] back here you know the email was signed
[03:11] off from Dwight but it's actually coming
[03:14] from one of my other emails which is
[03:16] Nate herkelman and that would be an easy
[03:17] fix we could go in here and have an open
[03:19] AI node figure out who actually signed
[03:21] off the email and that's who it would
[03:22] say in the telegram message but for the
[03:24] purpose of this video I wanted to pretty
[03:26] much pull from the email account that is
[03:28] being sent so just wanted to clear that
[03:29] up all right now back in Ed end let's
[03:31] figure out what's going on here so the
[03:32] email comes in and we can see over here
[03:37] this is the content of the email so we
[03:38] have this thing that I just sent off
[03:40] here then it goes into the text
[03:42] classifier and we gave it parameters on
[03:44] how to distinguish what type of email is
[03:46] what so as you can see high priority
[03:48] right here we said emails requiring
[03:50] immediate detention or action typically
[03:52] from Key stakeholders clients or
[03:54] decision makers these emails often
[03:55] contain time sensitive requests
[03:57] deadlines or escalated issues and then
[03:58] we gave it some keywords that you may
[04:00] find in a high priority email so all it
[04:02] did here was then it spit it out and
[04:04] labeled it as a high priority email so
[04:06] that means that it's going to follow
[04:07] this Branch we in here all this node is
[04:10] doing is giving it the label of high
[04:12] priority back in Gmail as you can see
[04:14] and so once that takes place now it
[04:16] knows to go down this path so the first
[04:18] thing we have here is to create a draft
[04:21] so in here obviously we connect our
[04:22] account I gave it the model
[04:25] 40 and then here is the prompt I gave it
[04:28] so I said you're an executive assistant
[04:30] your job is to respond to incoming high
[04:32] priority inquiries as accurately as you
[04:34] can here is the email you're responding
[04:36] to so I went over here to the Gmail
[04:38] trigger where we're actually getting the
[04:39] original email and we just want to find
[04:42] text which is right here this contains
[04:44] the content of the email so I drag that
[04:46] in here and it's green and this just
[04:49] means that it's a JavaScript variable
[04:51] and as you can see it comes in with the
[04:52] actual email right here hi Nate we need
[04:55] your immediate approval on the final
[04:56] proposal for the Johnson project
[04:57] deadline is 5: p.m. today you get the
[04:59] point with the variables and then I said
[05:01] please output the following parameters
[05:04] which were subject and message so it
[05:06] gave us a subject and a message and then
[05:08] another important thing to point out is
[05:09] you need to check output output content
[05:12] as Json if you don't do that then it's
[05:14] going to lump all of this information
[05:15] into one field which is fine you could
[05:17] later parse that out but it's so much
[05:19] easier to just output it as Json right
[05:21] away so that we can drag in these fields
[05:23] later subject and message into the Gmail
[05:25] node to create that draft for us all
[05:28] right so we made the draft in open AI
[05:29] now we're going to open up a Gmail node
[05:31] that is to create a draft so we've got
[05:33] the resource draft and now all we need
[05:36] to do is drag in pretty much the subject
[05:38] and the message which we just got from
[05:40] open AI so right here this is why we
[05:42] output it as Json so they're two
[05:43] separate things we drag in subject and
[05:45] then we drag in message that's all I did
[05:48] and then once you test that that draft
[05:50] will be created in um your Gmail but
[05:53] then we want to alert the user that that
[05:55] happened so we come into here which is a
[05:57] telegram node we just want to send a
[05:59] text message we had to grab a chat idid
[06:02] which um if you don't know how to do
[06:03] that pretty much you want to grab your
[06:04] Telegram and you want to do a chat
[06:07] trigger and you'll just send your Bot a
[06:09] trigger or sorry you'll send your Bot a
[06:11] message and then your trigger will come
[06:12] through with data and one of those
[06:14] parameters from your telegram trigger
[06:16] will be a chat ID so you're just going
[06:17] to grab that chat ID and throw it in
[06:19] here then down here in this text box
[06:21] this is going to be what's actually
[06:22] being sent back to the user in telegram
[06:25] so we put NC caps high priority email
[06:27] from and this is where I said we grabbed
[06:29] who the actual email was from based on
[06:31] the email address not based on who
[06:33] signed it off so right here um I went
[06:35] into the Gmail trigger once again
[06:37] because this is where the original email
[06:38] came from and we close down headers we
[06:41] go all the way near the bottom we'll see
[06:42] from and then down here we have an email
[06:44] address and the actual name of the
[06:46] person who sent it so you could sort of
[06:48] configure this how you want I just
[06:49] wanted to drag in the name of the person
[06:51] that sent it so as you can see in the
[06:52] result it says high priority email from
[06:54] Nate
[06:54] herkelman then I gave it we have created
[06:57] a draft with the subject and then just
[06:59] throw in the subject that way if you're
[07:00] getting multiple high priority emails
[07:02] throughout the day you can see exactly
[07:04] which ones were sent or which drafts
[07:06] were created from um this agent based on
[07:08] each subject and at what time that sort
[07:10] of thing so that was it for this high
[07:12] priority Branch now we're going to do an
[07:14] example for the customer support Branch
[07:15] where open AI creates an email and it
[07:17] actually just automatically takes care
[07:19] of it for us and then lets us know that
[07:20] it did that for us all right this is the
[07:22] email we're going to use for the
[07:23] customer support Branch it says hello
[07:26] I'm unable to log into my account on
[07:27] your dashboard I've tried resetting the
[07:28] password but it's still still isn't
[07:29] working can you help resolve this issue
[07:31] thanks Pam so we'll send that off okay
[07:34] back in NN we're going to test workflow
[07:36] and then I'm going to pull up telegram
[07:37] so we can see everything happen live but
[07:39] we'll hit test workflow Here Comes
[07:41] telegram we'll see that it's getting
[07:42] labeled came through as customer support
[07:44] an email is being created it's sent off
[07:46] back in Gmail and then we just got a
[07:48] confirmation confirmation message that
[07:50] says we have just responded to a
[07:52] customer support inquiry from Nate
[07:53] herkelman so let's take a look at what's
[07:56] going on within each node in this Branch
[07:58] so at this point everyone should
[07:59] understand how it's being triggered how
[08:01] it's being classified and then we got it
[08:03] as customer support so now we're going
[08:05] to go into this open AI node where we're
[08:06] actually creating the
[08:07] email first thing we want to do is
[08:09] obviously set up credentials we're doing
[08:10] text message a model gbt 40 and now
[08:13] let's get into this prompt so here I
[08:15] said you're a customer service
[08:16] representative your job is to respond to
[08:18] incoming customer support inqueries as
[08:20] accurately as you can and if it is an
[08:22] inquiry you cannot handle please refer
[08:24] to the user please refer the user to the
[08:26] following email customer support at abcc
[08:28] corp.com
[08:30] then we said here's the email you're
[08:31] responding to once again this is a
[08:33] variable this is the actual email down
[08:34] here and all we did was went to the
[08:36] Gmail trigger close out headers so we
[08:38] can get to the raw text and right here
[08:40] we have the text which is the actual
[08:42] email that we just got from
[08:44] Pam one thing that I wanted to point out
[08:46] is that you know for the purpose of this
[08:47] video I just set everything up without a
[08:49] knowledge base but if you were actually
[08:51] using this inside your business you'd
[08:53] want to actually give the agent access
[08:54] to you know a list of your products and
[08:57] information about each product or a list
[08:59] of you know Common FAQs and sort of how
[09:01] you can respond to that so that it's
[09:03] giving out in accurate information but
[09:05] like I said the purpose of this video I
[09:06] just left it as a GPT 40 model so as you
[09:09] can see over here we get we got the
[09:10] email back for Pam I'm sorry to hear
[09:13] that you're experiencing trouble logging
[09:14] into your account please try the
[09:15] following steps so it listed out some
[09:16] steps and then it said um thank you for
[09:18] your reaching out and we apologize for
[09:20] any inconvenience this may have caused
[09:21] best regards your name so this filled in
[09:24] with a variable we could easily get rid
[09:26] of this real quick I'll show exactly how
[09:28] we do that let me just type about
[09:29] something real quick in this prompt so
[09:31] we just threw in the prompt please sign
[09:32] off the email as Kelly don't put
[09:34] something like your name in square
[09:35] brackets we'll just hit test step again
[09:38] and then we can see at the end of this
[09:39] email that it's thinking about it's
[09:41] going to it won't have your name it's
[09:43] going to have Kelly so down here best
[09:45] regards Kelly um and then also another
[09:47] thing to note we don't have to Output
[09:49] content as Json because it's just one
[09:51] full string coming through and you'll
[09:52] see that in the next node so once the
[09:54] email has been created obviously we want
[09:56] to reply to the email so in here we are
[09:58] going to to grab the thread ID and the
[10:01] messager snippet ID so on the left if
[10:03] you navigate over to the customer
[10:05] support Gmail node you'll see an ID and
[10:07] a thread ID so all we have to do is drag
[10:09] in this ID right here that's the message
[10:12] one and then this is the thread one and
[10:14] so this is just letting gml know what
[10:15] thread to respond to what message to
[10:17] respond to and then we had to drag in
[10:19] the actual message content that open a
[10:21] made for us so we're going to go back up
[10:22] to the open AI node that created an
[10:24] email and we'll see right here we have
[10:26] content which is hello Pam I'm sorry
[10:28] here you're experiencing trouble logging
[10:29] in and we'll grab the content and we'll
[10:31] just put it right here and that's how
[10:34] this node knows what to spit off to us
[10:35] so we're actually going to just test
[10:36] this again since I I tested the last
[10:39] step and now this this data went away
[10:40] but we'll just test this again so it's
[10:42] going to send another email
[10:44] off so this output just lets us know
[10:46] that the email was sent and then um we
[10:49] don't need to test this again but all we
[10:51] say here is we have just responded to a
[10:53] customer support inquiry from Nate
[10:56] herkelman because once again we dragged
[10:58] in the G Gmail trigger and we went all
[11:00] the way down to who the email was from
[11:02] in the first place and we dragged in the
[11:04] name so pretty much all of those are
[11:05] going to be set up like that but just
[11:06] want to make sure I'm explaining all
[11:08] these JavaScript variables so you guys
[11:10] can see what's going on finally I just
[11:12] wanted to show you guys the two emails
[11:13] that we just fired off within that reply
[11:15] node so the first one was the one to Pam
[11:18] where it signed off square brackets your
[11:20] name and then the second one was where
[11:22] we fixed that issue and it signed off
[11:23] best regards Kelly so that's sort of how
[11:26] it's going to automatically respond to
[11:28] customer support inquiry for you all
[11:30] right now it's time to do an example for
[11:31] a promotional email this one's going to
[11:33] be a little different as you can see
[11:34] because there's no second Gmail note
[11:36] attached so let me fire off an example
[11:38] email and we'll see what happens all
[11:40] right so this one is from Jim it says hi
[11:42] Nate we're excited to offer you an
[11:43] exclusive 25% discount on all AI
[11:46] Automation Services this month don't
[11:48] miss out on this limit limited time
[11:50] offer unlock your business potential
[11:51] blah blah blah so we're going to send
[11:53] this one off and we'll see what happens
[11:55] within nadn all right we're going to hit
[11:57] test workflow and then pull up Telegram
[11:58] and see everything happened Live Test
[12:01] workflow here's a telegram it's getting
[12:02] labeled as a promotional email it's
[12:04] going through this open a model which
[12:06] gave us a summarization and a
[12:08] recommendation and then it sent us back
[12:10] on telegram so as you can see right here
[12:11] we have here are details regarding a
[12:13] promotional email from Nate herkelman
[12:15] summary the promotional email offers
[12:17] Nate a 25% discount on services for
[12:20] limited time the goal is to encourage
[12:21] the unlocking of business potential and
[12:23] the recommendation is consider the
[12:25] relevance of AI Automation Services for
[12:26] Nate's business needs if applicable and
[12:28] beneficial IAL take advantage of the
[12:30] discount within the promotion
[12:31] promotional period evaluate the sender
[12:34] credibility and the quality of their
[12:35] tools before proceeding so pretty good
[12:37] recommendation nice way to see
[12:39] promotional emails that are coming
[12:40] through and I just sort of made it like
[12:42] this because I don't want um you know
[12:44] promotional email sometimes you want to
[12:45] think about and you want to be able to
[12:46] read into so just didn't want to fire
[12:48] off anything automatic yet but now let's
[12:50] take a look at what's going on within
[12:52] each node so same as all the other ones
[12:54] came in triggered got labeled
[12:56] promotional now within open AI we have
[12:59] have um another prompt so this one says
[13:02] you are in charge of promotions please
[13:04] evaluate the incoming promotional email
[13:06] and give us a quick summary and a
[13:07] recommendation so then we said here's
[13:09] the incoming message once again we
[13:11] dragged it from Gmail trigger and we
[13:13] dragged in the text of the email and
[13:15] then we said please output the following
[13:17] parameters separately one is a summary
[13:19] one is a recommendation and you can see
[13:20] on the right hand side it gave us both a
[13:22] summary and a recommendation and as you
[13:25] know we had to Output this one as Json
[13:27] because we wanted to get two separate
[13:29] fields and then the last step here is
[13:31] just firing off a telegram message back
[13:33] to us saying that we got a promotional
[13:35] email and here's a summary and here's a
[13:36] recommendation So within here same stuff
[13:39] I pretty much just copy and pasted all
[13:40] these telegram nodes and all I had to do
[13:42] is change the actual text but in here it
[13:44] says here are details regarding a
[13:45] promotional email from the email name
[13:49] and then we have the summary which we
[13:50] Dragged In from the open AI node and
[13:52] then the recommendation once which once
[13:54] again we Dragged In from the open AI
[13:56] node and here's what the text looks like
[13:58] and you I saw that come through within
[14:00] our telegram for the last example here
[14:02] we have an email from Angela she's
[14:04] saying hi Nate this is a reminder that
[14:05] your invoice for 2500 is due October 5th
[14:08] please ensure the payment is made by the
[14:10] due date to avoid any late fees let us
[14:12] know of any further details so we'll
[14:15] send this off and then we'll see it run
[14:16] through our nadn workflow all right
[14:18] let's test the workflow pull up telegram
[14:21] we see it get classified as finance and
[14:22] billing it's making a summary sent the
[14:25] email over to the finance department and
[14:27] then it let us know on telegram so you
[14:29] received a finance billing inquiry from
[14:31] Nate herkelman we have notified your
[14:33] finance department of this email so
[14:34] perfect you can see that on your phone
[14:36] that it got taken care of and you don't
[14:37] have to worry about that um yeah so
[14:40] let's get into what's going on within
[14:41] each node here all right so obviously
[14:43] like the other ones gets labeled right
[14:44] away and then we're coming into another
[14:46] open AI node here all we're doing is
[14:49] telling it you are Finance billing
[14:50] assistant your job is to summarize
[14:52] incoming emails related to finance and
[14:54] billing and summarize them in a short
[14:55] and concise way so here's the incoming
[14:57] email we gave it the the text from the
[15:00] Gmail trigger and then we said please
[15:02] output the following parameters we
[15:03] wanted a subject and we want a message
[15:05] and we output this as Json so for this
[15:08] use case my original idea was why don't
[15:10] we just forward this email to the
[15:12] finance department so I came in here to
[15:14] grab a Gmail you know forward node and I
[15:17] couldn't find one and I don't know if I
[15:18] am just um missing something but
[15:22] couldn't find one so I figured okay well
[15:23] for the purpose of this video we'll just
[15:25] send them a message with that that
[15:26] information summarized which might at
[15:28] sometimes even be better they might pay
[15:30] attention to something more coming from
[15:31] you rather than just forwarding
[15:33] something so anyways we're having them
[15:35] send a message based on the summary from
[15:38] openai you can put in sort of a fixed
[15:40] email if you have like a certain
[15:42] Department you want to send it to or if
[15:43] you need to work off of something else
[15:46] you can do that too but I just threw in
[15:47] another email that was fixed so it's
[15:49] always going to come to this email if
[15:50] it's finance department or sorry if it's
[15:53] meant to be sent to the finance
[15:54] department um and then for the subject
[15:57] we wanted to obviously we split this
[15:58] last one is Json so we could get two
[16:00] different fields one was subject which
[16:01] we can drag in here and the second one
[16:04] was the message that we could drag in
[16:05] from here and then I always just make
[16:07] sure that my emails are sending through
[16:08] as text and we hit that we see that this
[16:12] got
[16:13] sent and then finally we get a
[16:14] confirmation to our telegram it says you
[16:17] have received a finance billing inquiry
[16:19] from um Gmail trigger the name which was
[16:22] Nate herkelman in this case and then it
[16:24] says we we have notified your finance
[16:27] department of this email so all that
[16:28] worked as according to plan so hopping
[16:31] back into Gmail we can see the actual
[16:32] email that we received from Angela with
[16:34] the invoice information and then if we
[16:36] switch over to my other email we can see
[16:38] that this is what got sent the invoice
[16:40] is for 2500 please ensure payment is
[16:43] made by the due date to avoid late fees
[16:44] so this was just a really quick concise
[16:46] um Snapchat that you want to send to
[16:48] your finance department in this case and
[16:49] as you can see it came through and then
[16:51] here's just a look at all the emails we
[16:53] just did in this example these top four
[16:54] are the ones that we just did and then
[16:56] these bottom four were ones that I did a
[16:58] few weeks back when I was actually just
[17:00] made the video for the labeling section
[17:02] of this workflow so you may recognize
[17:04] sort of these subjects right here and
[17:06] now is just a little bonus part what I
[17:08] want to do is I want to show you guys
[17:09] how you could actually make the name
[17:11] showing up in
[17:13] telegram reflect from what is the name
[17:15] that's being signed off in an email so
[17:17] like this one was signed off by Angela
[17:18] from the accounts department but we got
[17:20] the notification that we received an
[17:22] email from Nate Herman Because the
[17:24] actual email address is associated with
[17:25] Nate herkelman so I'm going to show you
[17:28] guys an and how we can sort of configure
[17:30] this in order to get the accurate name
[17:32] of whoever's sending that email so I'm
[17:34] in the open AI node for the the finance
[17:37] department Branch just to show you guys
[17:38] an example and here at the bottom we
[17:41] have you know this is the original
[17:42] prompt we wanted to summarize the
[17:43] incoming email we gave it the email and
[17:45] then we listed the parameters we wanted
[17:47] which was originally just subject and
[17:49] message but now I added a third one
[17:51] called from and I said this should be
[17:53] whoever signed off the incoming email
[17:55] for example if the email says best Roy
[17:57] the warehouse you would output Roy from
[17:59] the warehouse another example is if the
[18:02] email was signed off regards Toby HR
[18:05] your output would be Toby from HR so
[18:07] let's test the step and we should get
[18:08] Angela from the accounts
[18:13] Department perfect so the from down here
[18:15] says Angela accounts
[18:17] department now we will come into this
[18:19] next part which is the Gmail node we'll
[18:21] just send off another Gmail to the
[18:23] finance department and then finally
[18:25] we're back in the telegram where we
[18:26] actually wanted this change to take
[18:27] place so now we're going to get rid of
[18:29] this because it's not going to say from
[18:31] Nate herkelman we want it to be coming
[18:34] from the from section of open AI that we
[18:36] just extracted out of there so in here
[18:38] we can see we got subject message and
[18:39] from we would just drag in from right
[18:41] here and now you can see it's coming
[18:42] from Angela accounts department so we'll
[18:45] test this I'll pull up my Telegram and
[18:47] now we can see you have received a
[18:48] finance billing inquiry from Angela
[18:50] accounts department so that's going to
[18:52] more accurately reflect who's actually
[18:54] signing off an email let's say you're
[18:55] getting tons of emails and the actual
[18:57] you know Corporate email coming through
[18:59] you don't want to be seeing that you
[19:00] want to be seeing what representative
[19:01] from the email or from the company is
[19:04] sending you that specific email so
[19:05] that's just another way to quickly fix
[19:07] that section and parse out the
[19:09] information that you want to get back to
[19:10] you in telegram you know just to make um
[19:13] your day as convenient as possible so
[19:15] that's it for this one as far as the
[19:17] current build I could definitely expand
[19:18] off of this if you guys are interested
[19:19] in seeing something like that but
[19:21] obviously one last thing to note is that
[19:22] you want to activate this workflow
[19:24] because this is a trigger so it's going
[19:25] to check for incoming emails and that's
[19:27] when this thing will take place so make
[19:29] sure that's active otherwise it actually
[19:30] won't be constantly checking your inbox
[19:33] but yeah I feel like I say this at the
[19:34] end of every example um I know this one
[19:37] was a little bit simple but I just
[19:38] wanted to sort of open up your guys'
[19:40] eyes as to how you can break down a flow
[19:42] and make individual branches and as you
[19:44] go no by node it's really not as
[19:46] complicated as you may think when you
[19:47] just open up a workflow that sort of
[19:48] looks like this I know you guys have
[19:50] been asking a lot for me to share some
[19:51] of these workflows and like I mentioned
[19:53] I'm sort of working on a school
[19:54] Community where I'll be able to have
[19:56] each video and a bunch of resources DED
[19:58] dedicated to that video tagged
[20:00] underneath so that all of you guys can
[20:01] hop in there for free and just sort of
[20:02] grab all these resources but that is
[20:04] coming soon in the meantime I'll
[20:06] definitely figure out a way for you guys
[20:07] to get these workflows so you guys can
[20:09] get in there and just start playing
[20:10] around because that's definitely the
[20:11] best way to actually learn this kind of
[20:13] stuff but for now um you know stay tuned
[20:15] for the school Community but that's it
[20:17] for today's video so thanks guys