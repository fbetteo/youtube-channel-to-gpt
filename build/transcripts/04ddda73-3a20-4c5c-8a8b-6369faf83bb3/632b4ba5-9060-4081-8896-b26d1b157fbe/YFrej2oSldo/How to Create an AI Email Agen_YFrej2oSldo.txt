Video Title: How to Create an AI Email Agent with n8n (No Code, Step-by-Step Tutorial)
Video ID: YFrej2oSldo
URL: https://www.youtube.com/watch?v=YFrej2oSldo
View Count: 41,907

[00:00] all right so today I'm going to be
[00:01] walking through step by step how to
[00:03] build a super simple email AI agent if
[00:05] you know anything about agents you know
[00:07] that they can get super complex as you
[00:08] give them access to more tools and
[00:10] expose them to different scenarios so I
[00:12] just wanted to keep this first one super
[00:14] simple just to give everyone a good
[00:16] understanding of what agents are capable
[00:17] of and how you connect them to Tools in
[00:20] order to do what you want them to do to
[00:22] automate workflows basically so let's
[00:24] get straight into this one we just
[00:26] wanted to start off here with a quick
[00:27] demo of what the agent actually looks
[00:29] like and what it's going to do we got
[00:31] the agent don't worry a lot of this
[00:33] stuff probably won't make sense but by
[00:34] the end of the video it all will we've
[00:37] got the tools it's going to use here
[00:38] email the pine cone Vector database and
[00:41] then you can see all of the embeddings
[00:43] of a large language model in here we're
[00:45] using open Ai and that is basically just
[00:48] how it's going to know what to make the
[00:49] email say how to find the information
[00:52] the contact information that sort of
[00:53] stuff so let's go in here and say send
[00:56] an email to phield dumpy asking him
[01:02] what's
[01:04] up hopefully this doesn't take too long
[01:06] to
[01:08] execute email has been sent to Phil
[01:10] dumpy asking what's up if you need
[01:11] anything else feel free to ask Perfect
[01:14] all right so let's just go in
[01:16] here hey Phil just checking in to see
[01:18] what's up best Nate super simple email
[01:20] but just wanted to give you guys a quick
[01:21] demo of that okay let's get into
[01:23] actually building this now so the
[01:25] resources needed for this video naden
[01:28] that is the software we're going to be
[01:29] using to to build this um agent we got
[01:33] pine cone that's just a vector database
[01:35] tool where we'll be putting our contact
[01:38] information we got Google Docs which is
[01:40] actually where we have our content
[01:41] information we'll be pushing it from
[01:43] Google Docs into the vector
[01:45] database and then we've got open AI API
[01:48] obviously that is how we're going to use
[01:51] the large language model in this um
[01:53] agent and then 5 years of coding
[01:56] experience um yeah obviously that's a
[01:58] joke because that's kind of the whole
[01:59] point of this video
[02:00] and these low code no code tools
[02:03] so we're going to be building three
[02:05] separate workflows today the first one
[02:07] is going to be to push contact data from
[02:10] Google docs to the pine cone Vector
[02:12] store and if you've never heard of a
[02:14] vector database right now um or if
[02:16] you've never heard of it before don't
[02:18] worry about that right now it's
[02:19] basically just where we're going to be
[02:21] pushing the data so that the agent can
[02:22] pull it there's a lot of resources on
[02:24] what Vector databases actually are and
[02:26] why they're important for agents but
[02:28] let's just keep it simple for now um
[02:30] we're going to be building the tool also
[02:31] in NN that's going to be the send email
[02:33] tool and then finally the actual agent
[02:35] itself and all three of these workflows
[02:36] are going to be in n8n which is really
[02:39] awesome to keep everything
[02:41] together so yeah that's basically it
[02:43] let's just get straight into this first
[02:45] let me just show you what my contact
[02:47] data looks like so um these are all of
[02:49] my best friends pretty much I've got
[02:51] their email addresses here obviously
[02:53] fake email add addresses besides this
[02:54] one is one of mine so we're going to be
[02:56] sending it to Phil dumpy and that's how
[02:58] it knows to send it to this email
[03:00] address
[03:01] here um then this is pine cone you want
[03:04] to go in here make an account um it's
[03:06] super super cheap it's actually I don't
[03:08] even know if I've paid for it yet it's
[03:09] based on usage so um yeah super cheap
[03:13] you're going to basically just go into
[03:15] pine cone here you're going to create an
[03:16] index you can name it whatever you want
[03:19] the only thing that really matters to
[03:21] set up here is right here the
[03:22] configuration you need to set it up by
[03:24] model three small you're going to set
[03:26] that configuration and create that index
[03:29] so I'm not going to make one cuz I
[03:30] already I've already got one as you can
[03:31] see right here it's called
[03:33] sample and actually let me just get rid
[03:35] of this data in here so I can show we
[03:38] exactly how we're going to push this
[03:39] data
[03:40] in here
[03:44] so all
[03:46] right back to end end
[03:50] so we're going to add workflow to
[03:52] project and this first one is going to
[03:54] be the workflow that's going to push the
[03:56] data into pine cone so I'm just going to
[03:58] call this one pine cone
[04:00] um all right so the first step is we
[04:03] need to add a trigger as you can see
[04:05] there's a lot of different options for
[04:06] triggering this
[04:08] workflow um but we are going to start
[04:10] off with trigger manually we'll get into
[04:12] a few of these other ones later but
[04:13] we're going to trigger manually which
[04:15] basically just means that when we click
[04:17] test workflow that's when the scenario
[04:19] is going to run so we've got this
[04:21] trigger here we're going to click on
[04:23] this plus to add a
[04:24] node the node that we're going to grab
[04:26] here is Google Docs so as you can see
[04:29] there's tons of Integrations in NN we're
[04:31] going to grab Google Docs and then we
[04:33] have to choose a specific action within
[04:35] Google doc so what we're going to do
[04:38] here is um get a
[04:42] document okay
[04:44] so here's something that I got really
[04:46] confused about when I was trying to
[04:48] learn about how to build agents and
[04:49] stuff and that was being able to call
[04:52] all these different nodes so Google Docs
[04:55] open
[04:56] API um Google Drive Gmail
[05:00] pine cone pretty much all of those you
[05:02] have to call them through n in and it
[05:05] has to know that you have permission to
[05:06] access this information so you have to
[05:07] set up these credentials API Keys
[05:09] whatever they're called whatever you
[05:10] want to call them so you're going to go
[05:12] in here you won't have this you'll have
[05:13] to create a new
[05:15] credential um kind of seems confusing
[05:18] you need client ID client secret but if
[05:21] you click on open docs it's super super
[05:24] intuitive to just follow exactly what
[05:26] they say here so you'll have the
[05:27] instructions here just follow it step by
[05:29] step but I'll kind of show you what you
[05:30] need to do here you're going to go into
[05:35] Google cloud services I think it's right
[05:36] here Google Cloud account yeah you're
[05:38] going to go in here make an account set
[05:40] up a project and then once you're in
[05:41] that project you need to find what you
[05:43] need to enable so you've got like Drive
[05:45] Gmail and docs is pretty much what I
[05:47] have here so like let's say for Google
[05:50] Docs I search it the Google Docs API and
[05:54] then all you have to do really is just
[05:57] enable it right here there'll be a
[05:59] button maybe here that says enable so
[06:01] you'll enable it and then you
[06:04] will need to go down to credentials
[06:07] you're going to create credentials o off
[06:09] client ID and then it'll be right here
[06:12] basically it'll have your client ID and
[06:13] your secret I'm not going to open mine
[06:14] up because it looks Bose me but that's
[06:17] all you need to do pretty much and then
[06:18] you're going to put those into here ID
[06:20] secret copy and paste then you need to
[06:23] set up o 2 going to be in the same exact
[06:25] place o consent screen pretty much just
[06:28] giving permission
[06:31] what I did was I added my email here as
[06:34] a test user so it knows that I have
[06:36] remission or that NAD has permission to
[06:38] access my Google Docs my Gmail anything
[06:41] like that you could also just publish
[06:43] the app but if you're running into
[06:44] issues on nadn where it's saying that
[06:47] your account is blocked or you don't
[06:48] have permission it's probably because
[06:50] you didn't set up that o off2 screen
[06:53] correctly and then finally while you're
[06:55] setting all that up there will be a
[06:56] prompt that tells you to enter this
[06:58] redirect URL so you're just going to
[07:00] copy that paste it right into there if I
[07:02] didn't explain that well enough like I
[07:03] said just go to docs um and it's super
[07:07] simple okay so I'm going to connect to
[07:09] my Google Docs account we're getting a
[07:11] document we're getting it and then you
[07:14] need the doc ID or URL the ID is
[07:18] basically this part of the um URL so I
[07:22] copy this here you just want to make
[07:23] sure you don't get the slash edit
[07:25] everything after right here I'm going to
[07:28] put that um ID into there and then you
[07:31] want to test it because then you know if
[07:32] it actually is working or not we're
[07:34] testing it we see this is um the
[07:36] information the Conta information that
[07:38] we wanted to pull so that step is
[07:39] working here okay so now we know that
[07:43] that's pulling correctly now we need to
[07:46] um add a node that's going to push this
[07:48] into pine
[07:50] cone so pine cone Vector
[07:53] store credentials once again you're
[07:55] going to have to set up the credentials
[07:57] so you're going to create a new one all
[07:59] the one needs is an API key back into
[08:01] pine cone super simple right on this
[08:03] leth hand side API Keys copy that paste
[08:07] it in n andn and you're good to
[08:09] go so I think we'll go with this one
[08:12] here I think that's the right one we
[08:14] don't want to retrieve documents as you
[08:15] can see this is the operation for this
[08:17] node we want to insert documents we'll
[08:19] be retrieving them later but right now
[08:21] just
[08:22] inserting and then um the index is
[08:25] sample as you can see that is what my
[08:27] index is called right here so we want to
[08:30] make sure that we're choosing sample
[08:32] because that's the one that we're
[08:34] pushing our contact database into and
[08:36] then finally you want to add a name
[08:39] space we're going to call this one
[08:42] context and this is basically just to
[08:45] organize your data basically if you've
[08:46] got different client information you
[08:48] want to split that into different name
[08:49] spaces that sort of thing it makes the
[08:51] agent more efficient at being able to
[08:53] find what you're looking for basically
[08:56] Okay so we've got that set up
[08:58] here now we need need to add um a data
[09:01] loader can leave this as as it is and
[09:04] then a token
[09:06] splitter and we've got chunk size and
[09:09] we've got chunk overlap so the chunk
[09:11] size is basically just the number of
[09:13] characters that's going to be in each
[09:15] chunk um your agent's going to call this
[09:18] tool go search in the vector database
[09:20] and it's going to grab chunks and look
[09:21] through them so the bigger your chunk
[09:23] size the the more data at a time but
[09:27] like I said the database wasn't that big
[09:28] for contact data base so I'm just going
[09:30] to go 200 here and then overlap is how
[09:33] much overlap is going to be between
[09:34] chunks so we can just leave that as zero
[09:36] doesn't really apply too much right now
[09:39] and then the last thing we need to do is
[09:40] add the
[09:41] embedding I always pretty much just do
[09:43] open API or open Ai and then again
[09:47] another credential this one again you're
[09:49] going to need your API key so another
[09:52] simple one you're going to go to open AI
[09:54] if you haven't made an account you have
[09:56] to make this so that you can call the
[09:57] large language model open or AI API keys
[10:02] and then right here just copy that value
[10:06] once again I can't show you guys cuz
[10:08] I'll be exposed but important step here
[10:10] make sure that the model is three small
[10:13] because if you remember in our pine cone
[10:15] Vector store you made the model three
[10:17] small so you got to make sure you do
[10:18] that again here
[10:19] too okay now we're just going to want to
[10:22] go ahead and save
[10:23] that and test this workflow so that's
[10:26] going to run everything grab the Google
[10:28] Doc oh you see here it's not connected
[10:31] to this node so connect that save it
[10:35] let's run it again it's going to pull
[10:37] that now it's going into here loaded our
[10:39] data and now let's go back into the name
[10:41] space and check if it
[10:43] worked oh yeah I just refreshed as it
[10:46] came in
[10:49] but I just wasted like 10 seconds of
[10:52] everyone time okay contacts there we go
[10:54] it's in there we're good to go so that
[10:57] is this workflow our pine cone pushing
[10:59] it into pineco now we're going to do the
[11:01] the send email tool so we've got send
[11:08] email trigger
[11:10] so this workflow is going to be called
[11:13] by the agent when we tell the agent hey
[11:15] can you send an email to blank then it
[11:17] knows okay I've got to use the tool that
[11:19] says to send an email so the trigger
[11:22] here is when called by another workflow
[11:24] we haven't made that workflow yet of the
[11:27] AI agent that's going to call this but
[11:29] that's how this one will be
[11:31] triggered um we'll configure this in a
[11:33] sec we just wanted to start that off
[11:35] here um the next thing that we need to
[11:37] do here is grab
[11:40] Gmail and a lot of Integrations again a
[11:43] lot of actions here obviously we just
[11:45] want to send a message so we're going to
[11:47] click Send a message I think this is the
[11:49] last credential you need to connect I
[11:51] hope CU it's super annoying but once you
[11:53] do then they're all there so Gmail
[11:55] you're going to have to get client ID
[11:56] and client secret but I'm pretty sure
[11:59] um that should be easy now that you
[12:01] already have all this other stuff set up
[12:03] and you've got your credential screen
[12:04] right here so super
[12:07] simple all right so we've got all that
[12:09] set
[12:11] up we're going to be
[12:14] sending a
[12:17] message and all of this stuff is going
[12:20] to be variable right so you want to
[12:22] change two to an expression CU that's
[12:25] going to change subject expression email
[12:27] type I'm going to do text
[12:29] the message is definitely going to be
[12:31] variable and then we've got some options
[12:33] here append NN you want to turn that off
[12:36] otherwise at the bottom it's going to
[12:38] say like this message was generated by
[12:40] you know or sent by n turn that off
[12:44] BCC also
[12:46] variable
[12:47] CCC also
[12:49] variable and if you if these things are
[12:53] left blank it'll just be left blank it
[12:54] won't really it won't mess with or it
[12:56] won't break the Automation and then send
[12:59] name this can actually be
[13:01] fixed because likely this email will be
[13:04] a personal agent or or sorry this agent
[13:06] will be a personal agent or for a
[13:08] specific client and they'll always be
[13:10] sending from the same address so you can
[13:13] leave that as fixed and just leave it
[13:15] blank for now because we have to get the
[13:17] script to read into these specific
[13:19] Fields so come out of here copy this
[13:22] node just you know command C and then
[13:27] we're going to use chat so
[13:29] if you paste that in here it's going to
[13:30] show you basically like the Json script
[13:33] that is behind this node all we need
[13:35] here is we're looking at the parameters
[13:37] because that's what's going to fill in
[13:39] so I'll try to explain that better in a
[13:40] sec but let's just grab these parameters
[13:43] real quick we're going to copy those
[13:45] parameters paste them back in here and
[13:47] ask chat
[13:51] to um list these
[13:55] parameters in a
[13:59] query field as
[14:02] a stringified
[14:06] list okay we also want to
[14:12] exclude options I hope it understands
[14:14] that we're talking about the this
[14:18] parameter okay that is not what we
[14:20] wanted let's try that again
[14:22] chat list these parameters in a query
[14:25] field as a stringified list let's just
[14:27] try that
[14:32] okay not cooperating okay this looks
[14:35] more like it there's lots of ways to do
[14:38] it um I wanted to show you guys how to
[14:40] use chat to do it because it's easier
[14:43] for um you know low code no code so this
[14:47] looks more right it didn't exclude
[14:48] options so we're going to ask it to do
[14:55] that
[14:57] okay yeah that looks a lot more right
[14:59] right so you can go ahead and copy this
[15:00] here but I'm also going to show you guys
[15:02] the way that I usually do it
[15:04] because it's easier to read and easier
[15:07] to
[15:08] troubleshoot um and that's you're going
[15:10] to put it right in here basically
[15:12] so I'm not going to use the one that
[15:14] chat just gave us I'm going to use
[15:19] this I just think this one's a lot
[15:21] easier to read
[15:22] because basically all you're saying
[15:26] is the agent has to figure out who's it
[15:28] going to send to
[15:30] and the next one is going to be subject
[15:32] the next one's going to be email type is
[15:33] already already text message is what so
[15:38] if that makes sense it's a lot easier
[15:39] for it's a lot easier to read that in my
[15:41] opinion than seeing all these um slashes
[15:44] and closed brackets square brackets all
[15:47] that kind of stuff
[15:49] so that's why I use sort of this um what
[15:54] do you want to call it taxonomy but got
[15:57] to make sure it's in a query field
[16:00] and in quotes like this
[16:03] so probably doesn't make a ton of sense
[16:05] right now
[16:06] but let's just take a step back so when
[16:09] the
[16:10] agent is understanding that you need to
[16:12] send an email it's going to take your
[16:14] message so if it says can you send an
[16:17] email to Phil dumpy asking what's up
[16:19] it's going to understand okay so we need
[16:21] to send it to Phil dumy we're going to
[16:24] make a subject based on what they
[16:26] prompted me so the subject here is going
[16:28] to be what's up the message is going to
[16:30] be hey how's it going was wondering how
[16:32] you're doing you know what's up with you
[16:34] that sort of thing and then it will
[16:35] leave these other ones blank because we
[16:36] didn't mention a BCC CCC that kind of
[16:40] thing and
[16:42] then before we push it into Gmail we
[16:45] need to grab uh open Ai and we're going
[16:48] to do message a
[16:50] model connect that you should be good on
[16:53] that already we've got text message
[16:56] model we're going to choose 40 just
[16:59] seems to work the best and
[17:03] then in this in this message we are
[17:05] basically going to
[17:07] say parse the query the one that we just
[17:10] put into the previous
[17:12] tool and output the
[17:17] parameters
[17:19] separately I like to do system prompt
[17:22] then it knows um it's sort of its role
[17:26] we've got simplify output we want to
[17:27] Output the content as J on and then we
[17:30] also need to add this message here
[17:32] because it doesn't know exactly what the
[17:34] query is that it's parsing so that's
[17:36] where we drag from here this query is
[17:38] going to go right into here make that
[17:41] fixed or sorry make that an
[17:43] expression and this we should be good to
[17:46] go with this node you want to go ahead
[17:47] and test this step
[17:49] here and you can see that it came
[17:52] through correctly so it knows these are
[17:54] our parameters we're going to send it to
[17:56] someone subject message all this kind of
[17:58] stuff stuff so that's how we know that
[18:00] this node is working correctly but one
[18:02] thing that's super important here that I
[18:04] forget and I pretty much just forgot
[18:06] again is in front of this Json query you
[18:09] need to add
[18:12] json.
[18:13] stringify and then open parenthesis and
[18:16] close it off if you don't do that it's
[18:20] going to read in your um values over
[18:24] here as objects rather than a string and
[18:26] that's not good because
[18:29] it's going to give you an error and say
[18:30] expected string but received an object
[18:32] that sort of thing and really
[18:35] frustrating
[18:36] because well I just hate when things
[18:38] don't work right so okay we've got that
[18:42] set up now we need to come into here and
[18:44] actually set up Gmail so it knows what
[18:47] to send and who to send it to it's
[18:50] really simple we've got our content over
[18:51] here from that Json query and we're just
[18:53] going to drag stuff in so send two is
[18:55] the two for the Gmail node subject
[18:58] subject super easy right got
[19:02] message CCC CCC and then here we're just
[19:06] going to go ahead and send her name it's
[19:08] going to be from
[19:09] Nate okay save that and now we just need
[19:12] to do one more thing we're going to grab
[19:14] a set it's edit Fields set so this is
[19:18] manually making a field manual mapping
[19:21] add one here we're going to call that
[19:25] response make sure it's a string and
[19:27] then we're going to say sent that's all
[19:29] you need to do here save that and our
[19:32] email tool should be done so the reason
[19:34] why we have to do this is
[19:37] because the agent
[19:39] sends um the query over here it's going
[19:42] to go through here go through here and
[19:44] then we need to go back to the agent we
[19:46] need to communicate back to the agent
[19:47] that we did this task that it's done so
[19:50] then it can communicate back to the
[19:51] human that prompted it okay we did it so
[19:54] this sets the the variable the field as
[19:58] of response to set sent so then the
[20:01] human knows right okay so we've got pine
[20:02] cone we've got the send email now we're
[20:04] going to actually make the agent so
[20:07] first up again we have to build a we
[20:09] have to put a trigger we're going to use
[20:11] on chat message this time because we
[20:14] want to trigger the agent or trigger the
[20:16] workflow by talking to it so we're going
[20:19] to leave that as is for now the next
[20:22] thing to do is add the agent we can also
[20:24] just go down here to Advanced AI you see
[20:26] the different there's the templates
[20:28] there are different things here with you
[20:30] know text classifier question and answer
[20:32] chain we're just going to grab the
[20:34] agent it's going to be a tools
[20:37] agent um and we're not going to take
[20:39] from previous node automatically we're
[20:41] going to Define that and this is going
[20:44] to be
[20:47] um it's going to be this variable right
[20:51] here json. chat input it's not working
[20:56] yet because we haven't actually ran
[20:57] anything but that that is what's going
[20:59] to fill in over here basically saying
[21:01] like this is what the human just asked
[21:03] us to do so we're going to go to require
[21:07] specific output
[21:08] formula and then system message this is
[21:11] where you're actually going to prompt
[21:13] the agent so we're not going to do that
[21:15] yet but just wanted to add in
[21:17] these options real quick here so we
[21:19] don't forget and then I want to return
[21:21] immediate steps so that when things
[21:23] error and don't work we can see what the
[21:25] agent did exactly so this is what we
[21:27] need to do for now we need to come back
[21:29] here and prompt this later but that's a
[21:31] good start so you can see we've got
[21:34] different things we can add to the agent
[21:35] output parser tool memory chat model
[21:38] we're just going to touch tool and chat
[21:40] model for today so chat model same thing
[21:43] open
[21:44] AI connect it we're going to grab 40
[21:47] especially for one that's going to be
[21:48] talking to us and
[21:50] thinking tool we're going to call an n8n
[21:55] workflow this is obviously the one that
[21:57] we just made the tool that's a send
[21:59] email just want to keep everything
[22:01] organized here especially once you start
[22:03] to have multiple tools given to an agent
[22:06] and then you need to give it a
[22:07] description of when is the agent going
[22:09] to use this tool so call this tool when
[22:13] you want when you need to send an email
[22:18] there we go it's simple as
[22:21] that
[22:23] Source um database the workflow we can
[22:26] Define from a list
[22:29] um you can also do it by ID but you'd
[22:30] have to grab that URL thing so the list
[22:32] is easier because we have the send email
[22:34] right
[22:35] here field to return response so that's
[22:38] when we set the response field earlier
[22:40] to sent and let's see is there anything
[22:43] else that we need to do on this one
[22:46] specify input schema yeah that's what we
[22:47] need to
[22:48] do we want to Define
[22:50] below and this is like the schema that
[22:53] this tool is going to be using so what
[22:55] we need to do save that real quick we
[22:58] need to go back to our send email
[23:00] tool we need to make sure that the
[23:02] schema is the same from right here
[23:05] because this is what we gave this tool
[23:08] so copy
[23:10] that head back over to our
[23:13] agent which is this one I should name
[23:16] this real quick so I don't get
[23:21] confused okay and then we're going to
[23:23] put that we're going to paste that right
[23:24] back into
[23:26] here there we go so this tool should be
[23:28] set up
[23:31] now save that okay I think we just need
[23:34] to add the one more tool which is going
[23:35] to be the pine cone Vector database and
[23:38] as you can see we can't just straight up
[23:39] add pine cone we have to add the vector
[23:41] store so we've got this um this is just
[23:44] going to be contacts
[23:47] data again we need to give it a
[23:49] description
[23:51] so call this
[23:53] to retrieve
[23:56] information about contact
[23:59] like email
[24:04] address um what's wrong with this ah
[24:08] can't put a space in that for some
[24:09] reason so good to go here we got to add
[24:13] a model we're going to again go open
[24:16] AI
[24:17] 40 that's good to go I'm just going to
[24:19] move this stuff over here and then the
[24:22] actual Vector store what's it pulling
[24:23] the data from Pine
[24:26] Cone got to connect this again here this
[24:29] time we're going to do retrieve
[24:31] obviously get the right index and then
[24:34] again going to make sure you're pulling
[24:37] the right name space contacts I'm pretty
[24:40] sure that's what we called it right
[24:41] contacts
[24:43] sample okay perfect got that here so
[24:47] let's save that oh can't forget to do
[24:50] the embedding otherwise it wouldn't know
[24:52] how to figure out what's a name what's
[24:55] an email address that sort of thing so
[24:58] again make sure it's three small because
[25:00] that's how we set up our Vector store
[25:03] and then we're just going to save
[25:04] that okay so going to test this out now
[25:09] hopefully it doesn't air but if it does
[25:11] we can sort of go into how you can find
[25:13] out where it's airing and how to fix
[25:14] that so let's try this so again send an
[25:18] email to Bill
[25:21] duny asking if he wants to get lunch
[25:30] seems there's an issue with sending the
[25:31] email would you like to try again later
[25:32] okay so let's see what happened we can
[25:34] see it AED at the send email tool we're
[25:37] going to go to all executions to figure
[25:39] out what happened so we can see this
[25:40] here we're going to view
[25:46] it this is basically showing us what
[25:49] sort of data was running through at the
[25:52] time so we've got
[25:55] oh okay I think I know exactly what
[25:57] happened we didn't go back and prompt
[25:59] the
[26:00] agent so look it's got like it's got the
[26:02] right email it's got the right subject
[26:05] all this kind of
[26:06] stuff the issue I believe is just that
[26:09] we didn't prompt the agent
[26:11] because we always just forget to do that
[26:15] so that should be the issue so okay
[26:19] something
[26:20] cool that you can do is grab a
[26:24] screenshot of this workflow
[26:29] copy that we're going to go back into
[26:31] chat we're going to give it this picture
[26:33] and
[26:33] say please prompt this
[26:39] agent um include the
[26:43] parameters for the email tool as well
[26:49] as overall
[26:53] context background and instructions
[26:58] okay so prompting is super super
[27:00] important this definitely is not the way
[27:01] you'd want to do it when you're really
[27:03] building out a complicated agent but for
[27:06] now this should
[27:07] work but comp prompting is super super
[27:11] important as far as getting the email or
[27:13] getting the agent to consistently work
[27:14] the way you want it to so let's see if
[27:17] this works we're just going to grab from
[27:20] here up
[27:22] well okay so it's got context background
[27:24] instructions it included the parameters
[27:26] here for the email tool
[27:29] so let's try this
[27:31] again right now I just thought it was a
[27:33] helpful assistant which it is but it
[27:35] didn't have all of this instructions and
[27:37] also one thing I like to do at the end
[27:38] is um sign off the
[27:43] email from Nate because it knows the
[27:48] sender name is usually just
[27:51] for when it pops up right here to say
[27:53] like it's from Nate but sometimes down
[27:55] here it would say in Brackets like
[27:57] sender name or something so it's nice to
[28:00] sort of specify that so we got that
[28:02] saved in here let's try that
[28:05] again send an email to Phil
[28:09] dumpy asking if he
[28:12] wants to get
[28:14] launch and we just hope that he says
[28:19] yes I've sent an email to Phil dumpy
[28:22] inviting him to launch is there anything
[28:23] else I can assist you with okay perfect
[28:25] inbox launch invitation
[28:28] hey Phil would you like to get lunch
[28:30] sometime best Nate perfect super simple
[28:34] um yeah so that is just a very very
[28:38] basic one it's got one tool we didn't
[28:41] even give it a Windows memory buffer
[28:43] which is just how you can continuously
[28:46] chat it'll it'll keep history of past
[28:49] messages that you've sent and it's going
[28:50] to be able to know to work off those but
[28:53] that's just a very basic one and it's
[28:55] it's really good to get in here and play
[28:57] around with n8n it's going to give you a
[28:58] great idea of like I said the triggers
[29:01] different
[29:01] nodes as you can see there's so many
[29:03] Integrations like if we just go to you
[29:05] know Gmail you've got all these
[29:07] different things and you can build an
[29:09] agent that strictly can do everything
[29:11] for you that you might need to do in
[29:12] Gmail like an inbox management agent so
[29:16] yeah super simple one great one to start
[29:18] off with building I'm going to be making
[29:20] more videos where we'll probably add on
[29:21] different tools to this agent so it'll
[29:23] be a complete personal one where it can
[29:25] do stuff with your calendar do stuff
[29:27] with your Google
[29:28] drive just cool things like that so like
[29:32] I said if you enjoyed this video I'm
[29:34] going to try to tailor stuff towards
[29:36] people that are new to the space I'm
[29:38] trying to learn as much as I can so
[29:39] trying to help as many people learn as
[29:41] much as they can but yeah that's all
[29:43] I've got for today so thanks guys