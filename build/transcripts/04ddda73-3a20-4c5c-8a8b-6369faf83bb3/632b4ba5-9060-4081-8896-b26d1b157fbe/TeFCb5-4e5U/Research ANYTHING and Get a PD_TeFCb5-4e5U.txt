Video Title: Research ANYTHING and Get a PDF Report (free n8n template)
Video ID: TeFCb5-4e5U
URL: https://www.youtube.com/watch?v=TeFCb5-4e5U
View Count: 59,095

[00:00] All right. So, all we have to do is hit
[00:01] test workflow and this form will pop up
[00:02] and we just have to enter a search topic
[00:04] for a deep research report. So, here I'm
[00:06] typing in sugar for breakfast. Just
[00:08] putting in an email to send the report
[00:09] to and we'll hit submit. And now the
[00:11] workflow has started. The first thing
[00:12] we're doing is we're hitting a planning
[00:14] topic agent that has taken our search
[00:15] topic and it's spitting out five
[00:17] different in-depth search topics. And
[00:19] then we're having an agent create an
[00:20] introduction and the different chapters
[00:22] so that we can send them off to the
[00:23] different types of research agents for
[00:25] each chapter to make us a really
[00:26] in-depth analysis. So, as you can see,
[00:28] we're just firing off to this first
[00:30] branch, which is chapter 1. We're doing
[00:31] our research with Tavi on five different
[00:33] topics within that chapter. And now we
[00:35] have an agent writing it all together.
[00:37] So, this process is pretty much the same
[00:38] for each of the five chapters. So, I'll
[00:40] be back when they're finished
[00:47] [Music]
[00:49] up. Okay, so the chapter 5 writer is
[00:52] finishing up right now. As you can see,
[00:54] we're pushing all of this data into
[00:55] Google Sheets so we can pull it all back
[00:56] later. as you'll see up here. Now, we're
[00:58] finalizing all this content. So, we're
[01:00] pulling in all the sources so we can
[01:01] make a source section at the bottom of
[01:03] our report with a numbered list. Then,
[01:05] we're going to be sending those back to
[01:06] the Google sheet. We'll be pulling in
[01:08] all the contents once again so that we
[01:09] can make a table of contents based on
[01:11] the chapters and based on the different
[01:12] subjects within each of the chapters.
[01:14] And then, we're pretty much putting it
[01:16] all together and we're sending it off to
[01:18] create that PDF. So, there you can see
[01:19] the sources just finished up. Now, we
[01:21] have a different assistant that's
[01:22] writing the table of contents for us.
[01:24] And so why you're seeing all these
[01:25] Google Sheets nodes is because we're
[01:26] sending all the data into Google Sheets
[01:28] because at the end you're going to see
[01:29] this is like a 30 to 40page PDF.
[01:31] Finally, we just combined all that
[01:32] content together. We're hitting off the
[01:34] API call to make that PDF and we should
[01:37] be getting an email any second now.
[01:39] Okay, so we're going to hop over to the
[01:40] Gmail and we can see we got a new email
[01:42] deep research report sugar for
[01:44] breakfast. As you can see there's an
[01:45] attachment which is our PDF and we'll
[01:47] click into here and actually we'll just
[01:48] download this real quick. And once we
[01:50] open the downloaded PDF we can see that
[01:51] this is a 40page PDF. So, it's going to
[01:53] start off with a title, the breakfast
[01:55] sugar dilemma, understanding the impact
[01:57] of morning sugar consumption on health
[01:58] and wellness. We have a quick
[02:00] introduction right here talking about
[02:01] the breakfast landscape and how it's
[02:03] evolved. And then it says that this
[02:04] report delves into the physiological
[02:06] impacts of morning sugar consumption,
[02:08] explores hidden sugar sources and common
[02:10] breakfast foods, blah blah blah. And
[02:11] then we have a table of contents. So, as
[02:13] you can see, each chapter has five
[02:15] different sections, so you can quickly
[02:16] skim and see which ones sort of peique
[02:18] your interest. Chapter one is on blood
[02:20] glucose levels and morning energy.
[02:21] Chapter two is on common sources of
[02:23] hidden sugars. Chapter three is on
[02:24] nutritional comparison. And then you
[02:26] have chapter four and five. And as you
[02:28] can see, this is chapter one. And it's
[02:29] going to start to break down morning
[02:31] sugar rush. And what you'll notice is
[02:32] that every section has a source. So if
[02:34] we open up this link, we can see it
[02:36] brings us to an article about the
[02:38] association between sugar at breakfast
[02:39] and energy. As we continue to scroll
[02:42] down into the different sections, you
[02:43] can see the link numbers are changing,
[02:45] representing a unique source. And you
[02:47] can see that it's not just pulling back
[02:48] general articles. It's pulling back
[02:49] research findings and studies and
[02:51] experiments. So, here's one with um an
[02:53] actual experiment. We can open this one
[02:54] up and you can see this source talks
[02:56] about an actual study they did and what
[02:58] they found. Anyways, let's scroll all
[02:59] the way down to the bottom on page 40
[03:01] where we can see we should have a
[03:03] sources section that should be numbered
[03:04] for all the sources that we just looked
[03:06] at. So, as you can see, we have 1
[03:07] through 25. And you can see right here
[03:09] that the last source we have is indeed
[03:11] number five. But all of these are also
[03:13] clickable links. So, that's a quick look
[03:14] at the output of our workflow here. As
[03:17] you can see, 40 pages, super in-depth.
[03:18] It breaks down the table of contents.
[03:20] You can skip around and it has all of
[03:22] the sources linked. Now, comparing that
[03:23] to something like ChatGBT Deep Research
[03:25] or Perplexity Deep Research where you
[03:27] can click on this button right here. As
[03:29] you can see, you have a limited amount
[03:30] per day. So, that's one thing. But this
[03:32] workflow that I just built, you can run
[03:34] it as many times as you want. It's going
[03:35] to cost less than a dollar. So, I'll
[03:36] break down the price when we do another
[03:38] demo. And also, it's significantly
[03:40] faster. So, right here, this took about
[03:42] six minutes. And it's not even optimized
[03:44] to have all of the five chapters running
[03:45] in parallel. If we did that, it would
[03:47] significantly decrease the time that it
[03:49] takes to run this workflow. And here's
[03:50] an example of me using chatbt for sugar
[03:53] for breakfast deep research. And this
[03:55] one took about 15 minutes. So it has 17
[03:58] total sources. It's a pretty in-depth
[03:59] report. And I copy and pasted this into
[04:01] a Google doc so we can look at it real
[04:02] quick. But what you'll notice is that
[04:03] there's just a brief introduction.
[04:05] There's really no table of contents. So
[04:06] you don't really know what you're
[04:07] getting into. But because I have to copy
[04:09] and paste this into a doc, now we can
[04:10] see the different headers which are
[04:12] short-term effects on sugary breakfast,
[04:14] long-term health implications, sugary
[04:16] breakfast versus high protein options,
[04:18] dietary guidelines, and then also age
[04:20] specific considerations like with
[04:22] children and with adults. So, this was
[04:23] definitely in depth and it was a good
[04:25] report, but it was only 13 pages and it
[04:27] wasn't as structured as our workflow.
[04:29] So, now that we've seen what this
[04:30] automation can do, let's hop into niten
[04:32] and break down what's going on. All
[04:34] right, so before we hop into a live
[04:35] breakdown of this workflow, I wanted to
[04:37] tell you guys how you can actually
[04:38] access this and plug it in for free. So
[04:40] all you have to do is join my free
[04:42] school community. The link for that is
[04:43] down in the description. You'll come
[04:44] into here, you'll click on YouTube
[04:46] resources, and you can search for the
[04:47] title of this video or you can just find
[04:49] the post associated with the video.
[04:50] You'll click into that post and then
[04:51] you'll see right here there's going to
[04:52] be the different files that you need.
[04:54] And I'm also going to provide the Google
[04:55] Sheet template that you'll need in order
[04:57] to just plug this in because the Google
[04:58] sheet template is going to be really,
[04:59] really important. Okay, so now that
[05:01] that's out of the way, I'm going to do a
[05:02] highle breakdown of what's going on
[05:04] within each of these different sticky
[05:06] notes and then we're going to test it
[05:07] out. We'll do another different deep
[05:09] research topic and we'll walk through
[05:11] every single node. Okay, so if you ask
[05:13] chat GBT what is deep research? There's
[05:15] six key aspects which are diverse
[05:17] sources, critical analysis, comparative
[05:20] review, datadriven insights, iterative
[05:22] process, and long-term investigation. So
[05:25] what I did in Nadn is I tried to break
[05:27] down this workflow to encompass all of
[05:28] those different elements. So what we're
[05:30] doing in this stage is we're trying to
[05:31] plan the structure of the entire sort of
[05:33] research report. In the demo you saw all
[05:36] I typed in was like sugar for breakfast
[05:38] which is only three words but it was
[05:39] able to spit out a really in-depth
[05:41] report because we have this planning
[05:42] stage. So basically what's going on here
[05:44] is we're taking a topic and we're
[05:46] splitting it out into five different
[05:47] chapters so that we can send it into
[05:49] this next part which are the different
[05:50] research assistants in order to write
[05:52] all the content for each chapter. Now,
[05:54] if you remember, within each chapter,
[05:56] there were basically five sections, and
[05:57] each of those are going to be a
[05:58] different source. So, the logic of all
[06:00] five of these different chapters are
[06:02] basically the same. Like I said, I
[06:03] wanted to visually show you guys how
[06:05] this is working. But if you wanted to
[06:06] build this more optimally, you would
[06:08] probably want to send this off and have
[06:09] each of these chapters executing in
[06:11] parallel. And there are also some other
[06:12] tweaks we can make along the way to make
[06:14] all of this logic a little more dynamic.
[06:16] But for a V1, this is a great start. So,
[06:18] you may have noticed that there's a lot
[06:19] of Google Sheets nodes in this workflow.
[06:21] And the reason for that is because we
[06:23] can't just keep all of our data within n
[06:25] and expect to make a 40-page PDF like
[06:28] you saw in the demo. What we have to do
[06:29] is as we're moving through the process
[06:31] and gathering more and more information,
[06:32] we're storing it in the Google sheet so
[06:34] that later at the end over here when
[06:36] we're finalizing our content, we can
[06:37] pull all of it back, combine it all
[06:39] together, and then send that stringified
[06:42] text through an API call to make a PDF.
[06:45] So, like I said, we're going to do a
[06:46] demo and I'll walk through every step,
[06:48] but basically what's going on over here
[06:50] is we're pulling in all the sources as a
[06:52] list of 25 sources, um, sending them
[06:54] back in, and then we're pulling all the
[06:56] content back to make a table of contents
[06:58] because we can only make a table of
[06:59] contents once we actually understand
[07:01] what sections the report has. And then
[07:03] down here, we're just using an HTML to
[07:04] PDF API, downloading it, and sending it
[07:07] off in Gmail. Okay, so we're about to do
[07:09] another live run and walk through every
[07:11] single node. But before that, I wanted
[07:13] to talk about the price. So, all of the
[07:15] different chat models here, I'm using
[07:17] Open Router, as you can see, and they're
[07:19] all using Claude 3.5 Sonnet. So far,
[07:22] throughout my testing, each run has been
[07:23] a little bit less than a dollar, but
[07:25] we're going to do a live run, and you'll
[07:26] be able to see that. So, in my open
[07:27] router right now, I have
[07:29] $1.77, and we'll come back to that after
[07:31] this first run. Now, as far as the API
[07:33] calls that we're making for all the
[07:35] research, we're using Tavi. So, as you
[07:36] can see, chapter 1, 2, 3, and four,
[07:38] we're all using Tavi. And the great
[07:40] thing about Tavi is that it's a pay as
[07:41] you go model, but also on the starter
[07:43] plan, which is free, you can get a,000
[07:45] credits per month. And then the other
[07:47] API call is api template.io, which is
[07:49] basically just turning our HTML content
[07:51] into a PDF. And if we click into there,
[07:53] we can see that you're going to get 50
[07:55] free credits. It may be total or per
[07:58] month, but 50 for free. So, you'll be
[08:00] able to test out. And all my testing so
[08:01] far, as you can see, I've only really
[08:03] done eight new API calls. Okay. So, now
[08:05] that we have the pricing stuff out of
[08:07] the way, let's zoom in over here. We're
[08:08] going to test this workflow. We'll do a
[08:10] new run and then we'll break down what's
[08:12] going on within each step here. So when
[08:14] I hit test workflow, the form submission
[08:15] pops up. I'm going to do the importance
[08:18] of sleep for young adults. And then
[08:22] we're going to send that off and watch
[08:23] the workflow start. Okay. So what's
[08:24] going on in this first agent? And I'm
[08:26] only calling them agents because they're
[08:27] an AI agent node. They're not actually
[08:29] doing tool calling or anything. So it's
[08:31] not an agentic workflow, but this is
[08:32] technically an AI agent. Anyways, what's
[08:35] going on here is we're feeding it in a
[08:37] search topic. So in this case, it is
[08:38] exactly what we just typed in, which is
[08:40] the importance of sleep for young
[08:41] adults. And as you can see, it's already
[08:43] output five different topics. So this is
[08:45] basically just helping us structure the
[08:47] entire research report. So if we open up
[08:49] the system prompt here, we can see that
[08:51] its instructions were to break down the
[08:52] topic, identify five distinct yet
[08:54] interconnected subtopics that when
[08:56] researched provide a well-rounded
[08:58] understanding of the main search topic.
[09:00] We wanted to ensure depth and relevance
[09:02] and also avoid redundancy. I don't want
[09:04] to break down the whole system prompt
[09:06] entirely, but if you download the
[09:08] template, the system prompts will be in
[09:09] there for you. And then of course, we
[09:10] had to require specific output format so
[09:12] that it could output the five different
[09:14] search topics in their own object. And
[09:15] we did this by attaching a structured
[09:17] output parser with five different
[09:19] topics. And then we have three different
[09:21] branches that we're merging back
[09:22] together. When you use merge nodes in n,
[09:24] it's going to wait for all of the inputs
[09:26] before it moves on. And also, it's going
[09:28] to execute the top one first. So it went
[09:30] up here and then it finished and then it
[09:31] went here and finished and then it
[09:33] passed down here and then the next intro
[09:35] agent started. So what we did up here
[09:37] first was we just set topics. So I just
[09:39] wanted to set an array and this is
[09:41] hardcoded. We're outputting topic one,
[09:43] topic two, topic three, topic four,
[09:44] topic five. And then after that we
[09:46] basically just wanted to split them out
[09:47] so that they came through as individual
[09:49] items so that we could merge them with
[09:51] the split out items that are the actual
[09:53] topic names. So that when we merge them
[09:55] together we basically have topic one is
[09:57] this, topic two is this. And the only
[09:59] reason I'm doing this is to get that
[10:00] association so that we can branch each
[10:02] one off to the different chapter
[10:03] section. But before we get over there,
[10:05] then the workflow comes down here and it
[10:07] executes the intro agent. So what we're
[10:09] doing here is we are giving this agent
[10:11] the search topic, which as you can see
[10:13] was the importance of sleep for young
[10:14] adults. And then we're giving it the
[10:16] five topics that the previous agent
[10:18] output. So now it has the total search
[10:20] topic as well as the five different
[10:21] chapters. So it's going to use all this
[10:23] information to create a title of the
[10:24] report and introduction section for the
[10:26] report. And then it's also going to
[10:28] output everything in HTML format. So if
[10:30] we click down here, we can see that we
[10:32] have the title, the introduction, and
[10:33] all five chapters already formatted as
[10:35] HTML. We'll just do a real quick skim
[10:37] through of the system prompt. We
[10:39] basically told it you are report title
[10:41] and introduction generator AI. Your task
[10:43] is to create a compelling title, a
[10:44] concise introduction, and five clear
[10:46] chapter headings for research report
[10:48] based on a given main search topic and
[10:50] five subtopics. Once again, we connected
[10:52] a structured output parser so it knew
[10:54] how to output its information. As well
[10:56] as we gave it some example outputs so we
[10:58] could show it how we want the HTML
[11:00] formatting to be consistent. So I know I
[11:02] may be going through this stuff a little
[11:04] bit fast and if you're really serious
[11:05] about understanding, you know, what's
[11:06] going on at every step and how you can
[11:08] build these types of systems on your
[11:09] own, then I would definitely recommend
[11:10] checking out my paid community. You can
[11:12] 100% learn how to build these types of
[11:14] systems by watching free YouTube
[11:15] tutorials. But if you're looking for a
[11:17] more hands-on approach and you're
[11:18] looking for a community of members who
[11:19] are trying to do the exact same thing as
[11:21] you are, then joining a community is
[11:23] definitely going to speed up that
[11:24] process. We've got a great classroom
[11:26] section with different deep dive topics
[11:27] like building AI agents, vector
[11:29] databases, APIs, and HTTP requests,
[11:31] step-by-step builds, and also we have
[11:33] five live calls per week that are always
[11:35] recorded so you can make sure you're not
[11:36] getting stuck and also meeting other
[11:38] people in the space. So, I'd love to see
[11:39] you guys in these calls, but let's get
[11:41] back to the video. And then what we're
[11:42] doing is we're creating a new row in
[11:44] that Google sheet template that I showed
[11:46] you guys. And this is basically sending
[11:47] over the search topic, the title, the
[11:49] introduction, and then the first five
[11:50] chapters. And if we switch into the
[11:52] Google sheet, you can see that we have
[11:54] the importance of sleep. We have the
[11:55] title, the intro, and all first five
[11:57] chapters already formatted in HTML. And
[11:59] once again, this is so crucial storing
[12:01] our chunks of information in this Google
[12:03] sheet. So we can pull it back later
[12:05] because if you tried to just run one
[12:06] workflow and have an agent output a
[12:08] 40page PDF, it wouldn't work. So now you
[12:10] can see the workflow is already ahead of
[12:12] us, but we have sources for each topic,
[12:14] sections for each topic, and the
[12:16] content, and it's already moving on.
[12:17] Right now it's doing chapter 4, but then
[12:19] we're able to just pull this back as we
[12:21] need it to create that PDF. So now that
[12:23] we've done all this structuring and
[12:24] planning, we have the five topics that
[12:26] we can send off to the research portion.
[12:29] So quick disclaimer, all five of these
[12:30] chapter sections are basically doing the
[12:32] same thing. Copy and pasted the logic
[12:34] all the way down, except for one small
[12:35] tweak, which I'll get into. So, I'm
[12:37] really only going to break down the
[12:38] first chapter because they're all the
[12:40] same. Cool. So, we start off with doing
[12:42] our Tavi request. So, I'm going to click
[12:44] into Tavi and I will show you guys what
[12:46] we're doing here. So, we're making a
[12:47] post request to Tavly search engine. We
[12:49] have our credential predefined as a
[12:51] header off. And really, what's going on
[12:53] here is we're sending over a body
[12:54] request. And really, we're just sending
[12:56] over one request, which is, as you can
[12:58] see, the neurological effects of sleep
[12:59] deprivation on young adult brain
[13:01] development and cognitive function. So,
[13:03] this is just one of the chapters that
[13:04] the very first agent output. And this is
[13:07] chapter one of our research report. You
[13:09] can see here we defined a few things. So
[13:10] the topic is general. The search depth
[13:12] is advanced. So instead of just using
[13:14] one credit on a general search, we're
[13:16] doing advanced and it's going to use two
[13:18] credits. And then really the important
[13:19] thing here is that we're getting five
[13:20] results every time. So that we can get a
[13:23] total of 25 sources because we're doing
[13:25] five different chapters. So then you can
[13:27] see in our results, we're getting one
[13:28] item, but there are five total URLs that
[13:31] it brings back as well as some general
[13:32] content. So, as you can see, URL number
[13:34] one, number two, number three, number
[13:37] four, and number five. So, from there,
[13:39] what we want to do is we wanted to split
[13:40] out each of these items. So, we're
[13:42] splitting out the results so that we
[13:43] have five individual items, which is the
[13:45] URL, the title, and the content. Now
[13:48] that we have that stuff split out, we're
[13:49] using a quick code node to assign
[13:50] numbers to those sources because that's
[13:52] going to be important to make sure that
[13:54] our agents don't overlap source
[13:56] information and all this kind of stuff
[13:57] so that at the end, our source section
[13:59] is 1 through 25 and it makes sense. Once
[14:02] again, don't worry about the code or any
[14:03] of the system prompts. You can download
[14:04] the template for free and it will all be
[14:06] in here. So then we have another merge
[14:08] node. What's going on here is we are
[14:10] basically aggregating those five
[14:12] individual items into one list. So as
[14:14] you can see over here, we have five
[14:15] items which were each of the sources.
[14:17] And we wanted to just basically get them
[14:18] in an array so that we could put it into
[14:20] one cell in Google Sheets much easier.
[14:22] And then once that finishes up, it's
[14:23] going to come down here to the writer
[14:25] agent which is actually going to be
[14:26] creating all the content for us. So
[14:28] looking at the writer agent, it's going
[14:30] to be writing five different chunks of
[14:32] HTML. As you can see, five items are
[14:34] coming in and five items are coming out.
[14:36] So let's open up the user message so we
[14:38] see what it's actually getting each
[14:39] time. The first thing that it's going to
[14:41] get is the title of the article that
[14:43] it's getting. So this first one was how
[14:45] lack of sleep impacts cognitive
[14:46] performance and focus. Then we're
[14:48] getting the actual research. So the
[14:50] content that the Tavly tool pulled back.
[14:52] In this case, it didn't pull back very
[14:53] much, but typically it will pull back
[14:55] more. And we can see up here in the
[14:57] result we can make sure that it is
[14:58] getting all five items. So here was
[15:00] number one. Here was the second source.
[15:02] Here was the third source, the fourth
[15:03] source, and the fifth source. And as you
[15:05] can see, the number is changing each
[15:07] time on the source section so that it
[15:09] can put those inline citations and have
[15:11] clickable links. Anyways, like I said,
[15:13] we're giving it the source. And then
[15:14] finally, we're giving it a style guide
[15:16] example from something that we've
[15:18] already created so that the whole
[15:19] research report is consistently styled
[15:21] in HTML. And all we did was we pulled in
[15:24] the introduction section that had been
[15:26] generated earlier in the workflow
[15:28] because whatever HTML that style is, now
[15:31] this agent will be writing in that
[15:32] similar style. So now that this writer
[15:34] has looked at all five different sources
[15:36] and wrote content for each source, we're
[15:38] going to aggregate all of that back
[15:39] together and merge it together once
[15:41] again. So now we have a list of five
[15:43] sources as well as a list of five um
[15:46] articles. And then right here, we're
[15:48] using an extract from HTML node in order
[15:51] to pull back the titles for each of the
[15:53] contents because we want to have all the
[15:55] titles put back into the Google sheet so
[15:57] that when we're making the table of
[15:58] contents later, it makes sense. You
[16:00] know, chapter one, you have these five
[16:01] titles. Chapter two, you have these five
[16:03] titles. We're doing a quick code node to
[16:05] turn these five items into an array of
[16:07] just one item so that we can pass
[16:09] everything into the Google sheet. And as
[16:11] you can see, what we're doing in here is
[16:12] we're just updating a row. So earlier
[16:14] when we have that first agent that's
[16:15] creating the introduction and the title
[16:17] and the different chapters that's
[16:19] creating a new sheet and it's creating
[16:20] the new sheet using the search topic
[16:22] that was entered in the form. Now when
[16:24] we're updating a row all we have to do
[16:26] is we have to match on the search topic.
[16:28] So for search topic basically I went to
[16:30] schema. I went all the way down to the
[16:32] form submission and I pulled in search
[16:34] topic because that's the row that we're
[16:35] going to update. And then the only
[16:36] columns we want to update here are the
[16:38] three columns associated with this first
[16:40] topic or chapter. So for chapter one
[16:42] sources, we're pulling in the numbered
[16:43] list that we made earlier. And all we
[16:45] did here was we did a quick join with a
[16:46] new line so that it comes through in a
[16:48] nice format. If we didn't have this
[16:50] join, as you could see, they would
[16:52] basically just be it would basically
[16:54] just be an array and it would come
[16:55] through all messy. So what we can do is
[16:56] type in join and then in the quotation
[16:59] marks or sorry in the parenthesis if I
[17:00] just put a new line now, it comes
[17:02] through all pretty. We did pretty much
[17:03] the same exact thing with the sections
[17:05] and the content with the join. And then
[17:07] for the sections, we're pulling in the
[17:08] different titles that we had just
[17:09] extracted. We're also doing a join once
[17:11] again to clean everything up. And then
[17:12] same thing for the content. We went down
[17:13] here to the merge node, pulled in our
[17:15] array of different content, and then we
[17:17] did two new lines as the join so that in
[17:20] between each section of HTML, we're just
[17:22] going to have a nice break. And also
[17:25] with Nit's new update, if you change
[17:26] something in a node that's already been
[17:28] connected or ran, it'll go this like
[17:30] orange thing with a little triangle. The
[17:32] node's fine. It just means that you
[17:33] changed something. And real quick, just
[17:35] wanted to go into the sheet so you can
[17:36] see how it comes back in here. So, as
[17:38] you can see, this run's already finished
[17:39] up, but we're putting everything in
[17:41] here. So, the topic one sources 1
[17:43] through five, topic one sections, and
[17:45] then topic one content, which has all of
[17:47] the different articles. And then you can
[17:49] see the same exact thing is happening
[17:50] for the next chapters. So, 6 through 10,
[17:52] 11- 15, 16- 20, and then finally 21
[17:56] through 25. So, like I said, chapter 2,
[17:58] 3, 4, and 5, the logic is the exact
[18:01] same. All the writers are using the
[18:02] same. But let me talk about real quick
[18:04] the limitations of this type of system.
[18:06] So the first one obviously is that
[18:08] because we're merging everything
[18:09] together, they're not running in
[18:10] parallel. So chapter 1 has to finish up
[18:12] all the way before chapter 2 can even
[18:14] start. So it would be a lot more
[18:15] efficient if we could send off our five
[18:17] different chapters to different
[18:18] workflows that would all be running at
[18:20] the exact same time. And obviously that
[18:21] means that we would get our final PDF in
[18:23] about 20% of the time that it took to
[18:25] get this one. So that's one. The second
[18:28] one is the way that we're making our
[18:30] numbered list for our sources. So, as
[18:32] you can see, this is the code node that
[18:33] is basically saying, "Okay, you'll have
[18:35] these five items, and you just have to
[18:36] assign a number to each of them, and
[18:38] you're going to count up each time."
[18:40] Now, because we've basically hardcoded
[18:41] in here that we want five sources for
[18:43] each chapter, all I did was in the code
[18:45] node, I said, "You're going to do the
[18:46] exact same thing, but in this one,
[18:48] you're going to start at six and then
[18:49] you're going to count up. And in this
[18:51] one, you're going to start at 11, and
[18:52] then you're going to count up." So, if
[18:53] you wanted to make this system a little
[18:55] more dynamic with how many sources you
[18:56] could have per chapter or total, you'd
[18:59] have to work in different type of logic
[19:00] here. And then finally, of course, is
[19:02] just the aspect of if you made changes
[19:03] to one flow or one branch, you'd have to
[19:06] manually go make those updates to each
[19:07] of the other branches. So, let's say we
[19:09] adjusted the system prompt a little bit
[19:11] for the writer. We'd have to go do that
[19:12] in all the other writers. Or we wanted
[19:14] to switch out a chat model, we'd have to
[19:15] do that in all of the different writers.
[19:17] So, like I said, those are the
[19:18] limitations. Um, it definitely can be
[19:20] optimized from here, but I think that
[19:22] visually understanding how the merge
[19:24] works and sort of the the logic that I
[19:26] had in my head of making this workflow,
[19:28] this is a great V1. Okay. So, anyways,
[19:30] once all five chapters have been
[19:32] researched and populated into the Google
[19:34] sheet, we're going to come up here to
[19:35] the top right where we are finalizing
[19:37] our content and then we're generating a
[19:39] PDF. So, the first thing I'm doing is
[19:41] I'm limiting it to one item. As you can
[19:43] see, we have five coming in and one
[19:44] coming out. And the only reason you want
[19:46] to do that is so you're not making five
[19:47] requests again to Google Sheets or to an
[19:49] agent. And this is just because we're
[19:51] merging five different inputs over here,
[19:52] which was each chapter. Cool. So, the
[19:54] first thing I wanted to do was I wanted
[19:56] to tackle, okay, now that we have all of
[19:58] our different sources. How do we get
[19:59] them into one cell to just make a source
[20:02] section as well as format it in HTML?
[20:05] So, we're hitting the Google sheet and
[20:06] we're just pulling in the one and we're
[20:08] matching it based on the search topic
[20:10] that was submitted in the beginning of
[20:11] the workflow. So, we're searching for
[20:13] the importance of sleep for young
[20:14] adults. We're pulling in that entire
[20:16] row. As you can see on this right hand
[20:17] side, we have the entire row. And now,
[20:20] all we really want is we want to grab
[20:21] all of the different sources. So topic
[20:23] one sources, topic two sources, topic
[20:25] three sources and so on. So once we have
[20:28] that information, I fed it into this
[20:29] next agent where as you can see we gave
[20:31] it the list of sources. It's 1 through
[20:33] 25. And basically we just told it that
[20:35] you need to make this into HTML
[20:37] formatting. So here's the quick system
[20:38] prompt. If you want to take a look at
[20:39] it, obviously we wanted them to be
[20:41] clickable links. We gave it a quick
[20:42] example. Once again, if you download the
[20:44] template, this prompt will be in there
[20:46] for you. So now that we have the sources
[20:48] section output in HTML, we're basically
[20:50] just feeding it back in. So once again,
[20:52] we're matching on the search topic from
[20:54] the beginning. And then we're just
[20:55] updating the column called sources with
[20:57] the output from that agent. So back in
[20:58] our Google sheet, you can see here is
[21:00] the sources section, which is an HTML
[21:01] formatted block of sources. And then
[21:04] really the last thing to do is to create
[21:06] the table of contents. And also
[21:07] something I thought about is this would
[21:08] be a great time to create a summary as
[21:10] well if you were able to feed an agent
[21:12] most of the content that you have and it
[21:14] could kind of highlight some key
[21:16] findings or like key takeaways from the
[21:18] whole report. Didn't want to mess with
[21:19] that here, but we are making a table of
[21:22] contents based on the different chapters
[21:23] that have come through already. So,
[21:25] we're getting all the content. We're
[21:26] just pulling in the same Google sheet.
[21:28] And then we're going to be feeding it
[21:29] into this next agent where, as you can
[21:31] see, we gave it chapter 1 and the
[21:33] sections within chapter 1, chapter 2,
[21:35] and the sections within chapter 2. And
[21:37] then the same for the next three
[21:38] chapters, as well as I gave it the style
[21:40] guide from the very beginning when it
[21:42] made the introduction in HTML. So that
[21:44] every time, like I said, we want the
[21:45] whole report to be very consistent in
[21:47] the way that it styles its, you know,
[21:49] its bold or its font color or its
[21:51] background color. And then for the
[21:53] system prompt of the table of contents
[21:55] agent, pretty similar thing. We told it
[21:57] what to do. We told it how to style. And
[21:59] we gave it an example output. And then
[22:01] from there, similar to the way we did
[22:02] with our sources, we're just feeding
[22:04] that into a Google sheet. So we're
[22:06] matching once again on the search topic
[22:08] from the beginning. And we are filling
[22:09] out the column called TOC for table of
[22:12] contents with the output of the agent.
[22:15] And as you can see in our Google sheet,
[22:16] we now have the table of contents is a
[22:19] huge block where we're having, you know,
[22:21] chapter 1, here are the five subjects,
[22:23] chapter 2, here are the five topics, and
[22:25] all of the other ones. So, at this
[22:27] point, we have everything we need to
[22:29] create that PDF. And I'm curious to see
[22:30] how long this one actually is. But then
[22:33] what we're doing is we're once again
[22:34] pulling in all of the content. So, now
[22:36] we have everything we need. And then I
[22:38] structured it with a code node. I used
[22:41] cloud 3.7 to help me write this code.
[22:43] But as you can see, what we're doing is
[22:44] we're basically just pulling in the
[22:46] stuff from our Google sheet over here on
[22:47] the left. And a really good thing you
[22:49] can do with writing code nodes with
[22:51] Claude is you have the JSON right here
[22:53] that's coming in. You can just copy this
[22:55] JSON and then feed it to Claude and say,
[22:56] "Hey, here's what I need help with." So
[22:58] that's what I always do. So anyways, I
[23:00] wanted this text to be combined in a
[23:01] very specific order so that we could
[23:03] just pass it into an API call. So, we're
[23:05] pulling in the title, the introduction,
[23:07] and then the table of contents. So, that
[23:09] makes sense. And then we're pulling in
[23:10] the heading for chapter 1, as well as
[23:12] all of the content for chapter 1. And
[23:13] then the same for chapter 2, and all the
[23:15] content for chapter 2. And we do that
[23:17] for all of the other chapters. And then
[23:18] finally, we end it off by pulling in the
[23:20] sources section. So, basically what that
[23:22] looks like, if we scroll all the way to
[23:24] the right over here, is we have a
[23:25] section called combined content. It's
[23:27] all formatted in HTML, as you can see.
[23:29] So, this combined content is basically
[23:31] everything that's going into the PDF. So
[23:33] now we have everything combined and we
[23:35] can generate that PDF. So we're using um
[23:38] API template.io and we're doing a PDF
[23:41] from HTML endpoint. You you can get in
[23:44] there and you can create templates and
[23:45] then fill in certain parameters, but in
[23:47] this case it was so much easier to just
[23:48] feed a bunch of HTML and then get a PDF
[23:51] back. So we're hitting that endpoint.
[23:53] What we're doing here is we're setting
[23:54] the file name. So I put in the search
[23:56] topic and then at the end I just had to
[23:58] put PDF as you can see. So, this is the
[24:00] file name that's coming through in our
[24:02] Gmail. And then we sent over a body
[24:04] request. So, basically in here, we can
[24:06] set up different things like the actual
[24:08] text, different sizes, um the custom
[24:10] header and the custom footer. So, I
[24:12] didn't really touch much. The only thing
[24:13] I did was I changed the size of the
[24:15] header and footer cuz it came through
[24:17] way too big. And then we just basically
[24:19] put in the body of our JSON. Now, one
[24:22] thing we did have to do was we had to do
[24:24] these different functions to replace um
[24:26] sort of like the new lines and the
[24:27] quotes because, as you know, we're
[24:29] wrapping up this string in quotation
[24:31] marks. And if we have any quotation
[24:33] marks within the actual string we're
[24:34] trying to wrap, it's going to say, you
[24:36] know, invalid JSON. And now when we're
[24:38] sending over a body, it's going to clean
[24:40] up all that stuff automatically. So,
[24:42] after we make that request, we get a
[24:43] download URL for our PDF. We can see
[24:45] this one was 42 pages. So, that'll be
[24:47] interesting to look at. But anyways,
[24:49] then we're just doing a standard git
[24:50] request using that URL that came back
[24:52] from this previous node. We didn't have
[24:55] to do any credentials here because it's
[24:57] just basically a public link. And now
[24:59] you can see we have our PDF. So, looks
[25:02] great. We'll dive into that once we
[25:03] actually download it in Gmail. But now
[25:05] we have this coming through as binary
[25:06] data as you can see. And because we have
[25:08] the binary right here, it's really easy
[25:09] for us to attach it into a Gmail node.
[25:12] So, I have my Gmail node. All I had to
[25:14] do at the bottom was click add
[25:15] attachment. And then we're pulling in
[25:16] the field name called data. So right
[25:18] here, how it says data, that is the
[25:20] binary field that contains our PDF. And
[25:23] then we're just throwing that in there.
[25:24] So then the only other thing going on
[25:26] here is who do we send this email to?
[25:28] Obviously, we're pulling that in from
[25:29] the form submission of the person that
[25:32] um originally filled out this form. So
[25:34] if I scroll all the way down, and
[25:35] actually I'll get rid of this so you
[25:36] guys can see something. Um we want to
[25:39] send this to whoever filled in this
[25:40] form. So if I drag an email, what it's
[25:42] going to do is it's going to say can't
[25:43] determine which item to use. And that's
[25:45] because throughout the flow, we've had
[25:47] things like five items coming through
[25:48] and then we're limiting it and then
[25:50] we're pulling in. So basically, there's
[25:52] five instances of this um email. And so
[25:55] because we know that the email is always
[25:57] the same no matter which item it was, we
[25:59] can just double click on item and we can
[26:00] replace it with first. Hit enter. And
[26:03] now it's going to be able to pull in the
[26:04] right email that we need. So if you're
[26:05] ever getting that error message, you
[26:07] know, can't determine which item to use,
[26:09] you can try using first. But that's only
[26:11] if all five of your items or all x many
[26:14] of your items are the same. Otherwise,
[26:16] you're probably going to want to loop
[26:17] through. We're filling out the subject
[26:19] called deep research report. And then
[26:21] we're pulling in the search topic. And
[26:22] then finally, just a real quick body
[26:24] that says your deep research report on
[26:26] blank is complete. You can find it
[26:28] attached below. So, let's hop into email
[26:30] and take a look at that report. Okay, so
[26:32] here is the one that came through. The
[26:34] deep research report on the importance
[26:35] of sleep for young adults. We can find
[26:37] our attachment right here. So, I'm going
[26:39] to download that. We'll open it up and
[26:41] take a look. So we have sleep and
[26:42] success. Understanding the critical role
[26:44] of sleep in young adult development and
[26:46] performance. We have a quick
[26:47] introduction. In an era where
[26:49] productivity and constant connectivity
[26:50] are highly valued, young adults
[26:52] increasingly find themselves sacrificing
[26:54] sleep to meet the demands of their
[26:55] academic, professional, and social
[26:57] lives. This comprehensive report
[26:59] examines the multifaceted role of sleep
[27:01] and young adult life. From its
[27:02] fundamental impact on neurological
[27:04] development to its influence on mental
[27:06] health, academic performance, and
[27:08] overall well-being. So now we can see
[27:10] our table of contents of course our
[27:11] different chapters and our different
[27:12] sections within each chapter. So we have
[27:14] the neurological effects, we have sleep
[27:16] patterns and mental health. We have
[27:17] impact on modern technology and social
[27:19] media. That one sounds interesting. And
[27:20] then as always you can scroll all the
[27:22] way down to the bottom if you want to
[27:23] just look at the sources section which
[27:24] should have 25 that we could click on
[27:26] the links. And just a reminder that all
[27:28] of these numbers directly represent
[27:30] these numbers that we have linked up
[27:32] here. And also don't worry guys did not
[27:34] forget about the price. So open router
[27:35] we were at 1.77. If we hit refresh 1.2
[27:38] 277. So that one costed only050. So it's
[27:42] really not too bad considering we're
[27:44] using Claude 3.5. The writing is coming
[27:46] through really nice. You could even make
[27:47] it cheaper if you use a different model.
[27:49] I just really like the way that Claude
[27:50] is able to write stuff and we're getting
[27:52] unlimited executions and it's going to
[27:54] be faster and it's not even optimized
[27:56] yet. All right, so that's going to do it
[27:58] for this one. Like I mentioned in the
[27:59] video, this is definitely not the most
[28:01] optimal system. Just wanted to give a a
[28:03] quick V1. If you're interested in
[28:05] talking about, you know, how to optimize
[28:07] this, how to make it a little bit
[28:08] quicker, how to make the research even
[28:10] more in-depth, then definitely check out
[28:11] the paid community. That's a lot of the
[28:13] stuff that we like to talk about in
[28:14] there. But anyways, appreciate you guys
[28:15] making it to the end of this one. As
[28:17] always, if you learned something new or
[28:18] if you enjoyed this video, please give
[28:20] it a like. Definitely helps me out a
[28:21] ton. Really appreciate all the support
[28:23] lately. Can't thank you guys enough. Um,
[28:25] it's it's so fun to make this type of
[28:26] content for you and I'm glad that, you
[28:28] know, it's helping. So, thanks once
[28:29] again, everyone, and I will see you in
[28:31] the next video.