Video Title: AI Personal Assistant 2.0 | This Agent Calls Other Agents (No Code) in n8n
Video ID: 9G-5SiShBKM
URL: https://www.youtube.com/watch?v=9G-5SiShBKM
View Count: 68,201

[00:00] so I said can you schedule a meeting for
[00:01] tomorrow with Michael Scott at noon and
[00:03] then can you email him to confirm if
[00:04] that works so we're going to fire that
[00:06] off we'll see it take place real quick
[00:08] it just got Michael Scott's email
[00:09] information from the contact database
[00:11] now it's going to go back to the agent
[00:12] and then the agent is going to figure
[00:13] out which agent to send it to as you can
[00:15] see it's hitting the calendar agent as
[00:17] well as the email agent looks like the
[00:19] email just got sent looks like the
[00:20] calendar event just got made and now
[00:22] it's going to respond to us the meeting
[00:23] with Michael Scott has been successfully
[00:25] scheduled for tomorrow at noon
[00:26] additionally an email has been sent to
[00:28] him to confirm if that time works you
[00:30] can view the meeting details here as you
[00:32] can see here's that meeting confirmation
[00:34] hi Michael I hope this message finds you
[00:35] well I wanted to schedule a meeting with
[00:37] you tomorrow at noon please let me know
[00:38] if this works for you looking forward to
[00:40] your confirmation best regards Nate and
[00:42] then hopping over into calendar we can
[00:43] see tomorrow at 12: to 1:00 p.m we have
[00:46] a meeting with Michael Scott and if we
[00:48] click in we can see that he was emailed
[00:50] as well for the um meeting a few weeks
[00:53] ago I uploaded this video where I
[00:55] showcased this personal assistant AI
[00:56] agent that I made within NN and you
[00:59] would be able to talk to it and it would
[01:00] take action on your behalf within Gmail
[01:03] calendar Google Sheets Etc so today I
[01:06] wanted to introduce you guys to personal
[01:08] assistant AI agent 2.0 so I've come back
[01:11] and I've made this agent a lot smarter a
[01:12] lot faster and more scalable and here's
[01:14] how switching back over to the original
[01:17] personal assistant we gave it access to
[01:19] the following six tools two in database
[01:22] two in email and two in calendar now
[01:24] switching over to the new version
[01:26] instead of giving the agent access to
[01:28] tools we gave this agent access to four
[01:30] different agents it has email agent
[01:32] which has actions within email calendar
[01:34] agent which has actions within calendar
[01:36] and the same thing for a research agent
[01:38] and a projects agent this is a lot more
[01:41] powerful and a lot more scalable because
[01:43] once the agent gets the incoming message
[01:44] from our telegram trigger rather than it
[01:46] figuring out which tool it needs to go
[01:48] to and passing a ton of information
[01:49] between each step it's just going to be
[01:51] figuring out okay if I need to do email
[01:53] I'm just going to send it to the email
[01:54] agent and the agent's going to take care
[01:56] of it same thing with the other agents
[01:57] it's super powerful and super scalable
[01:59] because the prompting is a lot less
[02:01] intense and we can start to slowly add
[02:03] more agents and more agents for example
[02:05] if I was to text this personal assistant
[02:07] and say hey can you email Nate and
[02:09] remind him about our meeting at 3:00 it
[02:12] would get this message and then it would
[02:14] think okay I need to email someone so
[02:16] first I'm going to get that information
[02:18] from the contact database and then all I
[02:20] have to do is send this information to
[02:21] the email agent because the email agent
[02:23] knows how to take care of this so I hope
[02:25] you guys already see how powerful that
[02:27] this type of AI agent framework is going
[02:28] to be um we're going to get into
[02:30] examples we're going to test out every
[02:32] agent every tool that this personal
[02:33] assistant has access to but before that
[02:35] I just wanted to quickly set a goal um
[02:37] I'd love to make a how-to sort of
[02:39] step-by-step tutorial on this sort of
[02:40] build and I would love to do that if we
[02:42] can hit 1,000 likes on this video I
[02:44] think that's a good goal to set and it
[02:46] would be a new record high for me so
[02:48] let's see if we can get there but with
[02:49] all that being said let's hop into a
[02:51] first live example where we'll be using
[02:53] the calendar agent so real quick I'll
[02:55] open up the calendar agent workflow as
[02:57] you can see this agent is being called
[02:58] by the larger agent so the trigger is
[03:00] when called by another workflow this
[03:02] agent all it has to do is understand the
[03:05] incoming query and then figure out which
[03:06] of the three tools it needs to use it
[03:08] can get events it can create events or
[03:10] it can create an event with an attendee
[03:12] and then all it's going to do is respond
[03:14] to um the agent with the success message
[03:16] or it's going to tell it that there was
[03:18] an error and tell the main agent to try
[03:19] again all right so we're going to hit
[03:21] test workflow on this main agent so that
[03:23] the telegram trigger is listening for a
[03:25] telegram message I'm going to pull up
[03:27] telegram paste in this message real
[03:29] quick that says you create a calendar
[03:30] event with Michael Scott for tomorrow at
[03:32] 600 p.m. for dinner we'll fire this off
[03:35] we will see it taking action it looks
[03:36] it's looking in the contact database to
[03:38] get that email now it's hitting the
[03:39] calendar agent and it should be
[03:42] finishing up anytime now so we got the
[03:44] message the calendar event title dinner
[03:46] with Michael Scott has been successfully
[03:47] scheduled for tomorrow at 6 p.m. and an
[03:49] invitation has been sent to Michael
[03:50] Scott so let's check our calendar as you
[03:53] can see right here tomorrow 600 p.m. we
[03:55] have dinner with Michael Scott and if we
[03:57] click into here we can see that he and
[03:59] fact was invited Michael Scott was one
[04:01] of my emails so this is the email that
[04:03] it sent off to so that's the proof that
[04:06] this agent is working let's go back into
[04:08] the agent click on the execution and
[04:09] make sure that it actually did do
[04:10] exactly what we said so this is the most
[04:12] recent execution of the calendar agent
[04:15] the query that it got in the beginning
[04:16] was to create an event titled dinner
[04:18] with Michael Scott for tomorrow at 6
[04:19] p.m. invite Michael Scott and then it
[04:21] searched our contacts database in order
[04:23] to pull that email which I filled in as
[04:25] up at digital gmail.com so then once the
[04:27] agent saw that it knew that it had to
[04:29] create an event EV with an attendee so
[04:30] let's click into this node see what's
[04:32] going on and before I hop into this
[04:34] stuff I want to explain why I decided to
[04:36] come in here and update my personal
[04:38] assistant I saw a video from AI Workshop
[04:41] subar hey if you're seeing this keep up
[04:43] the great work but he showcased these
[04:46] new tools that you can give agents that
[04:48] are much much stronger than they used to
[04:49] be so there's this this Javas JavaScript
[04:52] function which is dollar sign from AI
[04:55] where you can tell this node what to
[04:58] fill in for each of these parameters so
[05:00] previously you would kind of have to map
[05:02] them out based on the input and you
[05:04] would use some sort of like open AI node
[05:06] maybe to figure out based on a query
[05:08] what's the start time what's the end
[05:10] time who's the attendee and then the
[05:12] summary of the event but now you can
[05:14] have that sort of baked into this note
[05:16] so from AI you're going to label the
[05:18] what it's pulling so in this case it's
[05:19] going to search that query and look for
[05:21] a start time and then I gave a brief
[05:22] description of what that start time is
[05:24] I'll explain this in a in a sec in a bit
[05:26] more detail not in this editor so we can
[05:28] understand better but basically it's
[05:30] just a way to bake in the AI is going to
[05:33] look at the query and interpret start
[05:34] time end time attendees and summary so
[05:36] it's a lot lot smarter than it used to
[05:38] be so as you can see it filled in the
[05:39] start times automatically it filled in
[05:41] the email and then it filled in the
[05:42] summary the title of the calendar event
[05:44] dinner with Michael Scott and then all
[05:46] it did in the success message was sent
[05:48] out that the event dinner with Michael
[05:50] Scott was created and it responded to
[05:52] the agent so that the agent could
[05:53] respond to us all right so I wanted to
[05:55] hop into the editor real quick and
[05:56] explain this dollar sign from AI thing
[05:59] in more detail so that for the rest of
[06:01] the nodes and the Agents that we're
[06:03] testing out it's all going to make more
[06:04] sense so let's come in here and pretend
[06:06] that we're adding another calendar tool
[06:08] we're just going to say that this is
[06:09] another create event so to create an
[06:12] event in your calendar once you have all
[06:13] your credentials set up you need a start
[06:15] time an end time and then let's just say
[06:17] we want to add a summary as well which
[06:18] is just the title that shows up in
[06:20] Google Calendar so from the query let's
[06:22] say we asked you know can you make an
[06:24] event for dinner from 5: to 6:00 so
[06:28] obviously the start time end time and
[06:29] the summary are all in there but this
[06:31] node doesn't know that so we need to
[06:32] give this node some context of how to
[06:34] fill in these different
[06:36] parameters so typically what I would do
[06:38] is once that query comes in we would run
[06:40] it through like maybe an open AI node to
[06:42] message a model and then that model
[06:44] would figure out what's the start time
[06:45] what's the end time and what will we
[06:46] title this event but now we don't even
[06:49] need that we can just sort of come in
[06:51] here and we can do a an expression which
[06:54] is going to be um dollar sign dollar
[06:57] sign right here from AI click on this
[07:00] and then we can see we need to add a key
[07:02] and then we can add other things that
[07:03] are optional usually what I've been
[07:05] doing right now is adding a key and a
[07:06] description so in this case the first
[07:08] thing we need to enter is a key so we're
[07:10] filling in the start time parameter so
[07:12] our key can just be
[07:14] start or I guess let's just do start
[07:16] time to make more sense and then if we
[07:18] we can leave it as that and the AI will
[07:19] probably be able to figure out what the
[07:21] start time for the event is but if you
[07:23] want to be more detailed you could add a
[07:25] comma another quotation mark and say the
[07:28] start time
[07:30] of an event and then end the quote and
[07:33] it should go gray and that's how you
[07:34] know that it's going to be good to go
[07:36] because then the AI will read in from
[07:37] here based on the query what's the start
[07:40] time and if it can't figure out the
[07:41] start time it's going to look at the
[07:42] description in order to understand more
[07:44] context about the start time so that we
[07:46] did the exact same thing let me just go
[07:48] back into the execution real quick we're
[07:50] going to look at the create event with
[07:51] attendee node that just executed with
[07:53] that example that we did as you can see
[07:55] the start time is from AI it's looking
[07:56] for a start time we said the time the
[07:58] user asks for the event to start same
[08:00] thing with end time except for the event
[08:01] to end then for attendees we said we
[08:04] gave the key of attendees and the
[08:07] description for what an attendee is is
[08:08] the person or people that the user is
[08:10] asking the event to be scheduled with so
[08:12] in this case it was upad digital
[08:13] gmail.com and then finally we gave it
[08:16] from AI the key is a name and the
[08:18] description of this is just a name for a
[08:20] calendar event so hopefully that made
[08:22] sense to you hopefully I explained that
[08:23] well but basically all you're doing is
[08:24] within each parameter you're telling the
[08:27] AI how to pick out of the query what
[08:29] should be going in here all right we're
[08:31] going to do another quick example of the
[08:32] calendar agent our telegram trigger is
[08:34] listening to us we're going to send off
[08:36] create an event for today at 400 p.m for
[08:37] my meeting with my team it's going to
[08:39] check that talk about what we need to do
[08:41] hit the calendar agent and then we
[08:43] should be seeing a success message the
[08:45] schedule or sorry the event titled
[08:47] meeting with the team has been scheduled
[08:49] for today at 4 p.m. top end of the
[08:51] calendar we can see right here after an
[08:53] event called gym we have meeting with
[08:55] the team real quickly let's test out the
[08:56] last tool the calendar agent has access
[08:58] to which is getting and summarizing a
[09:00] calendar so I said can you please get my
[09:01] calendar for today we'll send that off
[09:03] it's talking to the brain it's hitting
[09:04] the calendar agent and then we should
[09:06] see back in telegram our calendar
[09:08] getting summarized for us so let's just
[09:11] give this one sec to finish up the run
[09:13] it just finished so we should be getting
[09:15] the message any second now it's just
[09:17] summarizing the information there we go
[09:19] calendar events today November 5th we've
[09:21] got gym from 3: to 4:00 meeting with the
[09:23] team from 4:00 to 5:00 and then dinner
[09:24] from 6:00 to 7:00 we also invited up at
[09:27] digital at gmail.com and you can also
[09:28] click on view event right within here
[09:30] and it will open up the acttion actual
[09:32] calendar event for us so as you can see
[09:34] we have the gym we have meeting and then
[09:36] we have dinner so it did that
[09:38] successfully all right the next agent
[09:39] we're going to be looking at is going to
[09:40] be the email agent so let's hop into
[09:42] this workflow real quick same thing
[09:44] we're calling this agent from another
[09:45] agent so that's why the trigger is here
[09:48] and in this case we're only giving it
[09:49] send email and get email messages you
[09:52] know there's so many different options
[09:53] if we come in here to gmail you could um
[09:56] delete messages you could Mark some as
[09:57] red mark them as unread you could add
[09:59] lab you could reply and that just um
[10:01] involves using different things filling
[10:03] in different parameters but for the sake
[10:05] of the video I just wanted to keep this
[10:06] one simple and really the whole point is
[10:08] to show how agents can call multiple
[10:10] other agents and how that's more
[10:11] efficient and more scalable but right
[10:13] now let's really quickly look at one of
[10:14] these nodes so for a send email we need
[10:17] to know who it's going to go to what the
[10:18] subject is and what the message is going
[10:20] to say so once again the query is going
[10:23] to come through with something like can
[10:24] you email Nate herk reminding him to
[10:27] bring the presentation material for our
[10:29] meeting today so now these these from AI
[10:32] functions are going to be figuring out
[10:34] okay from that query we're going to find
[10:37] the email address and then that's how
[10:38] we're going to fill in the two we're
[10:40] going to we're going to figure out what
[10:41] the message is going to say and then
[10:42] we're going to make a subject and put it
[10:44] here and then finally we're going to
[10:45] actually make the email message and put
[10:47] it in right here email body which is the
[10:50] body message of the email so like I said
[10:53] I'm amazed that they've added this kind
[10:54] of stuff it's super cool that you can
[10:56] sort of bake in like an open AI node
[10:58] within each parameter it's super cool
[11:00] but let's just pull up Telegram and test
[11:02] out this agent all right we're going to
[11:04] send off can you email Nate herk and ask
[11:06] him how the project is coming along
[11:08] we'll send that off it's going to think
[11:09] about it it should be hitting the
[11:10] contacts database to get Nate herk's
[11:12] email and then it's going to go back to
[11:13] the email agent the email agent's
[11:15] currently deciding which tool it's going
[11:16] to use and then it should send us off
[11:18] the email and then let us know so I've
[11:20] sent an email to Nate herk asking for an
[11:22] update on the project let's go check our
[11:24] email and see what that one looks like
[11:25] okay that email just came through the
[11:27] subject is project status update hi Nate
[11:30] I hope this message finds you well I
[11:31] wanted to check in and see how the
[11:32] project is coming along could you please
[11:34] provide an update at your earliest
[11:35] convenience thank you best regards Nate
[11:37] so with very minimal prompting we were
[11:39] able to have it send a very you know
[11:41] it's formatted like an email it signs
[11:42] off it has line breaks and that stuff is
[11:44] awesome and like I said within this
[11:46] email agent I hardly even proed this
[11:48] thing all I did was say if a number of
[11:50] emails isn't specified just assume it
[11:52] will be five for you'll see that in the
[11:54] next tool but then I also just said when
[11:56] sending an email always sign it off from
[11:57] Nate never includes something like
[11:59] square brackets your name so obviously I
[12:01] want to build on this agent I want to
[12:03] UPG upgrade the prompting I want to
[12:05] start to give each agent more tools but
[12:06] I really wanted to get this video out so
[12:08] you guys could see how to start playing
[12:09] around with sort of very custom AI agent
[12:12] Frameworks so the next tool that this
[12:14] agent has is get messages as you can see
[12:16] it's going to be looking for messages
[12:17] from a specific sender so that will be
[12:19] specified based on the query and then
[12:21] it's going to figure out how many
[12:23] messages to get so that's why in The
[12:24] Prompt I said if a limit isn't specified
[12:26] just grab five all right the trigger is
[12:28] list for us again we're going to say can
[12:30] you please get my emails from Michael
[12:31] Scott and this one should check the
[12:33] contact database to understand who
[12:35] Michael Scott is what that email is so
[12:37] then it can tell the email agent that
[12:38] we're looking for emails from this
[12:39] specific address looks like it's working
[12:41] through to do that right now in the back
[12:43] end and then we should get a success
[12:44] message here and we should get our
[12:46] messages from Michael Scott summarized
[12:48] in
[12:49] telegram so that just came through here
[12:51] are the emails from Michael Scott which
[12:52] is upat digital gmail.com we've got
[12:55] lunch this weekend it's going to give us
[12:56] a date and content um we've got the
[12:58] subject project Rhino it's going to say
[13:00] a reminder about your meeting with him
[13:01] tomorrow don't forget to bring note
[13:03] cards in the poster and then the third
[13:04] one is Project Panda um reminder that
[13:07] the project must be completed by 2025 to
[13:09] avoid any consequences so super cool way
[13:11] to get emails quickly summarized from a
[13:13] specific person all right moving on to
[13:15] the third agent that this personal
[13:17] assistant has access to is the research
[13:19] agent let's take a look at what this one
[13:20] is doing same format in the sense that
[13:23] it's getting called by the agent so it's
[13:25] triggered like that the research agent
[13:27] we gave it a very brief prompt basically
[13:29] just saying your research agent you have
[13:31] Wikipedia Hacker News and Sur API to
[13:33] answer the question first search
[13:35] Wikipedia if you can't find it there
[13:36] then look through Hacker News and then
[13:38] if you can't find it there use Sur API
[13:40] so that's just sort of the flow that we
[13:41] wanted to go through and then finally if
[13:43] there's an error it's going to tell the
[13:44] agent to try again and if it's a success
[13:46] then it's going to Output the
[13:47] information that we wanted okay so for
[13:50] the first one let's try just saying can
[13:51] you find out some recent news about open
[13:53] AI let's hit that off it's going to talk
[13:55] to the brain go to the research agent
[13:57] the research agent right now is figuring
[13:58] out which are the tools that it's going
[13:59] to be able to use in order to answer our
[14:02] question and any second now it should be
[14:04] going back to the AI chat model which
[14:07] will go back to the agent and give us
[14:09] our
[14:11] answer so as you can see we just got
[14:13] some recent news about open aai open
[14:15] ai's board has fired Sam Alman the board
[14:17] of open a announced the dismissal of Sam
[14:20] Alton from a CEO position each of these
[14:22] has links to read more which is pretty
[14:23] cool um let's look at this last one open
[14:25] ai's whisper search or sorry open AI
[14:28] whisper speech recogn
[14:29] they've released whisper which is an
[14:31] open source speeech recognition model
[14:32] showcasing showcasing their advancements
[14:34] in AI technology we could click on read
[14:36] more and we could open up um the
[14:38] specific article that it was able to
[14:40] find so let's go into the research agent
[14:42] look at the executions and then see
[14:43] which tool it ended up using in order to
[14:46] give us that answer okay looks like this
[14:48] time it was able to come through the
[14:50] prompt was recent news about open aai it
[14:52] hit the agent it figured out that it was
[14:54] going to go to Hacker News in order to
[14:55] get recent articles for us and then in
[14:57] the output we got sort of of like a
[14:59] summarization about those articles
[15:01] another very simple use case but let's
[15:03] just say we're asking what is Tesla I
[15:05] imagine this one will go to Wikipedia
[15:06] since it's something more basic but
[15:08] right now it's hitting the research
[15:10] agent the agent's thinking about which
[15:11] tool it's going to use and I'll be back
[15:13] in a sec when we get the
[15:17] answer okay looks like we just got the
[15:20] answer Tesla most commonly refers to
[15:22] nicoa Tesla a Serbian American engineer
[15:25] Tesla Inc or Tesla a unit of magnetic
[15:29] flux density in the International System
[15:30] of Units so that's kind of interesting
[15:33] um Tesla Inc is related to vehicles and
[15:36] sustainable energy okay so that was an
[15:37] interesting response I wonder um which
[15:40] one that this one went through so let's
[15:41] give this a second to update right here
[15:44] we got the newest execution so this one
[15:46] just did Wikipedia so that's pretty cool
[15:47] I imagine the search criteria was what
[15:49] is Tesla so it pretty much just searched
[15:51] Wikipedia and gave us three different
[15:53] answers of what Tesla is all right and
[15:55] for this third one I'm going to say can
[15:56] you find Apple's most recent earnings
[15:58] hopefully this one will hit Sur API we
[16:00] will see um but it's pretty cool to see
[16:02] that you don't actually have to be using
[16:04] credits and Sur API in order to get some
[16:06] of your questions answered like I kind
[16:08] of thought that Tesla one you know with
[16:09] the answer that it gave I thought that
[16:10] was pretty complex but let's see right
[16:12] now it is hitting the research agent
[16:14] it's going to hit the brain summarize
[16:16] the information that we're getting which
[16:17] is the chat model and then it's going to
[16:19] go back to the agent and then respond to
[16:21] us in
[16:24] telegram all right looks like this one's
[16:26] about to finish up there we go Apple's
[16:28] most recent earnings highlights for 2024
[16:30] second quarter reported a profit of 23.6
[16:33] billion revenue of 90.8 billion third
[16:36] quarter profit was 21.4 billion
[16:38] additionally Apple has authorized $110
[16:40] billion share buyback good information
[16:43] um let's just see real quick which which
[16:46] tool that this one end up using
[16:48] hopefully Sur API but maybe even just
[16:50] Wikipedia again okay so this one
[16:51] actually used a combination of Wikipedia
[16:53] and Hacker News so super cool that it's
[16:55] not going to be blowing through your
[16:57] credits with ins Ser API cuz that can
[16:58] get a little pricey but as of now I just
[17:00] asked three questions and it only used
[17:02] the other two tools so that's super
[17:04] encouraging and cool to see that it is
[17:05] able to figure out how to get your
[17:06] questions answered okay and for this
[17:08] last agent that we gave it access to the
[17:10] projects agent this one's really simple
[17:12] all that this one is doing is um it's
[17:15] going into our database for projects
[17:16] which we can either get projects or
[17:18] update projects and let me show you real
[17:19] quick I used this one in a in the
[17:21] previous video with my personal AI
[17:22] assistant but let's say you had a ton of
[17:24] projects in here and you had notes and
[17:26] you had different statuses you could
[17:27] also do this with something um you know
[17:29] in something like air table or another
[17:30] sort of database system but just using
[17:33] sheets for the sake of the video so we
[17:35] can ask it to get information and
[17:36] summarize our projects or a specific
[17:38] project and then we could have it um
[17:40] update a status of one of these projects
[17:42] so let's hop back into the personal
[17:44] assistant and let me pull up telegram
[17:46] real quick and we will ask it to do
[17:48] something okay so we're just going to be
[17:50] asking this one to get the project
[17:52] database and summarize it so it's
[17:54] hitting the projects agent as you can
[17:56] see should be coming back here to the
[17:58] large language model and then feeding
[17:59] back to the agent and then responding to
[18:01] us so we will see here's a summary of
[18:03] the current projects and their statuses
[18:05] AI tool is complete complete marketing
[18:07] campaign is pending action draft content
[18:10] is ready pending review we've got other
[18:11] information here um and now let's just
[18:14] really quickly say let's say we just
[18:16] found out that marketing campaign just
[18:17] wrapped up so um let me type in a prompt
[18:20] real quick all right so really simple I
[18:21] just said can you update the notes and
[18:23] status of the marketing campaign project
[18:24] to complete right now it's pending
[18:26] action and the draft content's ready and
[18:28] pending review so we'll send this off
[18:30] we'll see it hit the projects agent and
[18:31] then maybe we'll just go into the actual
[18:33] project database and we can see right
[18:35] there it just got switched to complete
[18:36] and complete in the marketing campaign
[18:39] let's go back over here we can see that
[18:40] everything was successful and then the
[18:41] telegram said the notes and status of
[18:44] marketing campaign project have been
[18:45] successfully updated to complete if
[18:47] there's anything else you need feel free
[18:49] to ask so I know that these four agents
[18:51] weren't super complex as far as the
[18:52] tools that they had access to but you
[18:54] can tell that they're very efficient at
[18:55] sort of delegating out the tasks to the
[18:57] specific tool but the point to take away
[19:00] here is how easy it is to connect an
[19:02] agent to another agent and you know sort
[19:04] of give the bigger agent multiple agents
[19:06] to run through I would say the best rule
[19:08] of thumb is to never give an agent more
[19:09] than like 10 tools would probably be too
[19:11] many as far as it's going to get
[19:13] confused with the prompting and with the
[19:15] flow of how it should be operating but
[19:17] those were the four main agents that we
[19:18] gave this personal assistant but let's
[19:20] run through these other tools real quick
[19:22] so the first one we'll just go to is
[19:23] sending a slack message this one's real
[19:25] simple we set this one up within a
[19:27] specific channel so the channel that
[19:28] it's going to be going to is YouTube
[19:30] testing and then the message that it's
[19:31] going to be sending is one of those from
[19:33] AI Expressions again it's going to be
[19:35] grabbing the message from the query and
[19:37] then sending that off into slack okay so
[19:40] this prompt here I'm saying can you send
[19:41] a slack message to my team letting them
[19:43] know I'm going to be late to the meeting
[19:45] send that off see this happen live and
[19:47] then once it goes green I have sent a
[19:49] slack message to your team letting them
[19:51] know you'll be running late we'll open
[19:52] up slack real quick and you can see hi
[19:55] team I just wanted to let you know that
[19:56] I'll be running a bit late to the
[19:57] meeting please feel free to start with
[19:58] without me um so that is how that one
[20:00] works super simple tool but could be
[20:02] super useful if you're you know in the
[20:04] car and you're running late and then
[20:06] finally let's check out this um
[20:07] knowledge base real quick this is the
[20:11] document that I uploaded to the the pine
[20:13] cone Vector store which is just um you
[20:15] can see Body Shop Services terms
[20:17] conditions so we've got services and
[20:18] prices we've gotur terms and conditions
[20:21] and then internal policies obviously you
[20:23] probably be giving it more information
[20:25] or um you know just specific to your use
[20:27] case as far as like internal policies or
[20:29] whatever you want to be talking with but
[20:32] let me type in a few things and we can
[20:33] see how it's coming through all right so
[20:35] I just hit test workflow the telegram
[20:36] trigger is waiting for us to talk to it
[20:39] I'm asking what is our policy on health
[20:40] and safety and data privacy so we'll
[20:42] send that off it's going to hit the
[20:44] knowledge base and then it will return
[20:45] us a nice clean answer um let's actually
[20:47] just pull up the document real quick and
[20:50] then we just got our answer from
[20:51] telegram so the health and safety policy
[20:54] emphasizes maintaining a clean and safe
[20:55] working environment and then the data
[20:57] privacy policy ensures personal
[20:59] information collected like contact
[21:01] details and payment information is kept
[21:03] confidential and used only for service
[21:05] related purposes and as you can see
[21:07] we've got this information right down
[21:09] here now let's see what else should we
[21:11] ask it maybe let's ask it about our
[21:14] payment terms and how much an oil change
[21:17] cost so we'll hop back in here and I
[21:19] will type out this prompt all right so
[21:20] now I said what are our payment terms
[21:22] and also how much do we charge for an
[21:24] oil change so hit send telegram is going
[21:27] to take that it's going to hit it off to
[21:29] the pine cone Vector store and then it
[21:31] will give us a nice clean answer about
[21:33] payment terms and oil change so as you
[21:35] can see our payment terms are that all
[21:37] payments are due upon completion of
[21:39] services we accept cash credit cards
[21:40] blah blah blah for an oral change we
[21:42] charge 35 for standard and 65 for
[21:45] synthetic so as you can see 35 and 65
[21:47] and then payment terms cash credit and
[21:50] approved financing options um yeah so
[21:54] that seems to be feeding through
[21:55] correctly and then finally we have the
[21:57] calculator so um I don't think this is
[21:59] really too much to show off I'm
[22:00] literally just going to say 8 times um
[22:03] 451 and see what we get there it should
[22:05] be oh I didn't test it we'll test it so
[22:07] now it's going to be running that prompt
[22:08] it will hit the calculator and it's
[22:10] going to say the result of 8 * 451 is
[22:14] 368 so um that's obviously just how the
[22:16] calculator tool works but that's in case
[22:18] you had a prompt where um you wanted to
[22:20] do a calculation within maybe sending a
[22:22] query so that's why we always include
[22:23] the calculator but like I said let's
[22:27] look at the prompts real quick because
[22:28] it's this is really simple and I didn't
[22:29] even have to take too much time on it I
[22:31] definitely plan on making a video soon
[22:33] about prompting and sort of what should
[22:34] go into it but the fact that the agent
[22:37] can run super efficiently when calling
[22:39] multiple agents with a prompt that is
[22:41] this small should show you guys just
[22:43] sort of the power of having agents call
[22:45] multiple agents but anyways let's read
[22:47] this prompt real quick I said you are a
[22:49] personal AI assistant agent designed to
[22:52] handle various tasks efficiently your
[22:54] primary role is to manage contacts
[22:55] emails calendar events for the user you
[22:57] have access to fre tools to help you
[22:59] fulfill your requests so honestly that's
[23:01] not even true I haven't even fully
[23:03] updated this prompt and it's still
[23:04] working really well so contact data use
[23:07] this when you need to look up contact
[23:08] information like an email address you
[23:10] need to use this tool before sending an
[23:12] email or before getting emails because a
[23:14] lot of times it has to look up the email
[23:16] address to get information from it also
[23:18] has to look up an email address if it
[23:19] wants to send a calendar invitation sort
[23:21] of with an invite then we have the email
[23:24] agent we just said the uses for handling
[23:26] sort of all email related actions
[23:28] calendar agent use this for handling all
[23:30] actions related to calendar we can send
[23:32] a slack message the projects agent use
[23:34] this tool to access our projects we can
[23:36] update them or get information and then
[23:38] if you've noticed I didn't even prompt
[23:39] in the research agent but we could see
[23:41] that it still was able to call that
[23:42] research agent efficiently because it
[23:44] doesn't have too many tools at its
[23:46] disposal so it's able to sort of figure
[23:47] out when to use each tool and then at
[23:49] the bottom I said when a task requires
[23:51] one or more of these tools make sure to
[23:53] identify which tool is the most
[23:55] appropriate pass along relevant details
[23:57] and execute these app actions needed to
[23:59] complete the task your goal is to be
[24:00] proactive precise and organized in
[24:02] managing these resources to provide a
[24:05] smooth experience for the user and then
[24:07] the most important thing is to include
[24:09] the current date and time so as you can
[24:10] see we just did a simple JavaScript
[24:12] function curly bracket curly bracket
[24:15] dollar sign now and um if you watched my
[24:17] master class on AI agents you saw how
[24:19] you can format this kind of stuff so um
[24:21] if I went in here and did format now
[24:23] it's coming through is a simple simple
[24:26] date rather than the way it was like
[24:28] like this over here as you can see
[24:32] sorry right here now it looks really
[24:34] ugly um and then also you're able to
[24:37] sort of play around with the formatting
[24:38] if I just did two Capital D's within
[24:41] quotes of course we would see November
[24:43] 5th 2024 instead of the way we just
[24:45] currently saw it so that's how you can
[24:47] give it context on current date and time
[24:49] and that is super important because when
[24:50] we say things like get my calendar for
[24:53] tomorrow it knows how to do tomorrow
[24:55] rather than you know what is tomorrow
[24:57] it's going to figure out the day that it
[25:00] is currently and then add one day to it
[25:02] or if you want to get emails from 2 days
[25:04] ago you'd be able to do that because it
[25:06] has the current date and time so as far
[25:09] as configuring how you actually call
[25:10] these AI agents in here all it's going
[25:12] to be is you're calling the agent from a
[25:14] list I didn't have to specify any sort
[25:16] of input schema the most important thing
[25:18] really is just to make sure it's
[25:19] returning the field called response and
[25:21] then within each agent you're having the
[25:23] success messages come out as responses
[25:26] or the error message or any sort of
[25:28] output comes into the field called
[25:31] response and then just a quick
[25:33] description on when to call each tool I
[25:35] said this is one is for any email
[25:36] actions this one's obviously for any
[25:38] calendar actions but also you'll have
[25:40] that sort of into the prompt a little
[25:41] bit but it's super simple now because it
[25:44] all all has to do is figure out if I'm
[25:45] doing email I'm going to send all my
[25:47] information from the query into this
[25:49] agent and then the agent's going to be
[25:50] able to figure out how to do that for me
[25:52] I hope you guys found this one useful
[25:53] like I said the main point of this video
[25:55] was just to show you how to have agents
[25:57] link up to larger agent and sort of open
[26:00] your eyes to how that can be more
[26:01] efficient and more scalable like I
[26:03] mentioned earlier I'd love to do a sort
[26:05] of a stepbystep tutorial as well as
[26:07] build on and add more tools within each
[26:10] of these agents and I would love to
[26:11] build a uh make a video for you guys
[26:13] about that but let's hit the goal of a
[26:15] th000 likes and then I'll start to work
[26:17] on that sort of content and um I'll also
[26:20] be uploading this this template into the
[26:22] free school community so if you're
[26:24] already in there be on the lookout for
[26:26] that and if you're not in there it's
[26:27] completely free I upload a lot of
[26:28] resources in there as well as you know
[26:30] there's a ton of other like-minded
[26:31] individuals and talk about nnn talk
[26:33] about AI automations other AI projects
[26:36] stuff like that so I'd love to see you
[26:37] guys in there but that's all I've got
[26:39] for today so thanks so much for watching
[26:41] I'll see you guys in the next one