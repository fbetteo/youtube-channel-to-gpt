Video Title: Untitled_Video
Video ID: 9FuNtfsnRNo
URL: https://www.youtube.com/watch?v=9FuNtfsnRNo
View Count: 0

[00:00] hey guys so what we're going to be
[00:01] looking at today is the ultimate
[00:02] personal assistant and I'm super excited
[00:03] to share this build with you guys as you
[00:05] can see the ultimate assistant has
[00:06] access to these four agents that we
[00:08] built out within nadn the first one is
[00:09] an email agent it looks like this this
[00:11] one has the ability to send emails reply
[00:13] to emails label emails create drafts get
[00:16] emails get labels and Mark emails as
[00:17] unread the next agent is a calendar
[00:19] agent it looks like this it can update
[00:21] events create events with attendees get
[00:23] events and delete events as well then we
[00:25] have a content creator agent that can
[00:26] search the web and then it creates blog
[00:27] posts for us and then finally we have
[00:29] the contact agent that's able to get
[00:30] contacts and also add or update contacts
[00:33] in our air table contact database and
[00:35] then finally we also gave it access to
[00:36] tavali here is just a tool in case it
[00:38] needs to do some web search
[00:39] functionality so let's run through a few
[00:41] demos show off all the tools show off
[00:42] all the functionality and then I'm going
[00:44] to show you guys how you can download
[00:45] this workflow for completely free and
[00:46] then plug it into your nadn and get
[00:48] started can you please set up a team
[00:50] sync tonight for 6 p.m. with Nate
[00:52] herkelman and then send him an email to
[00:54] confirm if that time works okay so right
[00:56] now telegram just sent over that audio
[00:58] file it's getting transcribed now the
[01:00] ultimate assistant has to decide what to
[01:01] do so first of all it hit the contact
[01:03] agent to get Nate Herman's email address
[01:05] now it's hitting calendar and email
[01:06] agent simultaneously to create that
[01:08] event as you can see it just popped up
[01:10] right here and send that email so we
[01:12] just got our response back from telegram
[01:13] the team sync with Nate herkelman has
[01:15] been scheduled for tonight at 6 p.m. you
[01:17] can manage the event here additionally
[01:18] an email has been sent to confirm if
[01:20] that time works for him if there's
[01:21] anything else you need just let me know
[01:23] so here we have our caler invite you can
[01:24] see that Nate herkelman got added as a
[01:26] guest then hopping into our sent emails
[01:28] we can see hey Nate I hope this m
[01:29] message finds you well could you confirm
[01:31] if 6 p.m. works for our upcoming team
[01:33] sync let me know let's say that that
[01:35] time didn't work for Nate let's push it
[01:36] back an hour can you actually push the
[01:38] team sync back an hour okay so that's
[01:40] going to get sent through same thing
[01:41] transcribing the audio the ultimate
[01:43] assistant has memory so it's going to be
[01:45] aware of what we're talking about when
[01:46] we say can you push that back an hour as
[01:48] you can see it just hit the contact
[01:50] agent now it's hitting calendar and
[01:51] email agent so we're going to watch
[01:53] right here as the team sync gets bumped
[01:54] back an hour it just got moved and we
[01:56] also see that the agent responded with
[01:58] Team Sync has been pushed back 7:00 p.m.
[02:00] and an email confirming the rescheduled
[02:02] time has been sent to Nate so that
[02:04] really shows you the power of this
[02:05] ultimate assistant because we didn't
[02:06] even ask it to follow up with Nate by
[02:08] email but it went ahead and did it
[02:09] anyways here we go in our emails we can
[02:12] see Team sync rescheduled dear Nate
[02:13] herkelman um I'm writing to confirm that
[02:15] the team Sync has been rescheduled to
[02:17] 7:00 p.m. tonight anyways let's take a
[02:19] look at our inbox we can see we have a
[02:21] new email from Nate herkelman checking
[02:22] in how are you let's say that we want to
[02:24] respond to this email in that same
[02:25] thread all we have to do is ask our
[02:27] ultimate assistant to do so for us
[02:30] please respond to my email from Nate
[02:32] herkelman saying that I'm doing well
[02:35] okay that's going to get sent off once
[02:37] again it's going to grab that
[02:38] information it's going to hit the email
[02:39] agent and then we're going to take a
[02:40] look at what actually happens within the
[02:42] email agent to reply to this message we
[02:44] just got our message back I've replied
[02:46] to the email with I'm doing well so
[02:48] let's quickly refresh our Gmail we can
[02:50] see that in this thread we have now I'm
[02:52] doing well signed off by Nate and now
[02:54] we're going to go into the email agent
[02:55] and check that execution to see what
[02:57] actually happened so here's that
[02:59] execution of the email agent as you can
[03:00] see it hit the tool called email reply
[03:02] which is awesome because it's going to
[03:04] put it in the same thread but what we
[03:05] see here is that we need to get a
[03:06] message ID and this isn't something that
[03:08] we'd be able to get by ourselves without
[03:10] getting all of the email information so
[03:12] what the email agent has to do is first
[03:13] of all grab emails from Nate herkelman
[03:15] as you can see it pulls in the sender
[03:17] which is upad digital gmail.com and then
[03:19] it's able to look through the emails
[03:20] that we're talking about grab that
[03:22] message ID and then plug it into the
[03:23] email reply tool so that's how it
[03:25] actually replied in that same thread so
[03:27] this type of logic is really cool and I
[03:28] want to show an example of doing
[03:29] labeling emails because in the label
[03:31] email tool what we need is a message ID
[03:33] but we also need a label ID so in order
[03:35] for the agent to actually label emails
[03:37] it's going to have to get all emails get
[03:39] all labels so that it has IDs for labels
[03:41] and messages to feed into this tool so
[03:44] let's do an example of that please label
[03:46] my recent email from Nate herkelman as
[03:48] high priority there we go it's hitting
[03:49] the email agent and then we'll take a
[03:51] look at the execution and see how that
[03:52] worked so we got our message the recent
[03:54] email from Nate hman has been labeled as
[03:56] high priority let's refresh our Gmail we
[03:58] can see right here this is the one we
[03:59] talking about it just got moved to high
[04:01] priority and here we have the most
[04:03] recent execution of the email agent as
[04:05] you can see what it had to do to fill in
[04:06] the parameters for label ID it had to
[04:08] get message ID and label ID and it got
[04:11] this by activating the get email tool to
[04:13] get the message ID and then get the
[04:14] labels for the label ID super cool stuff
[04:17] okay let's try out some other
[04:18] functionality can you please create a
[04:21] blog about deep seek and then put it in
[04:23] a draft for Nate herkelman okay this is
[04:26] going to send it off to the content
[04:28] creator agent which has um a workflow in
[04:30] there where it's able to search the
[04:32] internet grab back articles and then
[04:34] it's going to use that information to
[04:35] create a blog and then what it's going
[04:36] to do is hit the contact agent to get
[04:38] Nate Herman's contact information once
[04:40] again and then it's going to hit the
[04:41] email agent to draft that email for him
[04:44] and by the way in the ultimate assistant
[04:45] I'm using GPT 40 and all of these agents
[04:48] I'm using GPT 40 except for the content
[04:50] creator agent I'm using Claude 3.5 Sonet
[04:52] because I really like the way that it's
[04:53] able to structure content human readable
[04:57] HTML whatever it is I like the way that
[04:59] it retrieves content for us okay here we
[05:01] go the blog about deep seek has been
[05:03] created and included in a draft email
[05:04] for Nate herkelman so let's take a look
[05:06] at the draft real quick okay we're in my
[05:08] draft as you can see it's right here if
[05:09] we pull it up it's in a HTML format
[05:11] let's actually make this bigger real
[05:12] quick and take a look at it so deep seek
[05:15] Revolution AI with breakthrough
[05:16] technology and Energy Efficiency we've
[05:18] got different headers here we've got
[05:19] bullet points we've got benefits
[05:21] potential applications challenges and
[05:22] concerns and then we've also got sources
[05:24] at the bottom which is just really cool
[05:25] for a really quick agent to throw that
[05:27] together okay one last demo then really
[05:29] dive into this build let's say can you
[05:32] please get my calendar availability for
[05:34] today and then send that in an email to
[05:36] Nate
[05:40] herkelman there we go hitting the
[05:42] calendar agent right now it's getting
[05:43] availability as you can see we only have
[05:45] three meetings today so this is what we
[05:46] should get pulled back um as our sort of
[05:48] unavailable slots and then hopefully
[05:50] it's going to take that information get
[05:52] contact information for Nate herkelman
[05:53] and then send an email to them with our
[05:55] availability okay there we go the email
[05:57] with your calendar availability for
[05:58] today has been sent to Nate herkelman
[06:00] let's take a look at it so here's what
[06:01] the email looks like dear Nate here's my
[06:03] calendar availability for today 12:00
[06:05] to1 I'm busy with a meeting with you 7
[06:07] to8 team sync 8 to9 strategy meeting and
[06:09] then it provides links to all those
[06:11] events It also says I'm free before 1200
[06:13] between 1 and 7 and after 9: so that's
[06:15] pretty cool too okay so before we start
[06:17] breaking down this ultimate assistant
[06:18] with all the other agents that we built
[06:20] if you want to download this workflow as
[06:22] as well as the email agent the calendar
[06:23] agent the content creator agent and the
[06:25] contact agent you can do so by joining
[06:27] my free school Community the link for
[06:28] that is down in the description you'll
[06:29] go to YouTube resources click on the
[06:32] post associated with this video and then
[06:33] you see right here you can download
[06:35] those Json files to load straight into
[06:36] your nnn environment and if you're
[06:38] looking to take your skills with naden a
[06:39] little farther and you're looking for
[06:40] more Hands-On approach please feel free
[06:42] to check out my paid Community the link
[06:43] for that is also down in the description
[06:45] we've got a great community of members
[06:46] who are always sharing resources about
[06:48] nadn um sharing builds sharing
[06:50] challenges they're having we also got a
[06:51] great classroom section with resources
[06:53] that are always being updated right now
[06:54] we're focusing on a deep dive within
[06:56] building AI agents but there are other
[06:57] Deep dive topics like vector databases
[06:59] and finally we have a calendar section
[07:00] with five live calls per week to make
[07:02] sure you're always getting your
[07:02] questions answered never getting stuck
[07:04] and also being able to network with
[07:05] other like-minded individuals in this
[07:07] community so I'd love to see you guys in
[07:09] here let's get back to the video okay
[07:10] there's a lot going on in this build so
[07:12] let's Dive Right In and I'll try to
[07:14] break everything down as simple as I can
[07:16] so let's first of all just start with
[07:17] the inputs and the outputs we're working
[07:19] with telegram so we have a telegram
[07:20] trigger set up that's watching for our
[07:22] messages when it comes through it's
[07:24] either going to come through as a text
[07:25] file or a voice file so if it comes
[07:27] through as voice what we're doing is
[07:28] we're using this switch to see if the
[07:30] voice file exists if it does it's going
[07:32] to send it up this way to download the
[07:33] file in telegram transcribe that file
[07:36] and then it feeds it into the ultimate
[07:37] assistant if it comes through as text
[07:40] which actually let me show you guys that
[07:41] real quick so I'm saying search the web
[07:42] for puppies we sent that over as a text
[07:44] so as you can see it's going to go down
[07:45] this route because right in here we're
[07:47] seeing if um the json. message. text
[07:50] exists rather than the voice file so
[07:51] anyways they both feed through into the
[07:53] agent and it's going to work all the
[07:54] same real quick let's see what we got
[07:57] here are some interesting stories about
[07:58] puppies so the Puppy Bowl it's going to
[07:59] give us a link to read more um pause
[08:01] Chicago pet of the week Kirby it's going
[08:03] to give us a link to watch the video and
[08:04] um then finally we have one more video
[08:06] that we can click on the link to watch
[08:08] and that's how that search functionality
[08:09] works but what we're doing here is we're
[08:11] setting them both to equal a field
[08:12] called text so as you can see through
[08:14] here we're mapping this to text so that
[08:16] it's going to feed through so that the
[08:17] agent can just be looking for a field
[08:18] called json. text and now I'm in an
[08:20] execution where we used our voice and as
[08:22] you can see what's leaving the
[08:23] transcribe node is a field called text
[08:25] so once again the ultimate assistance
[08:27] now I'm in an execution where we trigger
[08:28] this workflow with our voice as you can
[08:30] see coming out of the transcribe node is
[08:32] a field called text so we're able to
[08:34] feed in the agent json. text and it's
[08:36] able to understand what we're saying
[08:38] whether it's voice or text and then as
[08:40] far as the output all it's happening
[08:41] here is we're responding in that same
[08:43] telegram chat ID so we're grabbing the
[08:45] chat ID that's coming in from the
[08:46] trigger and then we're just outputting
[08:48] exactly what the ultimate assistant
[08:50] output to us okay cool so from there
[08:52] let's take a look at the ultimate
[08:54] assistant prompt so we all understand
[08:56] what is going on now what I think is
[08:57] really really cool about this ultimate
[08:59] assistant framework is that as you can
[09:00] see this prompt is not very long or not
[09:02] very complex and similarly with all the
[09:04] other agents the prompts are not very
[09:06] long and not very complex so this is
[09:08] really cool because every agent sort of
[09:09] specializes in something rather than
[09:11] loading up one agent with a ton of tools
[09:13] and a huge prompt so in this case the
[09:15] ultimate assistant is just in charge of
[09:17] delegating tasks as we said your job is
[09:19] to send the user's query to the correct
[09:20] tool you should never be writing emails
[09:22] or creating event summaries all you need
[09:24] to do is just call the correct tool so
[09:26] that makes it really easy for this guy
[09:28] then we Define what the tools are so
[09:30] email agent use it for email actions
[09:32] calendar agent use it for calendar
[09:33] actions contact agent content creator
[09:35] and then Tav for web search we did have
[09:38] to give it a rule which is pretty
[09:39] important so we said some actions
[09:40] require you to look up contact
[09:42] information first so for the following
[09:43] actions you need to get contact
[09:45] information and then you send that to
[09:46] the agent who needs the contact
[09:48] information so in this case if you're
[09:50] looking to send emails draft emails or
[09:52] create calendar events with attendees
[09:54] you need to get contact information
[09:55] first and then I was able to get away
[09:57] with having this agent perform pretty
[09:58] well with only giving one example which
[10:00] is here's an input send an email to Nate
[10:02] herkelman asking what time he wants to
[10:04] leave first action is you use the
[10:05] contact agent to get Nate Herman's email
[10:08] then you use the email agent to send the
[10:09] email and you'll pass the tool a query
[10:12] like send Nate herkelman an email to ask
[10:13] what time he wants to leave so all we're
[10:15] doing is getting the email agent an
[10:17] actual query rather than sending trying
[10:19] to write an email and send that over and
[10:21] then finally we just gave it access to
[10:23] the current date and time okay so how
[10:25] are we actually able to give the
[10:26] ultimate assistant access to those
[10:28] workflows that we bu built out like the
[10:30] email agent and the calendar agent what
[10:32] we need to do is we add them as tools so
[10:33] we can click on the plus under the tool
[10:35] section and we're going to click on call
[10:36] NN workflow as a tool so when we click
[10:39] on this we have a couple things to set
[10:40] up the first thing is we actually need
[10:41] to give it a name and this is the name
[10:43] that the AI agent will be looking for
[10:44] when you define them in the system
[10:46] prompt so in here as you can see I said
[10:49] these are the tools you have email agent
[10:51] calendar agent and those are all in
[10:52] camel case and as you can see here those
[10:54] aren't camel case but in here I actually
[10:56] Define the name in camel case so that's
[10:58] what the agents look for anyways once
[11:01] you're in this tool what you need to do
[11:03] is give it a name so this is just an
[11:04] example you need to give it a
[11:06] description so let's say this was the
[11:08] email agent what we would say is call
[11:10] this tool for email actions right um so
[11:13] email actions is there and then what
[11:15] we're doing is we're just going to grab
[11:16] it from our database you could also do
[11:18] it by Json we don't want to do that
[11:20] we're just going to do it by database
[11:21] and then it's going to basically just be
[11:22] a drop down list for us to choose from
[11:25] so in this case um you know that's why I
[11:26] was pulling in the email agent or we
[11:28] were pulling in the calendar agent right
[11:30] here so that's pretty much how it works
[11:33] and then you may be wondering okay so
[11:35] the ultimate assistant calls this tool
[11:37] great then the tool goes through the
[11:40] process of taking action whatever it
[11:41] needs to do and then it has to respond
[11:43] back to the main agent so the main agent
[11:45] actually knows what's going on and so
[11:47] there used to be a parameter here called
[11:49] um field to return and then we'd always
[11:51] it was by default called response so
[11:53] that's why um out of habit I always set
[11:55] my last node as a set node to response I
[11:58] don't think you have to call it response
[11:59] anymore because right here it says the
[12:00] tool will call the workflow you define
[12:02] below and it will look in the last node
[12:04] for the response the workflow needs to
[12:06] start with an execute workflow trigger
[12:08] so um this email agent that we're
[12:11] calling it's starting with an execute
[12:13] workflow trigger the query comes over
[12:15] the email agent decides what to do and
[12:17] then the email agent outputs a response
[12:19] which is either you know hey the email
[12:20] got sent to Nate herkelman saying all
[12:22] this kind of stuff or the email agent
[12:25] failed and then we output this response
[12:26] that says um you know unable to perform
[12:29] the task please try again and this
[12:31] introduces a really cool element of the
[12:33] agents being able to talk to each other
[12:34] more than just here's a query here's my
[12:36] output but also like hey I'm having
[12:39] issues try again so that's what's going
[12:42] on as far as like data transferring
[12:43] between different workflows so this is
[12:45] really cool because rather than having
[12:46] all the email Tools in this workflow and
[12:48] all the calendar Tools in this workflow
[12:50] all it has to do is just send it off
[12:51] once and then this email agent is able
[12:54] to figure out with the incoming query
[12:55] what it needs to do so if we click into
[12:57] an execution here we'll look at one of
[12:58] the examp examples we just did in the
[12:59] demo so let's click into this one that
[13:01] took 30 seconds to run because it was
[13:03] probably a little bit more of a complex
[13:04] query all this this agent is getting is
[13:08] um create a draft for Nate herkelman at
[13:10] upit digital.com and it gives us a
[13:12] subject and then it gives us the actual
[13:13] blog that we needed to send over and
[13:15] here's that example again where we asked
[13:16] it to label one of our emails the query
[13:18] that it got was label the recent email
[13:20] from Nate herkelman as high priority so
[13:22] what it had to do was understand which
[13:23] tools to use so let's look at the email
[13:25] agents prompt so as you can see this
[13:27] prompt is super short and it's just
[13:29] super concise super clear which is
[13:31] awesome because it really allows us to
[13:33] add on more tools and to the ultimate
[13:35] assistant continue to add on more and
[13:36] more agents because right now it's not
[13:38] overwhelmed with what it's doing so the
[13:40] overview is you're an email management
[13:41] assistant all emails must be formatted
[13:43] professionally in HTML and signed off as
[13:45] Nate so here are the tools that you have
[13:47] access to send email to send emails
[13:49] create drafts get emails get labels so
[13:52] those are all pretty intuitive because
[13:53] the name of the tool pretty much says
[13:54] what the tool does but then we have a
[13:56] couple that we had to give more
[13:57] instructions to so use Mark unread to
[14:00] mark an email is unread but you must use
[14:02] get emails first so you have the message
[14:04] ID of the email to flag as unread
[14:06] similarly with labeling emails you need
[14:08] to use get emails first so you have the
[14:10] message ID of the email to flag then you
[14:12] have to use get labels so you have the
[14:14] label ID and finally with email reply
[14:16] same thing get emails first so that you
[14:18] have the message ID to put into the the
[14:21] tool um reply to emails so first things
[14:24] first the email agent is being triggered
[14:25] when it's called by another workflow so
[14:27] as we saw in the demo in the visual with
[14:29] the green um spinny things um when the
[14:33] ultimate assistant decides to send a
[14:34] query it's going to hit the email agent
[14:36] and then it sends something over and
[14:37] then right here is where that email
[14:38] agent actually captures that query and
[14:40] then what we're doing here is we're
[14:41] basically having two options for output
[14:43] the first one is if success we're going
[14:45] to return the output of the main agent
[14:47] back to the ultimate assistant so by by
[14:50] setting this field to response it's
[14:52] going to be looking for json. output and
[14:54] so some of you guys i' I've seen have
[14:56] been there have been questions about
[14:57] this but basically when you're setting
[14:58] up workflow as a tool you can see that
[15:00] it says the tool will call the workflow
[15:03] you def find below and it will look in
[15:04] the last node for the response so
[15:07] whatever node you have at the end of
[15:08] your workflow that's where the main
[15:10] agent that you called originally is
[15:12] going to be looking over here so we have
[15:13] success and we have try again we were
[15:15] able to set this up by coming into the
[15:17] agent clicking on settings and then
[15:19] using on error continue using error
[15:22] output so this so what this did is it
[15:25] broke up two branches so if there's an
[15:27] error in the email agent it's going to
[15:28] come over here and it's going to send
[15:29] back unable to perform task please try
[15:32] again and then the ultimate personal
[15:33] assistant will read this and likely send
[15:35] over a new query to try the process
[15:36] again so we're going to dive into these
[15:38] different tools down here and how they
[15:39] actually work um for the email one but
[15:41] then pretty much they're all going to be
[15:42] using that same sort of from AI
[15:44] framework that I'm about to dive into so
[15:46] we won't break all of them down as in
[15:48] detail but let's take a look at these
[15:49] tools here so first thing that I'm going
[15:51] to do is I'm going to come into our node
[15:53] which is one executed by another
[15:54] workflow and we're going to enter in a
[15:56] query here so that we can just test this
[15:57] environment easier rather than than
[15:59] having to have the ultimate assistant
[16:01] send over a query every time so in here
[16:03] I'm I'm typing out send an email
[16:06] to Nate herk 88@gmail.com
[16:12] asking what's up and what his favorite
[16:17] color
[16:18] is okay so that's the query that this
[16:21] agent's going to be getting right so we
[16:22] have this set um and this is similar to
[16:24] a query that the ultimate assistant
[16:25] would actually be passing over to us so
[16:27] we'll hit play so the email agent starts
[16:29] thinking about it using its prompt to
[16:31] understand what tools it needs to hit we
[16:32] know that all it needs to do really is
[16:34] hit the send email tool as you can see
[16:35] it didn't activate any of the other ones
[16:37] but you may be thinking how does it know
[16:38] how to actually do that so in this tool
[16:41] and for all the other tools like I
[16:42] mentioned we're going to be using a
[16:44] function called from AI so as you can
[16:46] see right here use the Expression from
[16:47] AI for any data to be filled in by the
[16:49] model so this is really really cool
[16:51] because Within These different
[16:52] parameters like who the email is going
[16:54] to what the subject is what the message
[16:56] is we can basically just tell the AI to
[16:58] fill this in by itself based on a few
[17:01] like a key and a definition and in this
[17:03] case we're not even using a definition
[17:04] we're just using a key so as you can see
[17:06] here um in the two field we put from Ai
[17:09] and we told AI that you're looking for
[17:11] an email address so based on the queer
[17:13] that was coming in it was able to to
[17:15] define the email address as Nate herk
[17:17] similarly for this second part where we
[17:20] were doing from AI subject it was able
[17:22] to make a subject based on the query
[17:23] which is what's up and then down here as
[17:25] you can see the email body is it's an
[17:27] HTML so it looks a little weird here but
[17:29] it's saying hi Nate I hope you're doing
[17:30] well I was wondering what's up with you
[17:31] these days also I'm curious to know
[17:33] what's your favorite color looking
[17:34] forward to your
[17:35] reply so that's how the from AI function
[17:38] can really really speed up the process
[17:40] of creating these agents giving them
[17:41] tools hooking them up really easily
[17:43] because we don't have to go through
[17:44] different logic to actually pull out
[17:45] from a query what is the two what is the
[17:47] subject what's the message we can put it
[17:49] right in here and the AI is going to do
[17:51] all that for us and I just absolutely
[17:53] love this function okay setting a new
[17:55] query in here mark my email from Nate
[17:57] herkelman as unread there there's the
[17:59] query let's send that over and we'll see
[18:00] what happens and then we'll take a look
[18:02] at what's going on Within These tools so
[18:05] if you remember it has to get emails
[18:06] first because in the mark unread tool
[18:09] it's asking for a message ID of which
[18:11] one we need to go in there and Mark is
[18:12] unread so first thing it needs to do is
[18:14] go into get emails we're looking for
[18:16] sender of Nate herkelman and in this
[18:17] this thing we can say a sender is either
[18:19] the name that comes through in Gmail or
[18:21] it's the actual email address so in this
[18:23] case Nate herkelman works it could have
[18:24] also been up at digital gmail.com and it
[18:26] would have worked the same anyways we're
[18:28] grabbing one email from Nate herkelman
[18:30] which is the most recent one and then
[18:32] we're grabbing that message ID which is
[18:33] right here and then in the mark unread
[18:36] tool all we have to do is say hey you're
[18:38] going to be looking for the response and
[18:40] then you're going to be looking for a
[18:41] message ID which it grabs right here and
[18:43] so as you can see it went ahead and
[18:44] marked this one as unread this one is
[18:46] marked as un red but it's just the one
[18:47] that we just sent to ourselves where we
[18:49] said you know um what's your favorite
[18:50] color but this is the one that we
[18:52] previously had clicked on in the demo we
[18:54] made it high priority but now it just
[18:55] marked it as unread so the tool worked
[18:58] so exact same thing with the calendar
[18:59] agent it's being triggered by the
[19:01] personal assistant it has access to
[19:02] these five tools and then we're
[19:04] responding with either success or try
[19:05] again or success is the output of the
[19:07] calendar agent and then try again is
[19:09] just basically saying an error has
[19:10] occurred please try again once again The
[19:13] Prompt for this guy is super super
[19:14] simple which is just awesome your
[19:15] calendar assistant your responsibilities
[19:17] include creating getting and deleting
[19:18] events so then we Define the tools
[19:20] create event with an attendee when an
[19:22] event includes a participant create
[19:24] event for solo events get events to
[19:26] fetch events and then for delete and
[19:28] update we needed it to get Events first
[19:30] so that it could get the ID of the event
[19:31] to delete and then finally we gave it
[19:33] today's current date and time and then
[19:34] we said if a duration for an event isn't
[19:36] specified just assume that it's going to
[19:37] be 1 hour long so um if you're curious
[19:41] why there's one for create event and one
[19:43] for create an event with attendee it's
[19:45] because there's a parameter in here
[19:46] called attendees so in here we don't
[19:48] have that filled out but in this one we
[19:50] do and so if you were to try to create
[19:52] an event in this node with no attendee
[19:54] and you left this blank the request just
[19:56] wouldn't go through so that's why we
[19:57] have two different ones and we just have
[19:59] to specify okay if you want to have an
[20:01] event with someone invited then you're
[20:02] going to use this one otherwise you'll
[20:04] just use the basic create event function
[20:06] and so pretty similar logic with like
[20:08] deleting an updating event as the same
[20:10] thing with our um replying to emails and
[20:13] labeling emails and the other agent
[20:14] because you have to get the ID of the
[20:16] event to actually update it or delete it
[20:18] so we're going to do a quick example
[20:19] we're just going to ask it to delete an
[20:21] event so we'll come in here hit test
[20:23] workflow so our telegram trigger is
[20:24] listening for us and then we're going to
[20:25] say could you please delete the team
[20:27] sync tonight at 700 p.m. so we'll send
[20:29] that off it should be hitting the
[20:31] calendar agent and then it's going to
[20:32] grab that event get the ID and then it's
[20:34] going to delete it we can watch this
[20:36] happen probably in real time right down
[20:38] here Boom the team sync was just deleted
[20:40] and then the agent responded team Sync
[20:42] has been cancelled so that's how that
[20:45] works okay so now let's take a look at
[20:47] our contact agent this one's a lot
[20:48] simpler it just has the option to get
[20:50] contacts or add or update contacts the
[20:53] assistant prompt for this guy is your
[20:55] contact management assistant your
[20:56] responsibilities include looking up
[20:58] contacts adding new ones or updating
[21:00] them and then we Define the tools um as
[21:02] you can see retrieve contacts or add or
[21:04] update so let's do an example of this
[21:06] real quick so telegram's listening for
[21:08] us and I'm not going to just have it get
[21:09] contacts because it's been doing that
[21:11] for all the demos what we're going to do
[21:12] is we're going to change Michael Scott's
[21:13] email so can you please change Michael
[21:16] Scott's email to Michael
[21:18] dundermifflin.com send that off it's
[21:21] going to go to the contact agent of
[21:22] course and then we should see an air
[21:24] table right over here Michael Scott's
[21:26] emailed boom it just got popped and
[21:28] changed to Michael dundermifflin.com
[21:30] rather than Michael Scott
[21:31] dundermifflin.com so that's how you can
[21:33] really quickly update contacts and then
[21:35] obviously pull them back using that that
[21:37] contact agent and then the final agent
[21:40] of course is the content creator agent
[21:42] so let's pop into this system prompt
[21:44] here all we were saying is you are a
[21:45] skilled AI blog writer specializing in
[21:47] engaging well structured informative
[21:49] content you have one tool which is
[21:50] tavali and you're just going to use this
[21:51] to search the web about the requested
[21:53] topic for the blog post um and then we
[21:55] just gave it some blog requirements like
[21:56] formatting it as HTML we told to keep
[21:59] the links that it's getting from tavali
[22:00] so that the users can click into the
[22:02] links in the actual blog if they want to
[22:05] and obviously right now the use case has
[22:06] been write a blog and then um send it as
[22:08] an email but obviously you could hook
[22:10] this up to different social medias if
[22:11] you wanted to sort of automate that
[22:13] process or since you know we've already
[22:15] seen that integration with air table or
[22:16] some other sort of database you could um
[22:19] just be pushing content constantly into
[22:21] a database that you could then go
[22:23] manually post if you want or use that to
[22:25] plug into something else so real quick
[22:26] I'm going to load up an execution of the
[22:28] one that we had this agent WR for NVIDIA
[22:31] as you can see it went to tavali which
[22:32] is the tool and what we did here is
[22:34] we're sending over a request to tavali a
[22:36] post request in this Json body what
[22:38] we're doing is we're able to use a
[22:40] placeholder for any data that the model
[22:41] needs to fill in so similar to the from
[22:44] AI function except for rather than doing
[22:45] a from function we're just putting in a
[22:47] placeholder so right here you can see
[22:48] the placeholder for the query that we're
[22:50] searching tabl for is search term and
[22:52] that has two curly braces around it and
[22:54] then down here we're defining the
[22:56] placeholder name is search term the
[22:57] description is what the user has
[22:59] requested to write a blog about and that
[23:00] is a string variable type so when this
[23:03] request actually gets sent over to
[23:05] tavali in the body parameters they're
[23:07] filling in search term with probably
[23:08] Nvidia or actually sorry not Nvidia deep
[23:11] seek because that's the one that we
[23:12] asked it to write about so search term
[23:13] deep seek AI features benefits
[23:15] applications in modern technology
[23:18] sectors so these placeholders are
[23:19] working exactly the same as the from AI
[23:21] functions so while I was editing this
[23:23] video I realized that I never actually
[23:25] formally signed off the video I just
[23:27] kind of stopped recording so this is me
[23:29] signing off um that's going to be it for
[23:31] this one thanks guys so much for
[23:32] watching if you enjoy this one if you
[23:34] liked it then please drop me a like
[23:36] definitely helps me out a lot and let me
[23:38] know in the comments what else you want
[23:39] to see but as always appreciate you guys
[23:41] making it to the end of this one I'll
[23:42] see you guys in the next video thanks