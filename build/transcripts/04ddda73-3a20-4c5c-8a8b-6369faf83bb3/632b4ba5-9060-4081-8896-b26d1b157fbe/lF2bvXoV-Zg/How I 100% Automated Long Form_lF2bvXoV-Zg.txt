Video Title: How I 100% Automated Long Form Content with n8n (free template)
Video ID: lF2bvXoV-Zg
URL: https://www.youtube.com/watch?v=lF2bvXoV-Zg
View Count: 70,116

[00:00] Okay, so I'm going to go ahead and hit
[00:01] test workflow. And we're going to see
[00:02] that we're hitting a Google sheet with
[00:03] our ideas. And now we're hitting an
[00:05] intro and outro agent. So this one's
[00:07] basically creating an introduction and
[00:09] an outro. And then we're going to hit a
[00:10] ranker agent that's actually going to be
[00:12] taking the initial idea and it's going
[00:14] to be creating that top 10 ranking list
[00:16] as well as the image prompts for the
[00:19] video. So what's really cool is we're
[00:20] going to be using an API right here
[00:21] called JSON to video. And if you notice
[00:23] in this workflow, we're not hitting any
[00:25] sort of other thirdparty API to turn our
[00:28] text into images. We're just hitting
[00:29] JSON to video in order to turn our text
[00:32] into images and also render everything
[00:34] together with a voice over and
[00:35] everything like that. So, I'll dive into
[00:37] what that looks like. And this basically
[00:39] takes a few minutes to render. So, while
[00:40] we're waiting for that, let's head over
[00:41] to the channel I just spun up and take a
[00:43] look at a previous example. So, here is
[00:45] my new YouTube channel, uh, Top 10
[00:47] Rankings. And here we have top 10 cities
[00:48] in Europe. So, let's take a look.
[00:55] Welcome to our thrilling top 10
[00:57] countdown of the most incredible cities
[00:59] in Europe. From historic wonders to
[01:01] modern marvels, get ready to explore the
[01:04] unique charms that make these
[01:05] destinations must visits. Whether you're
[01:08] a history buff or a culture enthusiast,
[01:10] this list has something for
[01:13] [Music]
[01:16] everyone. Starting off our list at
[01:18] number 10, it's the scenic city of
[01:19] Ljubljana in Slovenia. Known for its
[01:22] picturesque architecture and green
[01:24] spaces, Ljubljana is a hidden gem that
[01:27] offers a cozy, inviting
[01:32] atmosphere. Coming in at number nine, we
[01:34] have the vibrant city of Lisbon in
[01:36] Portugal. So, you get the idea, right?
[01:38] Let's let's skip ahead to number seven
[01:39] is Vienna, Austria. Number six is Italy.
[01:42] This is a really cool picture. Rome
[01:44] offers a journey through centuries of
[01:46] and obviously all of the images are AI
[01:47] generated. Number five, we have
[01:49] Amsterdam. Number four, we have
[01:50] Barcelona. Paris comes in at number
[01:52] three. Zurich is coming in at number
[01:53] two. And number one is London. So, as
[01:56] you can see, they all have different
[01:57] images. They all have relevant
[01:58] voiceovers. And then they all have a
[02:00] little blurb at the bottom of what the
[02:02] city actually is. And then I'll just
[02:03] show the outro real quick.
[02:06] And there you have it, the top 10
[02:08] European cities that delight and inspire
[02:10] travelers worldwide. What was your
[02:12] favorite city on the list? Let us know
[02:15] in the comments. Thanks for joining us
[02:17] on this journey through Europe.
[02:19] [Music]
[02:21] Cool. So, that video definitely earned a
[02:22] like from me. Anyways, back in the
[02:24] workflow, you can see it's finished.
[02:25] It's generated. It has been downloaded,
[02:27] and now it's publishing to YouTube. And
[02:28] then we'll go ahead and check the actual
[02:30] Google sheet where our ideas are coming
[02:32] from. So, there we go. Workflow just
[02:33] finished up. And let's hop into our
[02:35] Google sheet where you can see this is
[02:36] the first one we just looked at with
[02:38] cities in Europe. And now we have
[02:39] classic movie characters which has been
[02:41] created. It has been published as
[02:43] unlisted. And we have a video URL. So,
[02:46] let's head over to YouTube and make sure
[02:47] it's there. So, here's my channel. We
[02:48] can see that this video is being
[02:49] uploaded. If I click into it, we can see
[02:51] we already have a title and a
[02:52] description. And I'm going to click on
[02:54] the YouTube link so we can view
[02:56] [Applause]
[02:58] it. Classic movie
[03:00] characters. Welcome to our captivating
[03:03] countdown of the top 10 classic movie
[03:05] characters. From iconic heroes to
[03:07] unforgettable villains, these characters
[03:09] have transcended time and left an
[03:11] indelible mark on cinema history. Get
[03:14] ready to relive the magic as we unveil
[03:16] the legends who have shaped the silver
[03:18] [Music]
[03:21] screen. At number 10, we have the
[03:23] unforgettable Marty McFly from Back to
[03:26] the Future. This time traveling teenager
[03:28] captures our hearts with his adventurous
[03:30] spirit and clever problem solving
[03:32] skills, making him a beloved Okay, I'm
[03:34] going to go ahead and just skim through
[03:35] to see the other rankings.
[03:38] At number five, we have Indiana Jones,
[03:41] the adventurous archaeologist from the
[03:43] Indiana Jones series. Number three is
[03:45] Dorothy Gail from the Wizard of Oz.
[03:48] Cool. And of course, who do we have at
[03:50] number one?
[03:53] Topping our list at number one is none
[03:55] other than Forest Gump from Forest Gump.
[03:57] His endearing simplicity and profound
[03:59] impact on the lives of those around him
[04:01] make him an unforgettable icon of
[04:03] cinema.
[04:06] And there we have it. The most
[04:08] unforgettable classic movie characters
[04:10] that have captivated audiences for
[04:12] generations. So, as you can see, we have
[04:14] a different intro video. We have a
[04:15] different outro video. We have every
[04:17] single, you know, actual ranking has a
[04:19] picture. And then we have our titles at
[04:21] the bottom. Okay. So, now we've seen a
[04:23] live demo. We're going to hop into sort
[04:25] of analyzing this workflow and seeing
[04:26] what's going on within each node. But I
[04:28] wanted to mention if you want to
[04:29] download this workflow for free as well
[04:31] as this Google Sheets template that
[04:33] you're going to need, um you can get it
[04:35] all for free by joining my free school
[04:36] community. So the link for that will be
[04:37] down in the description. All you got to
[04:39] do is join the community. You'll come in
[04:40] here and search for YouTube resources
[04:42] and then you'll click on the post
[04:43] associated with this video. And then
[04:45] you'll have the JSON to download right
[04:46] here as well as the Google sheet
[04:48] template. And then it's just a matter of
[04:50] importing that JSON file into your nitn
[04:52] hooking up your Google sheet template
[04:54] and then plugging in your different
[04:55] credentials for um you know open router
[04:57] or for JSON to video and then of course
[04:59] your own YouTube channel. Okay, cool. So
[05:01] before we actually start digging into
[05:03] this workflow, I just wanted to talk
[05:04] about this Google sheet and what it's
[05:06] doing. So the idea here is that it's
[05:08] pulling in a subject and it's only going
[05:10] to do that if the creation status is set
[05:12] to to-do because we don't want to do
[05:14] that for created videos already. So then
[05:15] obviously it's just going to use this
[05:16] subject to create the intro, the outro,
[05:19] the rankings, and all of the image
[05:20] prompts we need. So what I'm going to do
[05:21] real quick is show you guys the idea
[05:23] generator. So you can see that this
[05:24] system can really be completely
[05:26] hands-off. I'm just going to duplicate
[05:27] this tab so we can run this idea
[05:29] generation thing up here. I'm just going
[05:31] to move the manual trigger up here so we
[05:33] can trigger this bad boy. I'm going to
[05:35] get rid of the to-do right here. And
[05:37] what this is going to do is it's going
[05:38] to basically create 10 new rows in here.
[05:42] Um, so it's going to create 10 and then
[05:44] it's going to loop through and add them
[05:45] to the sheet. So, as you can see, there
[05:46] goes the first one, there goes the
[05:47] second one. If we come in here, we can
[05:49] see that they're being populated as we
[05:50] speak. So, we've got cities in the US,
[05:52] iconic movie quotes, breakfast meals,
[05:54] famous landmarks, classic literature,
[05:56] and they're filling in with to-do. So,
[05:58] now the second part of this workflow can
[06:00] actually pick these up as subjects.
[06:03] Okay, cool. So, now that that's out of
[06:04] the way, let's start to dive into what's
[06:05] going on. Obviously, right now we're
[06:07] doing a manual trigger, but what you
[06:08] could do is have both of these be
[06:10] scheduled. So every day um you know
[06:12] we're going to create 10 new records and
[06:13] then every day we're going to run this
[06:14] thing 10 times something like that. So
[06:16] the first node that's going on here is
[06:18] we're accessing our Google sheet. So
[06:20] obviously we're connecting the document
[06:21] name which is top 10 videos in your
[06:23] case. Make sure that you have this
[06:24] linked to the correct sheet and we're
[06:26] pulling from sheet number one. It's the
[06:27] only sheet on the template. And then
[06:29] what we're doing is we're creating a
[06:30] filter. So we only want to look for
[06:32] videos if the creation status column is
[06:34] set to to-do as we talked about earlier.
[06:37] So there may be more than just one that
[06:39] is set to to-do. In this case, we have
[06:40] 10. And so, what you have to do is just
[06:42] add an option down here that says return
[06:44] only the first matching row. And then
[06:46] you can see over here, we're only going
[06:47] to get one row, which in this case was
[06:49] classic movie characters. So, from
[06:51] there, we're moving on to an intro and
[06:52] outro agent. What we're doing here is
[06:55] every agent has a user message and a
[06:57] system message. The user message is a
[06:59] bit more dynamic. It's like every time
[07:00] you're talking to ChatBT, you're sending
[07:02] a user message, but behind the scenes in
[07:04] chatbt, it's got a system message that's
[07:06] trained it on how to act and what its
[07:08] job is. So, in the user message, all we
[07:10] did was I said subject colon and then I
[07:12] dragged in the subject from the Google
[07:14] sheet row so it knows what subject to
[07:16] make this whole video about. And then in
[07:18] the actual system message, what I did,
[07:20] I'm not going to read this entire thing,
[07:21] but keep in mind if you download this
[07:23] template, you'll have access to the
[07:24] prompts. But I basically told it, you
[07:26] are a creative assistant that helps
[07:27] generate engaging content for top 10
[07:29] ranking videos on various topics. Your
[07:31] job is to take a subject and create two
[07:33] parts of the script, an intro and an
[07:35] outro. And each part should include a
[07:37] voiceover script as well as a
[07:38] corresponding visual image prompt. So,
[07:40] as you can see here, we're telling it to
[07:42] output four things. An intro voiceover
[07:44] text, and then we define what that was
[07:45] in a quick example, an intro image
[07:48] prompt, an outro voice over text, and an
[07:50] outro image prompt. So, all of these
[07:52] things are lining up. And actually, what
[07:53] I'll do is I'll throw all the prompts in
[07:55] this workflow into a PDF, and I'll also
[07:57] put that in my free school community.
[07:58] So, what's really important here is that
[07:59] we turned this button on that says
[08:01] require specific output format because
[08:03] as you can see on this right hand side,
[08:05] it's outputting four different fields
[08:07] super cleanly. We have our intro text,
[08:09] our intro image, our outro text, and our
[08:11] outro image. And we were able to do this
[08:13] because we used a specific output
[08:15] format, which is down here. It's a
[08:17] structured output parser. And basically,
[08:20] we just gave it the four JSON fields
[08:22] that we want it to return. Otherwise,
[08:24] they would have all been lumped into one
[08:25] field called output, and it would have
[08:27] been tough to split them up to send them
[08:29] off to JSON to video. Cool. So, at this
[08:31] point, we have our intro and outro
[08:33] elements thanks to this agent. Now,
[08:34] we're just moving on to a different
[08:35] agent to create the rankings. And the
[08:37] reason I didn't just lump this all into
[08:39] one agent is because that's a lot of
[08:41] responsibility for one agent. You want
[08:43] to see if you can sort of segment them
[08:44] out as much as possible just to get more
[08:46] consistent and high quality results. So
[08:49] anyways, both of these agents, by the
[08:50] way, I have hooked up to Open Router and
[08:52] they're both hooked up to GPT40. Whereas
[08:55] up here in the idea generation, I did
[08:56] open router and I hooked up to 40 Mini
[08:59] just because we don't need as much power
[09:00] to generate ideas compared to creating
[09:02] image prompts and dealing with making a
[09:04] top 10 ranking. As you can see, this
[09:06] one's outputting 10 different rankings,
[09:08] but for each of the rankings, it needs a
[09:09] text, an image prompt, and sort of a
[09:11] title. So, let's dive into how this
[09:13] works. So, for the user message, I did
[09:15] the exact same thing. I just gave it
[09:17] subject colon and then I dragged in the
[09:19] subject from the Google sheet. So, it's
[09:20] looking at classic movie characters. So,
[09:22] now let's take a look at the system
[09:23] prompt for this puppy. Open this up and
[09:25] we can see the overview is kind of
[09:27] similar. You are a creative assistant
[09:29] for a top 10 rankings video channel.
[09:31] Your task is to generate a full top 10
[09:32] countdown for a given subject. Your
[09:35] output must include 10 ranked items
[09:37] starting from number 10 and counting
[09:38] down to number one. So, same thing we
[09:40] laid out for each, you know, item, what
[09:42] do you need to output? The first thing
[09:43] is a voiceover text. So I gave it a
[09:45] little explanation as well as an
[09:46] example. Then we said obviously an image
[09:48] prompt that has to line up with the
[09:50] voiceover text. And then finally
[09:52] something called lower third text which
[09:54] is just you know when number eight pops
[09:56] up or you know number one forest Gump.
[09:58] It just has to say down there Forest
[09:59] Gump. And then we just gave it some
[10:01] important rules like starting with the
[10:02] number 10 counting down to number one.
[10:04] Making sure that the voiceover text is
[10:06] concise not anything longer than two to
[10:07] three sentences or the video is going to
[10:09] be way too long. And then I said to use
[10:10] a variety of language so that each entry
[10:12] is kind of fresh and not repetitive. And
[10:15] then same thing, we had to require a
[10:16] specific output format. This one's a
[10:18] little bit more complex than the
[10:19] previous one, but not too bad. You know,
[10:21] I basically told chat, "Hey, this is
[10:22] what my agent's doing. Help me write a
[10:24] JSON structured output to give it." And
[10:28] threw it in there. And now you can see
[10:29] every one of the entries are coming
[10:31] through the same. And so this is super
[10:33] helpful because now we have a really
[10:35] clean set of data to drag into our API
[10:38] call to JSON to video. Okay, so now
[10:40] let's talk about this actual API call
[10:42] that we're making to JSON to video. So
[10:45] this is JSON to video. You can get in
[10:46] here and get your free API key to get
[10:48] started. And you can also use the link
[10:50] in the description. And as you can see,
[10:51] it's a video creation API that's going
[10:52] to boost your video automation. And
[10:54] what's really cool about it is that
[10:55] we're basically just going to send it
[10:57] all the information and it's going to
[10:58] compile that video together. So, those
[11:00] of you guys that watched a previous
[11:01] video I made where I automated faceless
[11:03] shorts, as you can see right here, we
[11:05] had to turn our text into images and
[11:07] then we had to turn those images into
[11:08] videos and then we could finally render
[11:10] them all together. But what we're doing
[11:12] in this workflow is basically just
[11:14] sending in a ton of text and it's going
[11:16] to take care of the image generation and
[11:17] also the narration. In this previous
[11:19] one, we had to use 11 Labs to either
[11:20] create a narration or an audio and then
[11:22] stitch it all together with this API
[11:24] call. But in this video, JSON video is
[11:27] basically taking care of all of that.
[11:28] So, it's super cool. So anyways, the
[11:30] first thing that you're going to do is
[11:30] you'll get your API key from JSON to
[11:32] video and then you set that up in here
[11:34] as a generic credential type a header
[11:36] off and basically you're going to put in
[11:38] your API key and you're going to name
[11:40] this value right here x-appi- key and
[11:43] that's how you authenticate yourself
[11:45] with JSON the video and if you go ahead
[11:47] and save your credentials a header off
[11:48] we can use this later without having to
[11:50] go back and grab our API key. So from
[11:52] there we're passing over a body request.
[11:54] So, make sure that you're doing a post
[11:55] method. And when I open this up, it may
[11:58] look really intimidating, but we're
[11:59] going to explain. It's not too bad. You
[12:00] just have to drag in some variables. So,
[12:02] here's what this request looks like. The
[12:04] only reason it's so long is because we
[12:05] had to send over 10 rankings. But, let's
[12:07] start from the top and work our way
[12:09] down. So, obviously, we're asking JSON
[12:11] the video if it can stitch everything
[12:12] together for us in one video. And we're
[12:15] accessing a specific template, which in
[12:17] this case, I put the template ID. And
[12:18] this is already predefined for top 10
[12:20] ranking videos. So, it makes our job
[12:22] really easy. And now we're basically
[12:23] just defining the variables that are
[12:25] going into this template. So the first
[12:27] thing that we need to define is what's
[12:28] the title of this video. That is what
[12:30] shows up right here. In this case,
[12:32] classic movie characters. And so we just
[12:34] have to drag that from our Google sheet
[12:36] that started this whole process right
[12:37] here. So I just dragged subject right
[12:39] into here within the quotes for the
[12:42] title of the video. And then we have a
[12:43] few things to configure for the actual
[12:45] narration. The first one is the voice
[12:46] model. In this case, we're using 11
[12:48] Labs. Then we have voice.connection
[12:50] connection ID, which is basically we're
[12:52] giving JSON to video our API key for 11
[12:55] Labs so that we can access our credits.
[12:57] You don't have to configure your own
[12:58] connection. You could just use JSON to
[13:00] videos connection, but then you're just
[13:02] going to get charged more credits for
[13:03] that. And so if you want to connect your
[13:04] own account, what you'll do is you'll
[13:06] come into JSON to video. You'll go to
[13:08] connections. You will create a new one
[13:10] if this one thing loads up. So this is
[13:11] my connection ID. I just named it my 11
[13:13] Labs connection. And so when you're
[13:15] adding this, this is where you'll give
[13:16] your 11 Labs API key. And also, if you
[13:18] don't have an 11 Labs account, you can
[13:20] sign up with the link down in the
[13:21] description. You'll make an account.
[13:23] You'll come down here and then in your
[13:25] profile, you can click on API keys. And
[13:26] then this is where you can create a new
[13:28] one and copy it over to JSON the video.
[13:30] Okay. So, because we've already set up
[13:32] our connection, I can just put it right
[13:34] there. So, my 11 Labs connection. And
[13:36] the last thing we need to do is set up
[13:37] the actual voice ID. So, when we're in
[13:40] 11 Labs, we can go over here to the
[13:42] lefth hand side and click on voices. And
[13:44] we have a ton of different voices to
[13:45] choose from. And what you'll notice is
[13:46] that each one has a voice ID. So let's
[13:48] say I think for this video I was using
[13:50] Rachel, but if we went to Archer and we
[13:52] clicked on view down here there's a
[13:54] button for ID and we would just copy
[13:56] this ID right into this section between
[13:59] the quotes. And then this is just
[14:01] telling JSON the video and 11 Labs which
[14:03] voice do you want to use for your video.
[14:05] And then we have an image model. So
[14:07] obviously we're passing over a bunch of
[14:08] text and it needs to use AI to create
[14:10] those images. So right now I'm going
[14:11] with Flux Pro just for the sake of this
[14:13] demo. But if you used Flux Chnel, um,
[14:16] which I will put somewhere in the setup
[14:18] guide, that one won't cost you extra
[14:20] credits, but Flux-Pro will cost you
[14:22] extra credits. I believe it is 20
[14:24] credits per video. And at the end of
[14:25] this video, I'll do a little section
[14:27] about the pricing of everything that
[14:28] goes into this. Okay, cool. So, now
[14:30] we're feeding in the intro and the
[14:32] outro. And this comes in the form of an
[14:33] image prompt and a voiceover text. So,
[14:36] I'm going to open up the agent that we
[14:38] had that created these four elements,
[14:40] which were the intro and outro text and
[14:42] image prompts. And all we had to do is
[14:44] drag them in. So, this first one right
[14:46] here, let me actually make this a little
[14:47] bit bigger so we can see the first one
[14:49] that we needed to drag in was the intro
[14:51] image prompt. So, I grabbed that from
[14:53] right here and I put it between the two
[14:55] quotation marks. And also, if you guys
[14:57] just download this template, you won't
[14:58] have to configure any of this. It'll all
[14:59] be set up. But anyways, just explaining
[15:01] you how I did this. Then, I did the
[15:03] exact same thing with the voiceover
[15:04] text. And then the exact same thing for
[15:06] the two outro elements. And then what
[15:08] we're doing is we're setting up the 10
[15:09] rankings. So I'm going to close out of
[15:11] the intro and outro agent, open up the
[15:13] ranker, and now we can see we have at
[15:15] number 10 we have Marty McFluff or Marty
[15:18] McFly. And then at number nine, we have
[15:20] Holly Gallet. I don't know who any of
[15:22] these people are. Anyways, number eight
[15:24] is James Bond. I know who he is. So we
[15:26] basically just dragged in the voiceover
[15:28] text, the image prompt, and the lower
[15:30] third text. And so then at this point
[15:32] once we did that for all 10 rankings we
[15:34] have all the information that JSON to
[15:36] video needs in order to you know
[15:38] basically render it all together. And
[15:40] when it does that what happens is we get
[15:42] this message over here that says success
[15:45] is true. We get a project ID and we get
[15:47] a timestamp. And so obviously the video
[15:49] is not ready yet. It takes a few minutes
[15:51] to render. If I go into my JSON of video
[15:53] and I go to render logs, you can see I
[15:55] had a few errors down here, but on
[15:57] average they're taking 180 seconds to
[16:00] actually render and they're coming
[16:01] through between three maybe a little
[16:04] over 3 minutes as far as the actual
[16:05] duration of the video. Okay, so
[16:07] basically the next step is to wait for
[16:08] the video to render and then we want to
[16:10] pull it back. And what you can do is
[16:12] actually, you know, this is a cool
[16:13] trick. If you go here, you can click
[16:14] through to the next node or the previous
[16:16] node. So anyways, the next node is a
[16:18] wait and we're waiting about 150
[16:20] seconds. um probably could increase
[16:22] that, but it's okay because what we're
[16:24] doing is we're using a basically a
[16:26] technique called polling as you can see
[16:27] down here. So, this just means if we
[16:29] make the request and the video isn't
[16:30] done yet, it's going to wait over here
[16:32] for 10 seconds. And in this first live
[16:34] demo, you can see it had to do this
[16:35] three times. And then it's going to
[16:36] check again. If we still don't have the
[16:38] video, we're going to come back, wait 10
[16:39] seconds, and continuously check until
[16:41] we're done. And I'll explain what's
[16:43] going on in this switch logic in a sec.
[16:45] But let's look at the actual get video
[16:47] request where once again we are using
[16:49] our JSON to video credential. So that's
[16:51] why it's great if in the previous step
[16:52] you already saved it as a header off.
[16:54] We're using a get method to this
[16:56] endpoint. And then all we have to do is
[16:57] pass in as a query parameter the actual
[16:59] project that we're looking for. So as
[17:01] you can see this project is O2J. If I
[17:03] come into here we have O2J as our most
[17:06] recent project. And how we're getting
[17:07] that is we're pulling it from the
[17:09] previous node that actually generated
[17:11] the video. So all the way down here,
[17:13] it's not here right now because it was
[17:15] pulling and it lost it basically. But as
[17:17] you can see, it came from the generate
[17:19] video node and we're just pulling in the
[17:21] project which is right here. And then it
[17:22] finally comes through over here as
[17:24] status equals done. But as you can see
[17:26] there were four times we tried. The
[17:27] first time the status was running. The
[17:29] second time the status was running. The
[17:31] third time the status was running. And
[17:33] then finally it was done. So then that's
[17:35] how it knew to pass on because we set up
[17:37] this switch logic right here which
[17:39] basically just says if the status equals
[17:41] done, you're going to go down the done
[17:42] branch. If the status equals error,
[17:45] you're going to go down the error
[17:46] branch. And if the status equals running
[17:48] or preparing, because according to JSON
[17:50] the video's documentation, you may get
[17:52] either of those values. So if it equals
[17:54] running or preparing, in this case it
[17:56] equal running three times, you're going
[17:58] to go down this way. So as you can see,
[17:59] we basically have different logic
[18:00] defined based on the status of the
[18:03] video. And so real quick, all I'm doing
[18:04] if it does error is I'm just updating
[18:06] the row in the sheet and I'm just
[18:07] updating the final URL section. So right
[18:10] here where we're giving the URL, if it
[18:12] errors, you're just going to get a
[18:13] message here that says error. So that's
[18:15] all I set up right now. But more
[18:17] interesting is the upload video section
[18:19] when the video is done. So what we're
[18:21] going to do first is we're just
[18:22] basically going to update the sheet and
[18:23] we're going to say that, you know, we're
[18:25] changing the created status from to-do
[18:27] to created. And we're just able to do
[18:30] that by, you know, we're we're using the
[18:32] operation of update row in a sheet.
[18:34] We're choosing our document. We're
[18:35] choosing our sheet. And then we're
[18:37] mapping on the column of subject. And so
[18:40] what we do is we go all the way down to
[18:42] the trigger that started this workflow.
[18:44] We dragged in the subject of the the
[18:47] video. And basically what that's saying
[18:48] is, okay, I'm going to update any row
[18:51] where subject equals classic movie
[18:53] characters. So obviously you want to be
[18:54] a little careful. And that's something I
[18:56] was thinking about working in up here is
[18:57] making sure like maybe we're going to do
[18:59] a check so we don't duplicate any
[19:00] subjects. But anyways, this is just a
[19:02] V1. So then it's going to update that
[19:04] row. It's going to change the creation
[19:06] status column to created. And then it's
[19:09] going to upload the video URL in the
[19:12] video URL column. And so that's how this
[19:15] gets changed as well as this. But the
[19:16] posting status at this point would still
[19:18] be to-do because we have that coming in
[19:20] later over here. Anyways, what's next is
[19:22] we have to download the video as binary
[19:24] data so we can actually pass it into
[19:26] YouTube. So, what we have is we were
[19:28] given a video URL. And so, if I come
[19:30] into here and we click on the video URL,
[19:32] you can see that we can access
[19:35] [Applause]
[19:36] this, right? So, there's the full screen
[19:38] video for cities in Europe. As you can
[19:40] see, it's the exact same thing that we
[19:41] looked at earlier with all these
[19:42] different cities and explanations, but
[19:44] we only have the link at this point. So,
[19:46] what we have to do is we just make a
[19:48] standard get request. We drag in the URL
[19:50] of the video because it's a public URL.
[19:53] We don't have to authenticate every
[19:54] anything at all. And then when we test
[19:56] that step, we're getting it over here in
[19:58] our NAN as binary data. It's going to
[20:00] take a little bit to load up because
[20:01] it's like a 3 and a half minute video.
[20:04] Sorry for that loud noise. But as you
[20:05] can see, we have the full video now.
[20:07] This one's classic movie characters
[20:08] obviously. So we have our classic movie
[20:10] characters video. And now that we have
[20:12] it here in Nadn as binary data, we're
[20:15] able to pass it into YouTube. So here is
[20:17] the YouTube node. If you're having
[20:19] trouble connecting to YouTube or Google
[20:20] Sheets, then I would definitely
[20:21] recommend checking out this video up
[20:22] here where I walk through, you know, how
[20:24] to set up your Google credentials.
[20:26] Essentially, you're just going to go to
[20:26] your Google Cloud Console. You'll come
[20:28] into your enabled APIs and services and
[20:30] make sure you have YouTube data v3
[20:33] enabled. And then you just have to set
[20:34] up like your OOTH consent screen. Make
[20:36] sure you have yourself as like a test
[20:38] user or that your app is published. Make
[20:40] sure you have a OOTH client ID set up.
[20:42] And then you'll get a client ID and a
[20:43] secret. Like I said, um the video I
[20:46] linked will walk through that in more
[20:47] detail. Anyways, all we're doing now is
[20:49] we're setting first of all the title of
[20:51] the video. So, I just made it top 10
[20:52] colon and then I dragged in the subject
[20:54] that we've been pulling in this whole
[20:55] time from the original Google sheet. I
[20:58] set up my region code category. The
[21:00] input binary field by default. You're
[21:02] just going to want to leave this as data
[21:04] because as you can see right here, this
[21:05] is the binary data that we're working
[21:06] with right over here in a field called
[21:08] binary. And if we click back into it,
[21:10] it's it's in a field called data. So,
[21:12] that's why we're pulling in data right
[21:13] here. And then I just did two more
[21:15] things. I added a description and I put
[21:17] it as unlisted rather than just a public
[21:19] video just so we can go in and manually
[21:21] check it if we want to. But the
[21:23] description just basically says here are
[21:25] our top 10 rankings of the subject. So
[21:27] classic movie characters. Do you agree
[21:29] with us? Let us know in the comments
[21:31] down below. If you go into the video,
[21:32] you can see that the description right
[21:34] here comes through exactly how we
[21:35] defined it. Cool. From there, we're
[21:37] pretty much done. All we had to do is we
[21:39] wanted to update that sheet once again
[21:41] and just say that the posting status is
[21:43] now unlisted rather than what would it
[21:45] be to do. So that's pretty much it. As
[21:47] you can see, these are the first two
[21:48] runs that we did. They got posted to our
[21:50] YouTube and now we have, you know, 10
[21:52] more that we could run through and we
[21:54] basically get updates on the status of
[21:56] all of them. Okay, so now let's talk
[21:57] about pricing. So with JSON a video you
[21:59] can get started for free and that's
[22:01] going to get you free access to all of
[22:03] the API features. 600 seconds of video
[22:05] rendering. So maybe two and a half to
[22:07] three of these videos. Um but you can
[22:10] only do movies up to 1 minute long. And
[22:11] then you also get access to the template
[22:13] editor where you could come in here and
[22:14] create your own custom templates. And
[22:15] then for the paid plans here's what
[22:17] you've got. You know different amounts
[22:18] of credits or different subscription
[22:19] options for you to get started. And like
[22:21] I said, you can either connect your own
[22:23] 11 Labs and, you know, pay your credits
[22:25] through there or if you use JSON to
[22:27] videos credentials to use 11 Labs, then
[22:30] you'll just be charged a little bit
[22:31] extra credits. And then also when you're
[22:33] thinking about the actual text image
[22:34] models, if you use Flux Snell or
[22:36] Freepick Classic, it won't charge you
[22:38] any extra credits. But if you use Flux
[22:39] Pro, it'll be 20 extra credits per
[22:41] image. Okay, so a couple things to keep
[22:43] in mind here. The first one is that
[22:44] we're basically just having AI create
[22:46] these rankings. What you could do is you
[22:48] could basically hook up some web search
[22:50] functionality in order to go do
[22:51] different types of videos where you're
[22:53] kind of research backing them. Also,
[22:55] these don't have to be long form videos.
[22:56] You could do them as, you know, vertical
[22:58] Tik Tok shorts, YouTube shorts,
[23:00] Instagram reels, and they could be top
[23:01] 10, they could be top five. You know,
[23:03] you can really get in here and customize
[23:04] exactly what you're looking to do. But
[23:06] anyways, this workflow will be available
[23:07] to download for free, as well as the
[23:09] template you'll need for Google Sheets.
[23:11] You know, just make sure you're linking
[23:12] your Google Sheets to this workflow and
[23:14] all of these Google Sheets nodes. You've
[23:16] obviously got to link up your own open
[23:17] router account, your own JSON to video
[23:19] API key, and your own YouTube account.
[23:22] But that's going to be it for this one.
[23:23] There's so much more that we can do with
[23:24] JSON the video. So, if you guys
[23:25] appreciated this video and you want to
[23:27] see some more stuff, let me know what
[23:28] else you'd want to see with JSON the
[23:29] video. I definitely love to make some
[23:31] more content on it. As always, I
[23:32] appreciate you guys making it to the end
[23:33] of this one. If you enjoyed the video,
[23:35] please give it a like. Helps me out a
[23:36] ton. And I will see you guys in the next
[23:38] video. Thanks.