Video Title: Ultimate Beginner's Guide: 3 AI Workflows in 44 Minutes with n8n
Video ID: 06Beyp_iDL0
URL: https://www.youtube.com/watch?v=06Beyp_iDL0
View Count: 38,066

[00:00] today we're going to be looking at three
[00:01] simple AI workflows that you can build
[00:02] right now to get started learning naden
[00:04] we're going to walk through everything
[00:06] step by step including all of the
[00:07] credentials and the setups so let's take
[00:09] a look at the three workflows we're
[00:10] going to be building today all right the
[00:12] first one is going to be a rag Pipeline
[00:13] and chatbot and if you don't know what
[00:15] rag means don't worry we're going to
[00:16] explain it all but at a high level what
[00:18] we're doing is we're going to be using
[00:19] pine cone as a vector database if you
[00:21] don't know what a vector database is
[00:23] we'll break it down we're going to be
[00:24] using Google Drive we're going to be
[00:25] using Google Docs and then something
[00:27] called open router which lets us connect
[00:28] to a bunch of different AI models like
[00:30] open AI models or anthropics models the
[00:33] second workflow we're going to look at
[00:34] is a customer support workflow that's
[00:36] kind of going to be building off of the
[00:37] first one we just built because in the
[00:39] first workflow we're going to be putting
[00:40] data into a pine cone Vector database
[00:42] and in this one we're going to use that
[00:43] data in there in order to respond to
[00:46] customer support related emails so we'll
[00:48] already have had pine cone set up but
[00:49] we're going to set up our credentials
[00:50] for Gmail and then we're also going to
[00:52] be using an nadn AI agent as well as
[00:54] open router once again and then finally
[00:56] we're going to be doing LinkedIn content
[00:58] creation and in this one we'll be using
[01:00] an NAD AI agent and open router once
[01:02] again but we'll have two new credentials
[01:03] to set up the first one being tavali
[01:05] which is going to let us search the web
[01:07] and then the second one will be Google
[01:08] Sheets where we're going to store our
[01:10] content ideas pull them in and then have
[01:12] the content written back to that Google
[01:14] sheet so by the end of this video you're
[01:16] going to have three workflows set up and
[01:17] you're going to have a really good
[01:18] foundation to continue to learn more
[01:20] about nadn you'll already have gotten a
[01:22] lot of credentials set up and understand
[01:24] what goes into connecting to different
[01:25] Services one of the trickiest being
[01:27] Google so we'll walk through that step
[01:28] by step and then you'll have it conf
[01:29] figured and you'll be good and then from
[01:31] there you'll be able to continuously
[01:33] build on top of these three workflows
[01:34] that we're going to walk through
[01:35] together because there's really no such
[01:37] thing as a finished product in the space
[01:38] different AI models keep getting
[01:40] released and keep getting better there's
[01:41] always ways to improve your templates
[01:43] and the cool thing about building
[01:44] workflows in nadn is that you can make
[01:46] them super customized for exactly what
[01:48] you're looking for so if this sounds
[01:49] good to you let's hop into that first
[01:51] workflow okay so for this first workflow
[01:53] we're building a rag Pipeline and
[01:55] chatbot and so if that sounds like a
[01:56] bunch of gibbers to you let's quickly
[01:58] understand what rag is and what a vector
[02:00] database is so rag stands for retrieval
[02:03] augmented generation and in the simplest
[02:05] terms let's say you ask me a question
[02:07] and I don't actually know the answer I
[02:09] would just kind of Google it and then I
[02:11] would get the answer from my phone and
[02:12] then I would tell you the answer so in
[02:14] this case when we're building a rag
[02:16] chatbot we're going to be asking the
[02:17] chatbot questions and it's not going to
[02:19] know the answer so it's going to look
[02:20] inside our Vector database find the
[02:22] answer and then it's going to respond to
[02:24] us and so when we're combining the
[02:25] elements of rag with a vector database
[02:28] here's how it works so the first thing
[02:29] want to talk about is actually what is a
[02:31] vector database so essentially this is
[02:33] what a vector database would look like
[02:35] we're all familiar with like an X and Y
[02:37] AIS graph where you can plot points on
[02:39] there on a two-dimensional plane but a
[02:40] vector database is a multi-dimensional
[02:43] graph of points so in this case you can
[02:45] see this multi-dimensional space with
[02:47] all these different points or vectors
[02:49] and each Vector is placed based on the
[02:52] actual meaning of the word or words in
[02:54] the vector so over here you can see we
[02:56] have wolf dog and cat and they're placed
[02:58] similarly because the mean meaning of
[03:00] these words are all like animals whereas
[03:02] over here we have apple and banana which
[03:04] the meaning of the words are food more
[03:06] likely fruits and that's why they're
[03:07] placed over here together so when we're
[03:09] searching through the database we
[03:11] basically vectorize a question the same
[03:14] way we would vectorize any of these
[03:15] other points and in this case we were
[03:17] asking for a kitten and then that query
[03:19] gets placed over here near the other
[03:20] animals and then we're able to say okay
[03:22] well we have all these results now so
[03:23] what that looks like and what we'll see
[03:25] when we get into NN is we have a
[03:27] document that we want to vectorize we
[03:29] have to split the document up into
[03:30] chunks because we can't put like a 50
[03:32] page PDF as one chunk so it gets split
[03:34] up and then we're going to run it
[03:35] through something called an embeddings
[03:37] model which basically just turns text
[03:39] into numbers just as simple as that and
[03:41] as you can see in this case let's say we
[03:43] had a document about a company we have
[03:44] company data Finance data and marketing
[03:47] data and they all get placed differently
[03:49] because they mean different things and
[03:51] the the context of those chunks are
[03:54] different and then this visual down here
[03:55] is just kind of how an llm or in this
[03:57] case this agent takes our question turns
[04:00] it into its own question we vectorize
[04:02] that using the same embeddings model
[04:04] that we used up here to vectorize the
[04:05] original data and then because it gets
[04:07] placed here it just grabs back any
[04:10] vectors that are nearest maybe like the
[04:12] nearest four or five and then it brings
[04:14] it back in order to respond to us so
[04:16] don't want to dive too much into this
[04:17] don't want to over complicate it but
[04:19] hopefully this all makes sense cool so
[04:21] now that we understand that let's
[04:23] actually start building this workflow so
[04:25] what we're going to do here is we are
[04:26] going to click on ADD First Step because
[04:28] every workflow needs a trigger that
[04:30] basically starts the workflow so I'm
[04:32] going to type in Google Drive because
[04:35] what we're going to do is we are going
[04:36] to pull in a document from our Google
[04:38] Drive in order to vectorize it so I'm
[04:40] going to choose a trigger which is on
[04:41] changes involving a specific folder and
[04:43] what we have to do now is connect our
[04:45] account as you can see I'm already
[04:46] connected but what we're going to do is
[04:48] click on create new credential in order
[04:49] to connect our Google Drive account and
[04:52] what we have to do is go get a client ID
[04:54] in a secret so what we want to do is
[04:56] click on open docs which is going to
[04:57] bring us to NAD 's documents on how to
[04:59] set up this credential we have a
[05:01] prerequisite which is creating a Google
[05:03] Cloud account so I'm going to click on
[05:04] Google Cloud account and we're going to
[05:07] set up a new project okay so I just
[05:08] signed into a new account and I'm going
[05:10] to set up a whole project and walk
[05:11] through the credentials with you guys
[05:12] you'll click up here you'll probably
[05:14] have something up here that says like
[05:15] new project and then you'll click into
[05:17] new project all you have to do now is um
[05:20] name it and you you'll be able to start
[05:21] for free so don't worry about that yet
[05:22] so I'm just going to name this one demo
[05:24] and I'm going to create this new project
[05:26] and now up here in the top right you're
[05:27] going to see that it's kind of spinning
[05:29] up this project
[05:30] and then we'll move forward okay so it's
[05:32] already done and now I can select this
[05:34] project so now you can see up here I'm
[05:36] in my new project called demo I'm going
[05:38] to click on these three lines in the top
[05:41] left and what we're going to do first is
[05:42] go to apis and services and click on
[05:44] enabled apis and services and what we
[05:47] want to do is add the ones we need and
[05:48] so right now all I'm going to do is add
[05:51] Google
[05:52] Drive and you can see it's going to come
[05:54] up with Google Drive API and then all we
[05:56] have to do is really simply click enable
[05:59] and there we go I just enabled it so you
[06:00] can see here the status is enabled and
[06:02] now we have to set up something called
[06:03] our ooth consent screen which basically
[06:05] is just going to let NN know that Google
[06:09] Drive and edn are allowed to talk to
[06:11] each other and have permissions so right
[06:13] here I'm going to click on ooth consent
[06:14] screen we don't have one yet so I'm
[06:16] going to click on get started I'm going
[06:18] to give it a name so we're just going to
[06:19] call this one demo once again I'm going
[06:21] to add a support email I'm going to
[06:23] click on next because I'm not using a
[06:25] Google workspace account I'm just using
[06:27] a you know Nate herk 8@gmail.com
[06:29] I'm going to have to choose external I'm
[06:31] going to click on next for contact
[06:33] information I'm putting the same email
[06:34] as I used to create this whole project
[06:37] click on next and then agree to terms
[06:38] and then we're going to create that ooff
[06:41] consent screen okay so we're not done
[06:43] yet the next thing we want to do is we
[06:44] want to click on audience and we're
[06:46] going to add ourselves as a test user so
[06:48] we could also make the app published by
[06:50] publishing it right here but I'm just
[06:52] going to keep it in test and when we
[06:53] keep it in test mode we have to add a
[06:55] test user so I'm going to put in that
[06:56] same email from before and this is going
[06:58] to be the email of the Google drive we
[06:59] want to access so I put in my email you
[07:01] can see I saved it down here and then
[07:03] finally all we need to do is come back
[07:05] into here go to clients and then we need
[07:07] to create a new client we're going to
[07:09] click on web app we're going to name it
[07:12] whatever we want of course I'm just
[07:13] going to call this one demo once again
[07:15] and now we need to basically add a
[07:17] redirect URI so if you click back into
[07:20] end we have one right here so we're
[07:22] going to copy this go back into cloud
[07:24] and we're going to add a URI and paste
[07:26] it right in there and then hit create
[07:30] and then once that's created it's going
[07:31] to give us an ID and a secret so all we
[07:34] have to do is copy the ID go back into
[07:36] NN and paste that right
[07:38] here and then we need to go grab our
[07:40] secret from Google cloud and then paste
[07:43] that right in there and now we have a
[07:45] little button that says sign in with
[07:46] Google so I'm going to open that up it's
[07:48] going to pull up a window to have you
[07:49] sign in make sure you sign in with the
[07:51] same account that you just had yourself
[07:52] as a test user that one and then you'll
[07:55] have to continue and then here is
[07:57] basically saying like what permissions
[07:58] do we have to and it didn't have to your
[08:00] Google Drive so I'm just going to select
[08:01] all I'm going to hit continue and then
[08:03] we should be good connection successful
[08:05] and we are now connected and you may
[08:07] just want to rename this credential so
[08:08] you know you know which email it is so
[08:11] now I've saved my credential and we
[08:13] should be able to access the Google
[08:14] Drive now so what I'm going to do is I'm
[08:16] going to click on this list and it's
[08:17] going to show me the folders that I have
[08:19] in Google Drive so that's awesome now
[08:21] for the sake of this video I'm in my
[08:23] Google Drive and I'm going to create a
[08:24] new folder so new folder we're going to
[08:26] call this one um FAQ create this one
[08:30] because we're going to be uploading an
[08:31] FAQ document into it so here's my FAQ
[08:34] folder um right here and then what I
[08:36] have is down here I made a policy and
[08:38] FAQ document which looks like this we
[08:40] have some store policies and then we
[08:42] also have some FAQs at the bottom so all
[08:44] I'm going to do is I'm going to drag in
[08:46] my policy and FAQ document into that new
[08:48] FAQ folder and then if we come into
[08:51] nadn we click on the new folder that we
[08:54] just made so it's not here yet I'm just
[08:56] going to click on these dots and click
[08:57] on refresh list now we should see the
[08:59] FAQ folder there it is click on it we're
[09:02] going to click on what are we watching
[09:03] this folder for I'm going to be watching
[09:05] for a file created and then I'm just
[09:07] going to hit fetch test
[09:09] event and now we can see that we did in
[09:12] fact get something back so let's make
[09:13] sure this is the right one yep so
[09:15] there's a lot of nasty information
[09:16] coming through I'm going to switch over
[09:17] here on the right hand side this is
[09:19] where we can see the output of every
[09:20] node I'm going to click on table and I'm
[09:22] just going to scroll over and there
[09:23] should be a a field called file name
[09:27] here it is name and we have policy and
[09:28] FAQ documents so we know we have the
[09:30] right document in our Google Drive okay
[09:32] so perfect every time we drop in a new
[09:34] file into that Google folder it's going
[09:36] to start this workflow and now we just
[09:38] have to configure what happens after the
[09:39] workflow starts so all we want to do
[09:41] really is we want to pull this data into
[09:44] NN so that we can put it into our pine
[09:46] cone database so off of this trigger I'm
[09:49] going to add a new node and I'm going to
[09:50] grab another Google Drive node because
[09:53] what happened is basically we have the
[09:55] file ID and the file name but we don't
[09:57] have the contents of the file so we're
[09:58] going to do a download file node from
[10:00] Google Drive I'm going to rename this
[10:02] one and just call it download file just
[10:04] to keep ourselves organized we already
[10:06] have our credential connected and now
[10:08] it's basically saying what file do you
[10:09] want to download we have the ability to
[10:12] choose from a list but if we choose from
[10:13] the list it's going to be this file
[10:15] every time we run the workflow and we
[10:17] want to make this Dynamic so we're going
[10:18] to change from list to buy ID and all we
[10:21] have to do now is we're going to look on
[10:22] the leth hand side for that file that we
[10:25] just pulled in and we're going to be
[10:26] looking for the ID of the file so I can
[10:28] see that I found it right down here in
[10:30] the spaces array because we have the
[10:31] name right here and then we have the ID
[10:33] right above it so I'm going to drag ID
[10:35] put it right there in this folder it's
[10:37] coming through as a variable called
[10:39] json. ID and that's just basically
[10:41] referencing you know whenever a file
[10:42] comes through on the the Google Drive
[10:44] trigger I'm going to use the variable
[10:46] json. ID which will always pull in the
[10:48] files ID so then I'm going to hit test
[10:50] step and we're going to see that we're
[10:51] going to get the binary data of this
[10:54] file over here that we could download
[10:55] and this is our policy and FAQ document
[10:58] okay so there's step two we have the
[10:59] file downloaded in NN and now it's just
[11:02] as simple as putting it into pine cone
[11:04] so before we do that let's head over to
[11:06] Pine Cone doio okay so now we are in
[11:09] Pine cone. which is a vector database
[11:11] provider you can get started for free
[11:13] and what we're going to do is sign up
[11:14] okay so I just got logged in and once
[11:16] you get signed up you should see a page
[11:18] similar to this it's a get started page
[11:20] and what we want to do is you want to
[11:21] come down here and click on you know
[11:23] begin setup because we need to create an
[11:25] index so I'm going to click on begin
[11:27] setup we have to name our index so you
[11:29] can call this whatever you want we have
[11:31] to choose a configuration for a text
[11:34] model we have to choose a configuration
[11:36] for an embeddings model which is sort of
[11:37] what I talked about right in here this
[11:39] is going to turn our text chunks into a
[11:42] vector so what I'm going to do is I'm
[11:44] going to choose texting betting three
[11:46] small from open AI it's the most cost
[11:48] effective open AI embedding model so I'm
[11:50] going to choose that then I'm going to
[11:51] keep scrolling down I'm going to keep
[11:53] minus server list I'm going to keep AWS
[11:54] as the cloud provider I'm going to keep
[11:56] this region and then all I'm going to do
[11:58] is hit create index once you create your
[12:00] index it'll show up right here but we're
[12:01] not done yet you're going to click into
[12:03] that index and so I already obviously
[12:05] have stuff in my Vector database you
[12:06] won't have this what I'm going to do
[12:07] real quick is just delete this
[12:09] information out of it okay so this is
[12:11] what yours should look like there's
[12:12] nothing in here yet we have no name
[12:13] spaces and we need to get this
[12:15] configured so on the left hand side go
[12:17] over here to API keys and you're going
[12:20] to create a new API key name it whatever
[12:23] you want of course hit create key and
[12:25] then you're going to copy that value
[12:28] okay back in ended end we have our API
[12:29] key copied we're going to add a new node
[12:32] after the download file and we're going
[12:34] to type in Pine Cone and we're going to
[12:35] grab a pine cone Vector store then we're
[12:37] going to select add documents to a
[12:39] vector store and we need to set up our
[12:41] credential so up here you won't have
[12:43] these and you're going to click on
[12:44] create new credential and all we need to
[12:46] do here is just an API key we don't have
[12:47] to get a client ID or a secret so you're
[12:49] just going to paste in that API key once
[12:51] that's pasted in there and you've given
[12:52] it a name so you know what this means
[12:54] you'll hit save and it should go green
[12:56] and we're connected to Pine Cone and you
[12:58] can make sure that you're connected by
[13:00] clicking on the index and you should
[13:02] have the name of the index right there
[13:03] that we just created so I'm going to go
[13:05] ahead and choose my index I'm going to
[13:07] click on ADD option and we're going to
[13:08] be basically adding this to a pine cone
[13:10] name space which back in here in Pine
[13:12] Cone if I go back into my database my
[13:15] index and I click in here you can see
[13:17] that we have something called namespaces
[13:19] and this basically lets us put data into
[13:20] different folders within this one index
[13:23] so if you don't specify an index it'll
[13:25] just come through as default and that's
[13:26] going to be fine but we want to get into
[13:28] the habit of having our data organized
[13:30] so I'm going to go back into NN and I'm
[13:31] just going to name this Nam space FAQ
[13:34] because that's the type of data we're
[13:35] putting in and now I'm going to click
[13:37] out of this node so you can see the next
[13:39] thing that we need to do is connect an
[13:41] embeddings model and a document loader
[13:43] so let's start with the embeddings model
[13:45] I'm going to click on the plus and I'm
[13:46] going to click on embeddings open Ai and
[13:49] actually this is one thing I left out of
[13:50] the excal draw is that we also will need
[13:52] to go get an open AI key so as you can
[13:54] see when we need to connect a credential
[13:56] you'll click on create new credential
[13:57] and we just need to get an API key so
[13:59] you're going to type in open AI API
[14:01] you'll click on this first link here if
[14:03] you don't have an account yet you'll
[14:04] sign in and then once you sign up you
[14:06] want to go to your dashboard and then on
[14:08] the left hand side very similar thing to
[14:10] Pine Cone you'll click on API keys and
[14:12] then we're just going to create a new
[14:13] key so you can see I have a lot we're
[14:15] going to make a new one and I'm calling
[14:16] everything demo but this is going to be
[14:17] demo number three create new secret key
[14:20] and then we have our key so we're going
[14:21] to copy this and we're going to go back
[14:23] into ID end paste that right here we
[14:24] paste it in our key we've given in a
[14:26] name and now we'll hit save and we
[14:28] should go green just keep in mind that
[14:29] you may need to top up your account with
[14:31] a few credits in order for you to
[14:33] actually be able to run this model um so
[14:35] just keep that in mind so then what's
[14:36] really important to remember is when we
[14:38] set up our pine cone index we use the
[14:40] embedding model text embedding three
[14:42] small from open AI so that's why we have
[14:44] to make sure this matches right here or
[14:46] this automation is going to break okay
[14:48] so we're good with the embeddings and
[14:49] now we need to add a document loader so
[14:51] I'm going to click on this plus right
[14:52] here I'm going to click on default data
[14:54] loader and we have to just basically
[14:56] tell pine cone the typee of data we're
[14:58] putting in and so you have two options
[15:00] Json or binary in this case it's really
[15:03] easy because we downloaded a a Google
[15:05] doc which is on the left hand side you
[15:06] can tell it's binary because up top
[15:08] right here on the input we can switch
[15:10] between Json and binary and if we were
[15:13] uploading Json all we'd be uploading is
[15:15] this gibberish nonsense information that
[15:17] we don't need we want to upload the
[15:19] binary which is the actual policy and
[15:21] FAQ document so I'm just going to switch
[15:23] this to Binary I'm going to click out of
[15:25] here and then the last thing we need to
[15:26] do is add a text splitter so this is
[15:27] where I was talking about back in this
[15:29] excal draw we have to split the document
[15:31] into different chunks and so that's what
[15:33] we're doing here with this text splitter
[15:35] I'm going to choose a recursive
[15:37] character text splitter there's three
[15:39] options and I won't dive into the
[15:40] difference right now but recursive
[15:42] character text splitter will help us
[15:44] keep context of the whole document as a
[15:45] whole even though we're splitting it up
[15:47] so for now chunk size is a th000 that's
[15:49] just basically how many characters am I
[15:51] going to put in each chunk and then is
[15:53] there going to be any overlap between
[15:55] our chunks of characters so right now
[15:57] I'm just going to leave it default a th
[15:59] and zero so that's it you just built
[16:01] your first automation for a rag Pipeline
[16:03] and now we're just going to click on the
[16:04] play button above the pine con Vector
[16:06] store node in order to see it get
[16:08] vectorized so we're going to basically
[16:09] see that we have four items that have
[16:11] left this node so this is basically
[16:13] telling us that our Google doc that we
[16:14] downloaded right here so this document
[16:17] got turned into four different vectors
[16:19] so if I click into the text splitter we
[16:21] can see we have four different responses
[16:23] and this is the contents that went into
[16:25] each chunk so we can just verify this by
[16:28] heading real quick into pine cone we can
[16:30] see we have a new name space that we
[16:31] created called FAQ number of Records is
[16:34] four and if we head over to the browser
[16:36] we can see that we do indeed have these
[16:37] four vectors and then the text field
[16:39] right here as you can see are the
[16:40] characters that were put into each chunk
[16:43] okay so that was the first part of this
[16:44] workflow but we're going to real quick
[16:46] just make sure that this actually works
[16:48] so we're going to add a rag chatbot okay
[16:50] so what I'm going to do now is hit the
[16:51] tab or I could also have just clicked on
[16:53] the plus button right here and I'm going
[16:55] to type in AI agent and that is what
[16:57] we're going to grab and pull into this
[16:59] workflow so we have an AI agent and
[17:01] let's actually just put him right over
[17:03] here um and now what we need to do is we
[17:07] need to set up how are we actually going
[17:08] to talk to this agent and we're just
[17:10] going to use the default naden chat
[17:12] window so once again I'm going to hit
[17:13] tab I'm going to type in chat and we
[17:15] have a chat trigger and all I'm going to
[17:17] do is over here I'm going to grab the
[17:19] plus and I'm going to drag it into the
[17:20] front of the AI agent so basically now
[17:22] whenever we hit open chat and we talk
[17:24] right here the agent will read that chat
[17:26] message and we know this because if
[17:29] clicking to the agent we can see the
[17:30] user message is looking for one in the
[17:32] connected chat trigger node which we
[17:34] have right here connected okay so the
[17:36] first step with an AI agent is we need
[17:38] to give it a brain so we need to give it
[17:40] some sort of AI model to use so we're
[17:43] going to click on the plus right below
[17:44] chat model and what we could do now is
[17:46] we could set up an open AI chat model
[17:48] because we already have our API key from
[17:50] open AI but what I want to do is click
[17:52] on open router because this is going to
[17:54] allow us to choose from all different
[17:57] chat models not just open AIS so we
[17:59] could do Claude we could do Google we
[18:00] could do perplexity we have all these
[18:01] different models in here which is going
[18:03] to be really cool and in order to get an
[18:04] open router account all you have to do
[18:06] is go sign up and get a API key so
[18:08] you'll click on create new credential
[18:10] and you can see we need an API key so
[18:12] you'll head over to open router. you'll
[18:14] sign up for an account and then all you
[18:15] have to do is in the top right you're
[18:17] going to click on keys and then once
[18:19] again kind of the same as all the other
[18:21] ones you're going to create a new key
[18:23] you're going to give it a name you're
[18:24] going to click create you have a secret
[18:26] key you're going to click copy and then
[18:28] when we go back into NN and paste it in
[18:29] here give it a name and then hit save
[18:31] and we should go green we've connected
[18:33] to open router and now we have access to
[18:35] any of these different chat models so in
[18:37] this case let's
[18:38] use let's use Claude um 3.5
[18:44] sonnet and this is just to show you guys
[18:46] you can connect to different ones but
[18:47] anyways now we could click on open chat
[18:49] and actually let me make sure you guys
[18:50] can see him if we say hello it's going
[18:53] to use its brain claw 3.5 son it and now
[18:56] it responded to us hi there how can I
[18:57] help you so just to validate that our
[19:00] information is indeed in the pine cone
[19:02] Vector store we're going to click on a
[19:03] tool under the agent we're going to type
[19:05] in Pine Cone um and grab a pine con
[19:09] Vector store and we're going to grab the
[19:10] account that we just selected so this
[19:12] was the demo I just made we're going to
[19:14] give it a name so in this case I'm just
[19:15] going to say knowledge
[19:18] base we're going to give a description
[19:21] call this tool to access the policy and
[19:26] FAQ database so we're BAS basically just
[19:29] describing to the agent what this tool
[19:30] does and when to use it and then we have
[19:33] to select the index and the name space
[19:34] for it to look inside of so the index is
[19:37] easy we only have one it's called sample
[19:39] but now this is important because if you
[19:40] don't give it the right names space it
[19:42] won't find the right information so we
[19:44] called ours FAQ if you remember in um
[19:47] our pine cone we have a namespace and we
[19:48] have FAQ right here so that's why we're
[19:51] doing FAQ and now it's going to be
[19:52] looking in the right spot so before we
[19:54] can chat with it we have to add an
[19:55] embeddings model to our Pine con Vector
[19:58] store which which same thing as before
[19:59] we're going to grab open Ai and we're
[20:01] going to use embedding three small and
[20:03] the same credential you just made and
[20:05] now we're going to be good to go to chat
[20:06] with our rag agent so looking back in
[20:09] the document we can see we have some
[20:10] different stuff so I'm going to ask this
[20:12] chatbot what the warranty policy is so
[20:14] I'm going to open up the chat window and
[20:15] say what is our warranty policy send
[20:20] that off and we should see that it's
[20:21] going to use its brain as well as the
[20:23] vector store in order to create an
[20:24] answer for us because it didn't know by
[20:27] itself so there we go just finished up
[20:30] and it said based on the information
[20:31] from my knowledge base here's the
[20:33] warranty policy we have oneyear standard
[20:35] coverage we have you know this email for
[20:37] claims processes you must provide proof
[20:39] of purchase and for warranty exclusions
[20:42] that aren't covered damage due to misuse
[20:44] water damage blah blah blah back in the
[20:46] policy
[20:47] documentation we can see that that is
[20:49] exactly what we have in our knowledge
[20:51] base for warranty policy so just because
[20:53] I don't want this video to go too long
[20:54] I'm not going to do more tests but this
[20:56] is where you can get in there and make
[20:57] sure it's working one thing to keep in
[20:59] mind is within the agent we didn't give
[21:00] it a system prompt and what a system
[21:02] prompt is is just basically a message
[21:04] that tells the agent how to do its job
[21:07] so what you could do is if you're having
[21:08] issues here you could say you know like
[21:10] this is the name of our tool which is
[21:11] called knowledge base you could tell the
[21:13] agent in ins system prompt hey like your
[21:15] job is to help users answer questions
[21:17] about the um you know our policy
[21:20] database you have a tool called
[21:22] knowledge base you need to use that in
[21:24] order to help them answer their
[21:25] questions and that will help you refine
[21:26] the behavior of how this agent a all
[21:29] right so the next one that we're doing
[21:30] is a customer support workflow and as
[21:32] always you have to figure out what is
[21:34] the trigger for my workflow in this case
[21:36] it's going to be triggered by a new
[21:38] email received so I'm going to click on
[21:40] ADD First Step I'm going to type in
[21:41] Gmail grab that node and we have a
[21:43] trigger which is on message received
[21:45] right here and we're going to click on
[21:47] that so what we have to do now is
[21:48] obviously authorize ourselves so we're
[21:51] going to click on create new credential
[21:52] right here and all we have to do here is
[21:54] use oo 2 so all you have to do is click
[21:56] on sign in but before we can do that we
[21:57] have to come over to our Google Cloud
[21:59] once again and now we have to make sure
[22:00] we enable the Gmail API so we'll click
[22:03] on Gmail API and it'll be really simple
[22:05] we'll just have to click on enable and
[22:06] now we should be able to do that ooth
[22:08] connection and actually sign in you'll
[22:10] click on the account that you want to
[22:11] access the Gmail you'll give it access
[22:13] to everything click continue and then
[22:15] we're going to be connected as you can
[22:16] see and then you want to name this
[22:18] credential as always okay so now we're
[22:20] using our new credential and what I'm
[22:22] going to do is if I hit fetch test event
[22:24] so now we are seeing an email that I
[22:26] just got in this inbox which in this
[22:27] case was n end Cloud was granted access
[22:30] to your Google account blah blah blah um
[22:33] so that's what we just got okay so I
[22:35] just sent myself a different email and
[22:36] I'm going to fetch that email now from
[22:38] this inbox and we can see that the
[22:40] snippet says what is the privacy policy
[22:42] I'm concerned about my data and
[22:44] passwords and what we want to do is we
[22:46] want to turn off simplify because what
[22:48] this button is doing is it's going to
[22:49] take the content of the email and
[22:51] basically you know cut it off so in this
[22:53] case it didn't matter but if you're
[22:54] getting long emails it's going to cut
[22:56] off some of the email so if we turn off
[22:57] simplify fetch test event once again
[23:00] we're now going to get a lot more
[23:01] information about this email but we're
[23:03] still going to be able to access the
[23:04] actual content which is right here we
[23:06] have the text what is privacy policy I'm
[23:08] concerned about my data and passwords
[23:10] thank you and you can see we have other
[23:11] data too like what the subject was who
[23:13] the emails coming from what their name
[23:15] is all this kind of stuff but the idea
[23:17] here is that we are going to be creating
[23:19] a workflow where if someone sends an
[23:21] email to this inbox right here we are
[23:24] going to automatically look up the
[23:25] customer support policy and respond back
[23:27] to them so we don't have to
[23:29] okay so the first thing I'm actually
[23:29] going to do is pin this data just so we
[23:31] can keep it here for testing which
[23:33] basically means whenever we rerun this
[23:35] it's not going to go look in our inbox
[23:36] it's just going to keep this email that
[23:38] we pulled in which helps us for testing
[23:40] right okay cool so the next step here is
[23:42] we need to have ai basically filter to
[23:45] see is this email customer support
[23:46] related if yes then we're going to have
[23:49] a response written if no we're going to
[23:51] do nothing because maybe the use case
[23:53] would be okay we're going to give aned
[23:55] in access to an inbox where we're only
[23:56] getting customer support emails but
[23:58] sometimes maybe that's not the case and
[24:00] let's just say we wanted to create this
[24:02] as sort of like an inbox manager where
[24:03] which we could route off to different
[24:05] logic based on the type of email so
[24:07] that's what we're going to do here so
[24:08] I'm going to click on the plus after the
[24:09] Gmail trigger and I'm going to search
[24:11] for a text classifier node and what this
[24:14] does is it's going to use AI to read the
[24:16] incoming email and then determine what
[24:18] type of email it is so because we're
[24:20] using AI the first thing we have to do
[24:22] is connect a chat model we already have
[24:23] our open router credential set up so I'm
[24:25] going to choose that I'm going to choose
[24:27] the credential and then I'm for this one
[24:28] let's just keep it with 40 mini and now
[24:30] this AI node actually has Ai and I'm
[24:33] going to click into the text classifier
[24:35] and the first thing we see is that
[24:36] there's a text to classify so all we
[24:38] want to do here is we want to grab the
[24:40] actual content of the email so I'm going
[24:42] to scroll down I can see here's the text
[24:44] which is the email content we're going
[24:45] to drag that into this field and now
[24:48] every time a new email comes through the
[24:51] text classifier is going to be able to
[24:52] read it because we put in a variable
[24:54] which basically represents the content
[24:56] of the email so now that it has that it
[24:58] still doesn't know what to classify it
[25:00] as or what its options are so we're
[25:01] going to click on ADD category the first
[25:03] category is going to be customer support
[25:06] and then basically we need to give it a
[25:07] description of what a customer support
[25:09] email could look like so I wanted to
[25:11] keep this one simple it's pretty vague
[25:12] but you could make this more detailed of
[25:14] course and I just said an email that's
[25:16] related to helping out a customer they
[25:17] may be asking questions about our
[25:19] policies or questions about our products
[25:21] or services and what we can do is we can
[25:23] give it specific examples of like here
[25:25] are some past customer support emails
[25:27] and here's what they've looked like and
[25:28] that will make this thing more accurate
[25:29] but in this case that's all we're going
[25:30] to do and then I'm going to add one more
[25:32] category that's just going to be other
[25:34] and then for now I'm just going to say
[25:36] any email that is not customer support
[25:40] related Okay cool so now when we click
[25:42] out of here we can see we have two
[25:44] different branches coming off of this
[25:45] node which means when the text
[25:47] classifier decides it's either going to
[25:49] send it off this Branch or it's going to
[25:50] send it down this Branch so let's
[25:52] quickly hit play it's going to be
[25:54] reading the email using its brain and
[25:55] now you can see it has output it in the
[25:57] custom customer support Branch we can
[25:59] also verify by clicking into here and we
[26:01] can see customer support branch has one
[26:03] item and other branch has no items and
[26:05] just to keep ourselves organized right
[26:07] now I'm going to click on the other
[26:08] branch and I'm just going to add an
[26:09] operation that says do nothing just so
[26:11] we can see you know what would happen if
[26:13] it went this way for now but now is
[26:15] where we want to configure the logic of
[26:17] having an agent be able to read the
[26:19] email hit the vector database to get
[26:21] relevant information and then help us
[26:23] write an email so I'm going to click on
[26:25] the plus after the customer support
[26:26] Branch I'm going to grab an AI agent so
[26:29] this is going to be very similar to the
[26:30] way we set up our AI agent in the
[26:31] previous workflow so it's kind of
[26:33] building on top of each other and this
[26:35] time if you remember in the previous one
[26:37] we were talking to it with a connected
[26:39] chat trigger node and as you can see
[26:40] here we don't have a connected chat
[26:42] trigger node so the first thing we want
[26:44] to do is change that we wanted to find
[26:46] below and this is where you would think
[26:47] okay what do we actually want the agent
[26:49] to read we want it to read the email so
[26:51] I'm going to do the exact same thing as
[26:52] before I'm going to go into the Gmail
[26:54] trigger node scroll all the way down
[26:56] until we can find the actual email cont
[26:58] content which is right here and just
[26:59] drag that right in that's all we're
[27:01] going to do and then we definitely want
[27:02] to add a system message for this agent
[27:05] we are going to open up the system
[27:06] message and I'm just going to click on
[27:07] expression so I can expand this up full
[27:09] screen and we're going to write a system
[27:11] prompt again for the sake of the video
[27:13] keeping this prompt really concise but
[27:15] if you want to learn more about
[27:16] prompting then definitely check out my
[27:18] communities linked down below as well as
[27:20] this video up here and all the other
[27:22] tutorials on my channel but anyways what
[27:24] we said here is we gave it an overview
[27:26] and instructions the overview says you
[27:28] are a customer support agent for Tech
[27:29] Haven your job is to respond to incoming
[27:31] emails with relevant information using
[27:33] your knowledge based tool and so when we
[27:35] do hook up our pine cone Vector database
[27:37] we're just going to make sure to call it
[27:38] knowledge base because that's what the
[27:40] agent thinks it has access to and then
[27:42] for the instructions I said your output
[27:44] should be friendly and use emojis and
[27:46] always sign off as Mr helpful from Tech
[27:48] Haven Solutions and then one more thing
[27:50] I forgot to do actually is we want to
[27:52] tell it what to actually output so if we
[27:54] didn't tell it it would probably output
[27:55] like a subject and a body but what's
[27:58] going to happen is we're going to reply
[27:59] to the incoming email we're not going to
[28:01] create a new one so we don't need a
[28:02] subject so I'm just going to say output
[28:05] only the body content of the email so
[28:09] then we'll give it a try and see what
[28:11] that prompt looks like we may have to
[28:12] come back and refine it but for now
[28:13] we're good um and as you know we have to
[28:16] connect a chat model and then we have to
[28:17] connect our pine cone so first of all
[28:19] chat model we're going to use open
[28:21] router and just to show you guys we can
[28:22] use a different type of model here let's
[28:25] use something else okay so we're going
[28:26] to go with Google Gemini 2.0 Flash and
[28:29] then we need to add the pine cone
[28:30] database so I'm going to click on the
[28:31] plus under tool I'm going to search for
[28:33] pine cone Vector store grab that and we
[28:36] have the operation is going to be
[28:38] retrieving documents as a tool for an AI
[28:40] agent we're going to call this
[28:43] knowledge capital B base and we're going
[28:46] to once again just say call this tool to
[28:49] access policy and FAQ information we
[28:54] need to set up the index as well as the
[28:56] namespace so sample and and then we're
[28:58] going to call the namespace you know FAQ
[29:00] because that's what it's called in our
[29:02] pine cone right here as you can see and
[29:03] then we just need to add our embeddings
[29:05] model and we should be good to go which
[29:07] is embeddings open AI text embedding
[29:09] three small so we're going to hit the
[29:11] play above the AI agent and it's going
[29:13] to be reading the email as you can see
[29:14] once again The Prompt user message it's
[29:16] reading the email what is the privacy
[29:18] policy I'm concerned about my data and
[29:19] my passwords thank you so we're going to
[29:21] hit the play above the agent we're going
[29:23] to watch it use its brain we're going to
[29:25] watch it call the vector store and we
[29:27] got an
[29:29] okay so I'm getting this error right and
[29:31] it says provider returned error and it's
[29:33] weird because basically why it's
[29:36] erroring is because of our our chat
[29:37] model and it's it's weird because it
[29:39] goes green right so anyways what I would
[29:41] do here is if you're experiencing that
[29:42] error it means there's something wrong
[29:44] with your key so I would go reset it but
[29:46] for now I'm just going to show you the
[29:47] quick fix I can connect to a open AI
[29:50] chat model real quick and I can run this
[29:52] here and we should be good to go so now
[29:55] it's going to actually write the email
[29:56] and output super weird error but I'm
[29:59] honestly glad I caught that on camera to
[30:00] show you guys in case you face that
[30:01] issue because it could be frustrating so
[30:03] we should be able to look at the actual
[30:05] output which is hey there thank you for
[30:07] your concern about privacy policy at
[30:09] Tech Haven we take your data protection
[30:10] seriously so then it gives us a quick
[30:12] summary with data collection data
[30:14] protection cookies if we clicked into
[30:16] here and went to the privacy policy we
[30:17] could see that it is in fact correct and
[30:19] then it also was friendly and used
[30:21] emojis like we told it to right here in
[30:23] the system prompt and finally it's
[30:25] signed off as Mr helpful from Tech Haven
[30:27] Solutions also like we told it to so
[30:29] we're almost done here the last thing we
[30:30] want to do is we want to have it
[30:31] actually reply to this person that
[30:34] triggered the whole workflow so we're
[30:36] going to click on the plus we're going
[30:37] to type in Gmail grab a Gmail node and
[30:39] we're going to do reply to a message
[30:42] once we open up this node we already
[30:43] know that we have it connected because
[30:45] we did that earlier we need to configure
[30:47] the message ID the message type and the
[30:50] message and so all I'm going to do is
[30:51] first of all email type I'm going to do
[30:53] text for the message ID I'm going to go
[30:55] all the way down to the Gmail trigger
[30:57] and we have an ID right here this is the
[30:59] ID we want to put into the message ID so
[31:01] that it responds in line on Gmail rather
[31:04] than creating a new thread and then for
[31:06] the message we're going to just drag in
[31:07] the output from the agent that we just
[31:09] had write the message so I'm going to
[31:10] grab this output put it right there and
[31:12] now you can see this is how it's going
[31:14] to respond in
[31:16] email and the last thing I want to do is
[31:18] I want to click on ADD option append
[31:20] naden attribution and then just check
[31:22] that off so then at the bottom of the
[31:24] email it doesn't say this was sent by
[31:26] Neden so finally we'll hit this test
[31:29] step we will see we get a success
[31:31] message that the email was sent and I'll
[31:33] head over to the email to show you guys
[31:34] okay so here it is this is the one that
[31:36] we sent off to that inbox and then this
[31:38] is the one that we just got back as you
[31:39] can see it's in the same thread and it
[31:41] has basically the privacy policy outline
[31:44] for us cool so that's workflow number
[31:46] two couple ways we could make this even
[31:48] better one thing we could do is we could
[31:49] add a node right here and this would be
[31:51] another Gmail one and we could basically
[31:54] add a label to this email so if I grab
[31:57] add label to message we would do the
[31:58] exact same thing we'd grab the message
[32:00] ID the same way we grabbed it earlier so
[32:03] now it has the message ID of the label
[32:04] to actually create and then we would
[32:06] just basically be able to select the
[32:08] label we want to give it so in this case
[32:09] we could give it the customer support
[32:11] label we hit test step we'll get another
[32:13] success message and then in our inbox if
[32:15] we refresh we will see that that just
[32:17] got labeled as customer support so you
[32:19] could add on more functionality like
[32:20] that and you could also down here create
[32:23] more sections so we could have Finance
[32:25] you know a logic built out for finance
[32:27] emails we have logic built out for all
[32:29] these other types of emails and um plug
[32:31] them into different knowledge bases as
[32:32] well so let's move on to the third and
[32:34] final workflow for today okay so the
[32:36] third one we're going to do is a
[32:38] LinkedIn content creator workflow so
[32:40] what we're going to do here is click on
[32:41] ADD first step of course and ideally you
[32:44] know in production what this workflow
[32:45] would look like is a schedule trigger
[32:47] you know so what you could do is
[32:48] basically say every day I want this
[32:49] thing to run at 7:00 a.m. that way I'm
[32:51] always going to have a LinkedIn post
[32:53] ready for me at you know 7:30 I'll post
[32:55] it every single day and if you wanted it
[32:57] to actually be be automatic you'd have
[32:58] to flick this workflow from inactive to
[33:01] active and you know now it says um your
[33:03] schedule trigger will now trigger
[33:04] executions on the schedule you have
[33:05] defined so now it would be working but
[33:07] for the sake of this video we're going
[33:09] to turn that off and we're just going to
[33:10] be using a manual trigger just so we can
[33:12] show how this works um but it's the same
[33:15] concept right it would just start the
[33:16] workflow so what we're going to do from
[33:18] here is we're going to connect a Google
[33:20] sheet so I'm going to grab a Google
[33:21] sheet node I'm going to click on get
[33:23] rows in sheet and we have to create our
[33:26] credential once again so we're create
[33:28] new credential we're going to be able to
[33:29] do oo to sign in but we're going to have
[33:31] to go back to Google cloud and we're
[33:33] going to have to grab a sheet and make
[33:34] sure that we have the Google Sheets API
[33:36] enabled so we'll come in here we'll
[33:38] click enable and now once this is good
[33:40] to go we'll be able to sign in using OA
[33:43] 2 so very similar to what we just had to
[33:44] do for Gmail and that previous workflow
[33:46] but now we can sign in so once again
[33:48] choosing my email allowing it to have
[33:50] access and then we're connected
[33:51] successfully and then giving this a good
[33:53] name and now what we can do is choose
[33:55] the document in the sheet that it's
[33:56] going to be pulling from so I'm going to
[33:58] show you I have one called LinkedIn
[33:59] posts and I only have one sheet but
[34:01] let's show you the sheet real quick so
[34:03] LinkedIn posts what we have is a topic a
[34:06] status and a content and we're just
[34:08] basically going to be pulling in one row
[34:10] where the status equals to do and then
[34:13] we are going to um create the content
[34:15] upload it back in right here and then
[34:17] we're going to change the status to
[34:18] created so then this same row doesn't
[34:20] get pulled in every day so how this is
[34:22] going to work is we're going to create a
[34:23] filter so the first filter is going to
[34:25] be looking within the status column and
[34:28] it has to equal to do and if we click on
[34:31] test step we should see that we're going
[34:32] to get like all of these items where
[34:34] there's a bunch of topics but we don't
[34:36] want that we only want to get the first
[34:38] row so at the bottom here add option I'm
[34:40] going to say return only first matching
[34:42] row check that on we'll test this again
[34:44] and now we're only going to be getting
[34:46] that top row to create content on cool
[34:48] so we have our first step here which is
[34:50] just getting the content from the Google
[34:52] sheet now what we're going to do is we
[34:53] need to do some web search on this topic
[34:56] in order to create that content so I'm
[34:58] going to add a new node this one's going
[34:59] to be called an HTTP request so we're
[35:01] going to be making a request to a
[35:03] specific API and in this case we're
[35:05] going to be using tav's API so go on
[35:08] over to t.com and create a free account
[35:10] you're going to get a thousand searches
[35:12] for free per month okay here we are in
[35:14] my account I'm on the free researcher
[35:16] plan which gives me a th000 free credits
[35:18] and right here I'm going to add an API
[35:19] key we're going to name it create a key
[35:22] and we are going to copy this value and
[35:24] so you'll start to get to the point when
[35:25] you connect to different Services you
[35:27] always need to have some sort of like
[35:28] token or API key but anyways we're going
[35:30] to grab this in a sec what we need to do
[35:32] now is go to the documentation that we
[35:34] see right here we're going to click on
[35:35] API reference and now we have right here
[35:38] this is going to be the API that we need
[35:39] to use in order to search the web so I'm
[35:42] not going to really dive into like
[35:43] everything about HTTP requests right now
[35:46] I'm just going to show you the simple
[35:47] way that we can get this set up so first
[35:49] thing that we're going to do is we
[35:50] obviously see that we're using an
[35:52] endpoint called tavali search and we can
[35:54] see it's a post request which is
[35:56] different than like a git request and we
[35:58] have all these different things we need
[35:59] to configure and it can be confusing so
[36:01] all we want to do is on the top right we
[36:03] see this curl command we're going to
[36:04] click on the copy button we're going to
[36:07] go back into our NN hit import curl
[36:09] paste in the curl command hit
[36:13] import and now the whole node magically
[36:16] just basically filled in itself so
[36:18] that's really awesome and now we can
[36:19] sort of break down what's going on so
[36:21] for every HTTP request you have to have
[36:23] some sort of method typically when
[36:25] you're sending over data to a service
[36:27] which in this case we're going to be
[36:28] sending over data to tavali it's going
[36:31] to search the web and then bring data
[36:33] back to us that's a post request because
[36:35] we're sending over body data if we were
[36:38] just like kind of trying to hit an and
[36:40] if we were just trying to access like
[36:42] you know um best buy.com and we just
[36:44] wanted to scrape the information that
[36:45] could just be a simple git request
[36:47] because we're not sending anything over
[36:49] anyways then we're going to have some
[36:50] sort of Base URL and endpoint which is
[36:52] right here the base URL we're hitting is
[36:54] api. comom Tav and then the endpoint
[36:57] we're hitting is slash search so back in
[36:59] the documentation you can see right here
[37:01] we have slash search but if we were
[37:03] doing like an extract we would do slash
[37:05] extract so that's how you can kind of
[37:07] see the difference with the end points
[37:09] and then we have a few more things to
[37:10] configure the first one of course is our
[37:12] authorization so in this case we're
[37:14] doing it through a header parameter as
[37:15] you can see right here the curl command
[37:17] set it up basically all we have to do is
[37:19] replace this um token with our API key
[37:22] from tab so I'm going to go back here
[37:24] copy that key in n8n I'm going to get
[37:27] rid of token and just make sure that you
[37:29] have a space after the word Bearer and
[37:31] then you can paste in your token and now
[37:33] we are connected to tavali but we need
[37:34] to configure our request before we send
[37:36] it off so right here are the parameters
[37:38] within our body request and I'm not
[37:40] going to dive too deep into it you can
[37:42] go to the documentation if you want to
[37:43] understand like you know the main thing
[37:45] really is the query which is what we're
[37:46] searching for but we have other things
[37:48] like the topic it can be general or news
[37:50] we have search depth we have Max results
[37:52] we have a Time range we have all this
[37:54] kind of stuff right now I'm just going
[37:56] to leave everything here as default
[37:58] we're only going to be getting one
[37:59] result and we're going to be doing a
[38:01] general topic we're going to be doing
[38:02] basic search but right now if we hit
[38:04] test step we should see that this is
[38:06] going to work but it's going to be
[38:07] searching for who is Leo Messi and here
[38:09] is sort of like the answer we get back
[38:11] as well as a URL so this is an actual
[38:13] website we could go to about lonel Messi
[38:17] and then some content from that website
[38:18] right so we are going to change this to
[38:21] an expression so that we can put a
[38:22] variable in here rather than just a
[38:24] static hardcoded who is Leo Messi we'll
[38:26] delete that query and all we're going to
[38:28] do is just pull in our topic so I'm just
[38:31] going to simply pull in the topic of AI
[38:33] image generation obviously it's a
[38:35] variable right here but this is the
[38:36] result and then we're going to test step
[38:38] and this should basically pull back an
[38:40] article about AI image generation and
[38:43] you know so here is a deep
[38:45] AI um link we'll go to it and we can see
[38:48] this is an AI image generator so maybe
[38:50] this isn't exactly what we're looking
[38:51] for what we could do is basically just
[38:53] say like you know we could hardcode in
[38:55] search the web for and now it's going to
[38:58] be saying search the web for AI image
[38:59] generation we could come in here and say
[39:01] yeah actually you know let's get three
[39:03] results not just one and then now we
[39:05] could test that step and we're going to
[39:06] be getting a little bit different of a
[39:08] search result um AI image generation
[39:11] uses text descriptions to create unique
[39:13] visuals and then now you can see we got
[39:14] three different URLs rather than just
[39:16] one anyways so that's our web search and
[39:19] now that we have a web search based on
[39:21] our defined topic we just need to write
[39:23] that content so I'm going to click on
[39:25] the plus I'm going to grab an AI agent
[39:27] and once again we're not giving it the
[39:29] connected chat trigger node to look at
[39:31] that's nowhere to be found we're going
[39:33] to feed in the research that was just
[39:35] done by tavali so I'm going to click on
[39:37] expression to open this up I'm going to
[39:39] say article one with a colon and I'm
[39:43] just going to drag in the content from
[39:45] article one I'm going to say Article 2
[39:48] with a colon and just drag in the
[39:50] content from article two and then I'm
[39:52] going to say article 3 colon and just
[39:55] drag in the content from the Third
[39:57] article so now it's looking at all three
[39:59] article contents and now we just need to
[40:01] give it a system prompt on how to write
[40:02] a LinkedIn post so open this up click on
[40:05] ADD option click on system message and
[40:07] now let's give it a prompt about turning
[40:09] these three articles into a LinkedIn
[40:11] post okay so I'm heading over to my
[40:13] custom GPT for a prompt architect if you
[40:15] want to access this you can get it for
[40:17] free by joining my free school Community
[40:19] um you'll join that it's linked in the
[40:21] description and then you can just search
[40:22] for prompt architect and you should find
[40:23] the link anyways real quick it's just
[40:25] asking for some clarification questions
[40:27] questions so anyways I'm just shooting
[40:28] off a quick reply and now it should
[40:30] basically be generating our system
[40:32] prompts for us so I'll check in when
[40:34] this is done okay so here is the system
[40:36] prompt I'm going to just paste it in
[40:38] here and I'm just going to you know
[40:39] disclaimer this is not perfect at all
[40:41] like I don't even want this tool section
[40:43] at all because we don't have a tool
[40:45] hooked up to this agent um we're
[40:47] obviously just going to give it a chat
[40:48] model real quick so in this case what
[40:49] I'm going to do is I'm going to use claw
[40:51] 3.5 Sonet just because I really like the
[40:53] way that it writes content so I'm using
[40:54] Claud through open router and now let's
[40:56] give it a run and we'll just see what
[40:58] the output looks like um I'll just click
[41:00] in here while it's running and we should
[41:01] see that it's going to read those
[41:02] articles and then we'll get some sort of
[41:04] LinkedIn post back okay so here it is
[41:06] the creative revolution is here and it's
[41:08] AI powered gone are the days of hiring
[41:10] expensive designers are struggling with
[41:12] complex software today's entrepreneurs
[41:14] can transform ideas into stunning
[41:15] visuals instantly using AI image
[41:18] generators so as you can see we have a
[41:19] few emojis we have some relevant
[41:21] hashtags and then at the end it also
[41:22] said this post you know it kind of
[41:24] explains why it made this post we could
[41:26] easily get rid of that if all we want is
[41:28] the content we would just have to throw
[41:29] that in the system prompt but now that
[41:31] we have the post that we want all we
[41:33] have to do is send it back into our
[41:34] Google sheet and update that it was
[41:37] actually made so we're going to grab
[41:38] another sheets node we're going to do
[41:40] update row and sheet and this one's a
[41:42] little different it's not just um
[41:44] grabbing stuff from a row we're trying
[41:45] to update stuff so we have to say what
[41:47] document we want what sheet we want but
[41:50] now it's asking us what column do we
[41:51] want to match on so basically I'm going
[41:53] to choose topic and all we have to do is
[41:55] go all the way back down to the sheet
[41:57] we're going to choose the topic and drag
[41:58] it in right here which is basically
[42:00] saying okay when this node gets called
[42:03] whenever the topic equals AI image
[42:05] generation which is a variable obviously
[42:07] whatever whatever topic triggered the
[42:09] workflow is what's going to pop up here
[42:11] we're going to update that status so
[42:13] back in the sheets we can see that the
[42:14] status is currently to-do and we need to
[42:16] change it to created in order for it to
[42:18] go green so I'm just going to type in
[42:20] created and obviously you have to spell
[42:22] this correctly the same way you have it
[42:23] in your Google Sheets and then for the
[42:25] content all I'm going to do is we're
[42:26] just going to drag in the output of the
[42:28] AI agent and as you can see it's going
[42:29] to be spitting out the result and now if
[42:31] I hit test up and we go back into the
[42:33] sheet we'll basically watch this change
[42:36] now it's created and now we have the
[42:37] content of our LinkedIn post as well
[42:39] with some justification for why it
[42:41] created the post like this and so like I
[42:43] said you could basically have this be
[42:44] some sort of you know LinkedIn content
[42:46] making machine where every day it's
[42:48] going to run at 7:00 a.m. it's going to
[42:50] give you a post and then what you could
[42:51] do also is you can automate this part of
[42:54] it where you're basically having it
[42:55] create a few new rows every day if you
[42:57] give it a certain sort of like General
[42:59] topic to create topics on and then every
[43:01] day you can just have more and more
[43:02] pumping out so that is going to do it
[43:04] for our third and final workflow okay so
[43:07] that's going to do it for this video I
[43:08] hope that it was helpful you know
[43:10] obviously we connected to a ton of
[43:11] different credentials and a ton of
[43:12] different Services we even made a HTTP
[43:15] request to an API called tavali now if
[43:17] you found this helpful and you liked
[43:19] this sort of live step-by-step style and
[43:20] you're also looking to accelerate your
[43:22] journey with nadn and AI automations I
[43:24] would definitely recommend to check out
[43:25] my paid Community the link for that is
[43:26] down down in the description there are a
[43:28] ton of great resources on YouTube and
[43:30] you can definitely learn through
[43:31] tutorials like that but having a
[43:32] community of members who are kind of
[43:34] going through the same thing as you it's
[43:35] really going to help especially when you
[43:36] run into Little issues sort of like the
[43:38] one we saw earlier in this video it's
[43:41] just going to really help when you can
[43:42] come in here and ask questions that have
[43:43] been answered millions of times like in
[43:45] this community if I type in solved
[43:47] you're going to see there's you know
[43:49] hundreds of things that we have talked
[43:50] about and problems that people have had
[43:52] and now you know we basically have the
[43:53] solves for all of them right here so on
[43:55] top of that we have five live calls per
[43:56] week to make sure you're never getting
[43:58] stuck as well as a classroom section
[44:00] with different topics like intro to AI
[44:01] automation building agents Vector
[44:03] databases apis and HTTP requests
[44:06] step-by-step builds all this kind of
[44:07] stuff so I'd really love to see you guys
[44:09] in here love to see you on the live
[44:10] calls and I appreciate you guys making
[44:12] it to the end of the video as always if
[44:15] you learned something new or you
[44:16] appreciated it please give it a like
[44:17] definitely helps me out a ton and I will
[44:19] see you all in the next one thanks so
[44:21] much everyone