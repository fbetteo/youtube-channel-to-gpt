Video Title: I Built a Personal Assistant AI Agent with No Code in n8n
Video ID: omw1MEvMCo0
URL: https://www.youtube.com/watch?v=omw1MEvMCo0
View Count: 54,954

[00:00] I'm super excited to share this AI agent
[00:01] build with you guys today I definitely
[00:03] think that it's going to change the way
[00:04] that I do my business especially
[00:05] anything personal Administration related
[00:07] and that's because I'm going to consider
[00:09] this a human personal assistant except
[00:11] for unlike a human this thing is going
[00:12] to be available to me 24/7 it's going to
[00:14] respond to me immediately and truly it
[00:16] costs a fraction of what it would be to
[00:18] hire an actual human personal assistant
[00:20] so this is the build right here as you
[00:21] can tell the way that we're interacting
[00:23] with our agent is through telegram so I
[00:24] can pull that up on my phone or on my
[00:26] desktop and all I have to do is ask it
[00:28] to do something for me it's going to run
[00:29] through through this logic and then it's
[00:30] going to Output either a result to me or
[00:32] it's going to tell me that hey I went in
[00:34] the back end and I did that for you you
[00:36] know updated the database or set a
[00:37] calendar event whatever it may be so I'm
[00:39] going to walk through exactly what's
[00:41] going on in each step and we'll jump
[00:43] into each of these sub tools and all of
[00:44] these are sub tools that I built also
[00:46] with an nadn but before we get into you
[00:48] know the details let's just do a quick
[00:50] demo of what this thing looks like in
[00:52] action let's say you're running late to
[00:54] a meeting and you don't feel super
[00:55] prepared so you want to get caught up on
[00:56] emails real quick let's just go into our
[00:58] telegram app on the phone and type in
[01:01] can you summarize my emails from
[01:03] today then we'll see we got two emails
[01:05] that we want to read real quick here's a
[01:06] summary of your emails from today first
[01:08] one's from Amanda she provided an update
[01:10] on a redesigned project completed
[01:12] homepage layout updated branding mobile
[01:14] optimization blah blah blah the project
[01:17] is on task to complete by the 20th and
[01:19] she requests approval of the blog page
[01:21] mockup and details by the 14th she also
[01:24] invites any questions second one is from
[01:26] Mike Mike informed you about a billing
[01:28] discrepancy on the recent invoice from
[01:30] the 5th we were buil 550 but the correct
[01:32] amount should have been 475 so we have
[01:34] to settle within 7 days to avoid
[01:36] penalties and it gives us an emotes
[01:38] reach out to there so these two popped
[01:41] up in here because they were marked as
[01:43] unread so that's the ones that are
[01:45] coming through as and getting summarized
[01:47] for us and all the ones that are red as
[01:48] you can see that we wouldn't have got
[01:49] back even like this one um was from
[01:52] today but we're not getting it because
[01:54] it was already red all right that was a
[01:56] quick demo of what it looks like how it
[01:57] works how it interacts with us now let's
[02:00] look at what's actually taking place
[02:01] within this agent workflow so the first
[02:03] thing we'll look at is the open AI chat
[02:05] model obviously we're using um GPT 40
[02:07] right here and this is just sort of the
[02:09] brain that we're giving to the actual
[02:11] agent entity itself so this is the brain
[02:13] right here then we've got the vector
[02:15] store tool this is just you know we're
[02:17] connecting it to Pine Cone and pine cone
[02:18] is the vector store database that we've
[02:20] been using this is just where in this
[02:22] use case we have contact information so
[02:24] you can say can you email Mike can you
[02:26] email Jenny and it will know how to go
[02:29] find Jenny and find her email address
[02:31] and actually send an email and then
[02:33] we've got um obviously you need to
[02:35] connect different embeddings to these
[02:36] tools but that's pretty much it for
[02:38] those and then all the other tools that
[02:39] we'll be using today were tools that I
[02:41] built within nadn so as you can tell by
[02:43] this little logo that just means that
[02:45] you're connecting a tool that you built
[02:47] in this software as well but we have get
[02:49] emails send email get calendar set
[02:51] calendar update database and summarized
[02:54] database so we'll be going through each
[02:56] of these tools I'll show you guys the
[02:57] logic behind each of these and um we'll
[03:00] get we'll do a demo for each one as well
[03:01] and since the demo we just did was
[03:03] forget emails we might as well hop into
[03:05] this one first what I think makes the
[03:06] most sense when I'm showing you guys
[03:08] each of these little workflows is
[03:10] actually seeing live data move through
[03:12] so I'm looking at an execution we're
[03:13] looking at the one when I just asked it
[03:15] through telegram to summarize emails
[03:17] from today and that way real data will
[03:18] be moving through each node and you'll
[03:20] be able to see it and I can explain it
[03:21] better and it will make more sense
[03:23] hopefully for everybody so all that's
[03:25] happening right here is this workflow is
[03:27] being executed by the AI agent the AI
[03:29] agent is call calling this tool in order
[03:30] to get the job done so as you can see
[03:32] this is the workflow trigger and all
[03:34] that's coming in through here is what I
[03:36] said in the telegram sort of a summary
[03:38] of what I said but summarize emails from
[03:40] today that's what is feeding into this
[03:42] whole process so this first node is an
[03:44] open AI node and as you can see the
[03:47] first thing that we wanted to do was
[03:48] give it a prompt so I said your job is
[03:50] to identify what date the user is asking
[03:52] for based on the Json query and what the
[03:55] current date is so I gave it the current
[03:57] date of now this is a JavaScript script
[04:00] code it just says you know dollar sign
[04:01] now and that Returns the date time of
[04:04] what is right now current so that's all
[04:06] that's happening right there and then I
[04:08] gave it two examples the first one is if
[04:10] the query asks for today you would
[04:12] return today's date and if the query
[04:13] asks for yesterday you would return the
[04:15] day before yesterday and sometimes you
[04:17] just have to outline that um it might
[04:19] seem self-explanatory but open AI
[04:22] doesn't always know that you know
[04:24] yesterday was the day before or two days
[04:25] ago was going to be today's date minus
[04:27] two so giving it examples in ensures
[04:30] that it's as consistent as
[04:31] possible and then down here we just have
[04:33] to drag in the actual information for it
[04:36] to use so we're dragged in the Json
[04:38] query which was right here that says
[04:39] summarize emails from today and this is
[04:41] what gave us as the output we got um
[04:44] October 11th which is in fact today so
[04:47] it did its job right so from there we're
[04:49] going to move into a Gmail node in this
[04:51] one we're just grabbing all the emails
[04:53] from the date so we can see we have get
[04:55] many we're getting 10 and these are the
[04:58] labels that we wanted to filter on so
[04:59] like I mentioned earlier we just want um
[05:01] emails that are in our inbox and that
[05:03] are marked as unread and then we want
[05:05] anything that was received after
[05:07] 101 so October 11th because this is the
[05:10] day that was asked for when we prompted
[05:13] the telegram and this is just coming
[05:15] from that previous open AI node where it
[05:17] gave us the date so then you can see
[05:19] we've got these two emails that came
[05:20] back um these are the ones that got
[05:22] summarized so if I go over here to text
[05:25] we have the update on the redesign
[05:26] project and all the way down here we've
[05:29] got the invoice so this is what we saw
[05:31] in the summarization so once we get the
[05:33] content of the emails from this Gmail
[05:35] node we want to move into another open
[05:36] AI node to actually summarize this
[05:38] information so we said your task is to
[05:41] give a concise summary of the emails
[05:42] that you will receive please include who
[05:44] it's from and the text of the summary of
[05:47] the email so if we click in here we can
[05:49] see that the live information is coming
[05:50] through we've got it's from Nate
[05:51] herkelman and we've got the summary of
[05:53] the email right there and we got this on
[05:55] the left hand side we'll just close out
[05:56] of headers we Dragged In text right here
[05:59] because because this is the sum this is
[06:00] the actual email content and then if we
[06:03] go down more we can see we got who it's
[06:05] from so we have the name and address
[06:06] right here so I just dragged in the from
[06:09] into this column so that that's the
[06:10] information that it will use and then on
[06:12] the right we can see the output we've
[06:14] got this first email and we've got this
[06:16] second email and they're summarized a
[06:18] lot shorter to actually be sent back to
[06:20] us on telegram the next up we just
[06:22] wanted to aggregate those real quick so
[06:23] a simple aggregate node rather than
[06:25] outputting two items we wanted to Output
[06:27] one otherwise it would have only message
[06:30] us back on telegram that first email so
[06:32] this way if we had like eight emails it
[06:34] needed to summarize it would be able to
[06:35] send us all eight of them then finally
[06:37] we just needed to actually respond with
[06:40] this information so we came in here and
[06:42] we set the response field to the content
[06:45] that we were getting from that aggregate
[06:46] node and as you can see all of that is
[06:48] in one big chunk right here and we
[06:50] called it response because this is the
[06:52] field that the agent is looking for
[06:54] after it calls the tool it's looking for
[06:56] the field response to to Signal like
[06:58] either that it's done or it's going to
[07:00] give information back to the agent to
[07:02] give back to us on telegram so that's
[07:04] what's happening in the git emails
[07:06] workflow so now we're going to do the
[07:08] send email workflow which is right here
[07:10] so what I'm going to do first is
[07:11] actually talk to our agent on telegram
[07:13] to get it to send an email and then we
[07:15] can look at the actual execution to see
[07:17] that data moving through all right so I
[07:19] said can you send an email to Colin
[07:20] asking how the project is coming along
[07:22] let's see what we get here the email has
[07:24] been sent to Colin asking for an update
[07:25] on the project perfect and now let's hop
[07:28] into the email and see what we got
[07:30] do so project request update hi Colin I
[07:33] hope this finds you well I am writing to
[07:35] ask how the project is coming along can
[07:36] you please provide an update at your
[07:37] earliest convenience thank you best
[07:39] regards Nate so we can see that that
[07:41] worked now let's hop into the execution
[07:44] of that workflow in order to see the
[07:46] data passing through all right here's
[07:48] this workflow it's only four nodes it
[07:50] looks a little more simple so as you can
[07:51] see what's information coming in we've
[07:53] got um who the email is going to we've
[07:56] got the subject and we've got the the
[07:58] message so I hope this message finds you
[08:00] well I'm writing to ask how the projects
[08:01] coming along just what we read so that's
[08:03] what's being fed into this workflow then
[08:06] we need to go to open AI note in order
[08:08] to get that information parsed through
[08:09] correctly so we pretty much just asked
[08:11] it to parse it through um in the
[08:13] different parameters and once it did
[08:15] that it's going to Output you know the
[08:16] message the send to the subject all that
[08:19] kind of stuff and then we can use that
[08:21] in the Gmail node super simple again all
[08:23] we got to do is drag and drop the fields
[08:25] in so two obviously we're looking for an
[08:27] email so send to we've got Nate
[08:29] 8@gmail.com for subject we're just going
[08:32] to drag in the subject message we're
[08:34] going to drag in the message and then I
[08:35] usually just make sure that the email
[08:36] type is text and that's really all you
[08:38] got to do especially you know after you
[08:40] got everything configured um you can
[08:42] test it and we can see that it actually
[08:43] got sent out once again this workflow
[08:45] has to actually communicate back to the
[08:47] agent that it took care of business so
[08:49] we're going to add an edit field set
[08:51] once again we'll add a field we'll
[08:53] manually call it response and then we
[08:56] set that field to sent so you can also
[08:58] do done but anything that can sort of
[09:00] indicate to the agent that the the
[09:02] workflow has completed successfully back
[09:04] to the agent we're going to move on to
[09:05] the calendar events now so the first one
[09:07] what we'll do is get calendar so open up
[09:09] telegram once again and I'm going to ask
[09:12] the bot to um grab my calendar events
[09:15] for tomorrow so what does my
[09:19] calendar look like
[09:22] tomorrow so we'll ask that we will
[09:25] actually real quick go check what the
[09:26] calendar looks like tomorrow we've got
[09:28] you know different stuff going on
[09:29] throughout the day so hopefully this
[09:30] will come back correctly and now let's
[09:32] look at the telegram message tomorrow on
[09:34] October 12th your schedule is as follows
[09:36] 8:00 a.m. to 900 a.m. we've got gym
[09:38] 11:00 a.m. to 12:00 p.m. we've got a
[09:39] meeting then we got lunch and then later
[09:41] in the night we've got dinner with
[09:43] friends enjoy your day wow super
[09:45] friendly super helpful um that's a lot
[09:47] quicker than you know pulling up your
[09:48] calendar especially if you're you know
[09:50] in the middle of something so we've got
[09:51] our calendar events here now let's go
[09:53] into the actual execution of what just
[09:56] took place and look at the data moving
[09:57] through there too okay so now we're in
[09:59] the workflow of the tool that gets
[10:01] calendar events and then spits them back
[10:03] out in a nice in a nice short summary so
[10:05] as you can see this one's a little bit
[10:06] longer than the send email tool but
[10:09] still not that bad once we break it down
[10:10] piece by piece once again the workflow
[10:13] is being triggered by being called by
[10:15] another workflow which is the agent they
[10:17] all the tools that we make in nadn are
[10:19] going to be called the same way like
[10:21] that so in here we see that the data
[10:23] that's coming through is to view events
[10:24] for 2024 1012 which is tomorrow because
[10:27] we asked for tomorrow and and so that's
[10:29] really nice that it did that already
[10:31] because I prompted the agent to know
[10:32] what the current date is but just in
[10:34] case we always do it here sometimes it
[10:36] slips through especially when I'm
[10:37] building something fast and I'm you know
[10:39] trying to trying to prompt it as simple
[10:40] as possible but here we've got the first
[10:42] open AI node and this was basically the
[10:44] same thing we wanted to find the current
[10:45] day so we can see here your job is to
[10:48] identify what date the user is asking
[10:50] for based on the query which is coming
[10:52] in through Telegram and today's date
[10:54] which is now and you can see it's coming
[10:56] in with the live variables you should
[10:58] return this date field called requested
[11:00] day and only include the date we don't
[11:02] care about the time and then I said some
[11:05] examples so if the query asked for today
[11:07] it be today yesterday be the day before
[11:10] tomorrow is the day after same thing as
[11:11] that one of those other workflows and
[11:13] then I said after this please outut
[11:15] output a field called next day which
[11:17] should be the day after the date you've
[11:18] already returned so it may seem a little
[11:21] complicated but basically all we want is
[11:23] we want the the day that the user
[11:25] requested and then we want to get the
[11:26] next day that the user requested and
[11:28] you'll see why once we get into the
[11:30] calendar node going to open up this
[11:31] calendar node here connect the calendar
[11:34] choose the right calendar and now you
[11:36] see why we wanted to get the requested
[11:37] date and the day after because we wanted
[11:39] to select the options of we're returning
[11:42] calendar events that fall after 1012 but
[11:44] they also have to fall before 10:13
[11:47] otherwise it would pull you know all the
[11:48] events that you have tomorrow and the
[11:50] next day and the next day and all you
[11:52] wanted to see was tomorrow's date or
[11:54] tomorrow's events so you have to tell it
[11:55] how to cut that off here and as you can
[11:57] see it pulled back those four events
[11:59] events that I put into the calendar gym
[12:01] client meeting lunch dinner we've got a
[12:02] bunch of different fields here we also
[12:04] have the start time and the end time but
[12:06] we have the information we need now we
[12:07] just need to figure out how we get it to
[12:09] be concise and summarized in a way that
[12:11] we can digest moving on to the next node
[12:13] we've got the edit field set once again
[12:16] we're going to set but we're not going
[12:17] to do response we're setting three
[12:19] Fields here because that's all the data
[12:21] that we want to move through we want the
[12:22] event we want the start time and the end
[12:24] time so we're once again just going to
[12:26] be dragging in these variables from that
[12:28] previous node for the event we've got
[12:30] the json. summary which is right here
[12:32] and as you can see it comes through his
[12:34] gym and then obviously we want the start
[12:36] time and end time because that's
[12:37] important when we're asking to get our
[12:39] calendar so we're just going to drag in
[12:41] the start date and time and then the end
[12:42] date and time from right over here and
[12:44] we can see that we're getting the
[12:45] information back and it's outputting
[12:47] just what we wanted just what we asked
[12:49] for and you know super simple so we've
[12:52] got those three fields that we want now
[12:53] we're going to move into an open AI node
[12:55] that's going to help us summarize this
[12:56] information so I said you're an
[12:58] assistant and I need you to summarize my
[13:00] day by looking at events in my calendar
[13:01] and then I gave it details I gave it the
[13:03] event name start time end time and then
[13:06] you can see in this output it worked so
[13:08] for example this first one on October
[13:10] 12th you invent scheduled from 8:00 a.m.
[13:12] to 9:00 a.m. for a gym session and then
[13:14] does the same with the rest of
[13:15] them then from there we need to actually
[13:18] aggregate those into this into one field
[13:20] once again otherwise it would only
[13:22] return that first calendar event in our
[13:25] schedule so clicking in here we can see
[13:27] we aggregated and we just aggregated on
[13:29] message. content which is just the
[13:31] summary that came through in the open AI
[13:33] node once again we drag that in and then
[13:35] you can see they're coming through in
[13:36] sort of a list format so this is the
[13:39] information that's going to come back to
[13:40] us on Telegram and then we need to do a
[13:43] final response to the agent that we've
[13:45] done the task but instead of just saying
[13:47] done we need the information that we got
[13:48] through this workflow so we put in the
[13:50] content of the list and then it's going
[13:53] to come back with all four of those
[13:54] events and it's going to send it back to
[13:56] us on telegram moving on to the second
[13:59] calendar tool let's say we don't want to
[14:00] get calendar events but we want to
[14:02] actually put something on our calendar
[14:03] we can use this setup calendar event so
[14:05] let's open up Telegram and talk to our
[14:07] agent in order to do that so I'm going
[14:09] to say can you set an event with Colin
[14:14] for 5:00 pm
[14:17] today and now I'm going to hop over to
[14:20] the calendar we'll pull back over
[14:21] Telegram and we can see this stuff
[14:23] happen in real time it should pop up
[14:25] with an event right here at 5 and it
[14:28] should tell us so the event Colin has
[14:29] been scheduled for five and now we can
[14:30] see right here meeting with Colin we can
[14:32] click on that and we can sort of get
[14:34] information on that and you can make
[14:35] that more detailed if you want if you
[14:37] wanted to actually include a link to you
[14:38] know a zoom meeting or send him an email
[14:40] about it we can hook that kind of stuff
[14:42] up too but that's just a simple look at
[14:44] how that just happened there so let's
[14:46] hop into the execution of what we just
[14:48] asked this agent to do we are now in the
[14:51] set calendar tool this one is again only
[14:54] four nodes so it looks a lot less
[14:55] intimidating but all of them are very
[14:57] simple once you break them down pece
[14:58] back piece once again being triggered
[15:01] here by um being called by another
[15:03] workflow this information we've got here
[15:04] is said an event with Colin and it gave
[15:06] us his email to for 5:00 p.m. today the
[15:09] next node is going to be an open AI so
[15:11] we'll click on this one we're going to
[15:12] message a model and we're going to ask
[15:14] this node to determine the following
[15:16] output Fields based on the user query so
[15:18] we wanted to take what we set over here
[15:20] to set an event and we want it to give
[15:21] us what the name is the start time and
[15:23] the end time of the event and then at
[15:26] the end I put use now once again it's
[15:28] going to give us the current time time
[15:29] and date but we want Ed now as the
[15:31] current date if an end time isn't
[15:33] specified assume it will be 30 minutes
[15:35] after the start date so if you guys may
[15:37] be wondered how did it know to make the
[15:38] meeting from 5:00 p.m. to 5:30 p.m. and
[15:41] it's just because I specified if we
[15:42] don't say how long it's going to be just
[15:44] assume it's 30 minutes so that's what
[15:45] come through over here we've got the
[15:47] event name the start time and the end
[15:49] time and now we can move into the next
[15:51] node The Next Step here is taking this
[15:53] information into a calendar node and
[15:55] this one's pretty self-explanatory we're
[15:57] going to be creating event rather than
[15:59] getting events um we're we're choosing
[16:01] the calendar obviously and then we need
[16:02] to set up the start and end time for the
[16:04] event so we can just drag these in based
[16:06] on that open AI node we just configured
[16:08] and then we had to add an additional
[16:10] field down here because otherwise if we
[16:12] didn't do this it would just create an
[16:13] event on our calendar and just it would
[16:15] be Untitled event but we add this
[16:17] summary and we that's why we wanted it
[16:19] to extract an event name so we put this
[16:21] in here and now we can see it output
[16:23] sort of some information for us it gave
[16:24] us the status confirmed it gave us this
[16:26] link so the link is cool because then
[16:28] you could could have it also
[16:29] automatically email you know Colin or
[16:31] whoever you're making an email with and
[16:33] it could give them this link too and all
[16:35] this kind of stuff but at this point
[16:37] this note is done so we can move on to
[16:39] the last step which is just informing
[16:41] the agent that we did the task once
[16:43] again we do this with an edit Fields set
[16:45] node and this time we added a field
[16:47] called response and we put the response
[16:49] value to done so that the agent knows
[16:51] that we're done and it can telegram
[16:53] message us back and say we did that for
[16:55] you okay now we are on to our last two
[16:58] tools down here which are both having to
[17:00] do with databases so we can update one
[17:01] or summarize one and this is just based
[17:03] on a Google Sheets database that I'm
[17:05] going to be using for this example so
[17:07] first let's go into the update database
[17:09] one and see what this looks like here's
[17:11] an example database that I made for this
[17:12] workflow now I'm just using Google
[17:14] Sheets but obviously you could connect
[17:15] this to air table or notion or whatever
[17:18] sort of backend database software you're
[17:20] using but in this case this is just
[17:22] project database so we've got names of
[17:24] the project we've got notes on the
[17:26] project and then we've got their status
[17:29] so for example let's say that we just
[17:30] you know wrapped up a call and we wanted
[17:32] to update a note or a status or both
[17:34] about a project so let's come in here
[17:36] and say can you update the notes and
[17:41] status of the AI tool
[17:46] project
[17:47] to
[17:49] complete and so this should change both
[17:51] the notes and the status of this first
[17:54] row in here to complete and then it
[17:55] should tell us that it was able to do
[17:57] that for us so let's see the status and
[17:59] notes of the AI tool product have been
[18:01] updated to complete and as you can see
[18:02] right in here we've got these two rows
[18:04] or sorry the row with the two columns
[18:06] that were updated to complete so that's
[18:08] how this one works let's hop into the
[18:10] actual execution of what we just asked
[18:11] telegram to do all right thank goodness
[18:14] for another four node workflow they're
[18:16] super simple and really it's just two
[18:17] nodes because the set and the trigger
[18:19] don't really count but as you can see
[18:21] it's another trigger and it's saying
[18:23] update the AI tool project status to
[18:24] complete and notes to complete so it
[18:26] split that up into two different things
[18:27] which was awesome because it knows that
[18:29] it wants to change the status and the
[18:31] notes not just one or the other so then
[18:34] of course we're going into a open AI
[18:36] node we're prompting it based on the
[18:39] Json query which we gave the information
[18:40] here and then I said you need to justify
[18:43] or sorry you need to identify and output
[18:45] the following Fields separately and the
[18:46] fields are project name notes and status
[18:49] as you can see over here we got the
[18:50] project was called AI tool and the notes
[18:53] and Status were both set to complete and
[18:55] so we've got the information here now we
[18:56] just need to actually get that updated
[18:58] in Google sheets so we'll do that here
[19:00] with a Google Sheets node we want to
[19:03] append or update row we just have to
[19:06] connect our credentials grab the
[19:07] document grab the sheet and then we
[19:09] wanted to match each column on the field
[19:12] called project so we just dragged in
[19:15] Project name over here because then it's
[19:16] saying it's only going to update if it
[19:18] sees that one project in sheets is
[19:21] called AI tool in this case and then one
[19:23] project over here in nadn is called n is
[19:25] called AI tool it's going to match those
[19:28] and then it can update that row and so
[19:30] it's going to update the column of notes
[19:32] to complete and the column of status to
[19:34] complete based on the information we
[19:36] just dragged in right here and here's
[19:38] what a little look of what it looks like
[19:40] um we've got the project notes and
[19:42] status and we know that worked so once
[19:44] again we just have to get back to the
[19:45] agent and say that we did it so we've
[19:47] got response and we set that to done and
[19:50] now we can move on to the last tool of
[19:52] this
[19:52] workflow this last one I think is
[19:54] something that's super cool it's going
[19:55] to be able to read all of the
[19:57] information in your database and give
[19:58] you a sum of it so this could work
[20:00] really well if again in another use case
[20:02] you're running late to a meeting or
[20:03] before you're going to meet with a
[20:04] client you just want to get caught up on
[20:05] what's going on in their profile you
[20:08] could have um your telegram bot just
[20:10] sort of summarized that information for
[20:11] you so let's hop into um this database
[20:15] real quick so we can give a look at
[20:16] what's going on and then we will ask it
[20:18] to
[20:20] please um summarize our
[20:24] database so obviously nothing's going to
[20:26] happen here because it's not changing
[20:28] anything it's just is going to be giving
[20:29] us a summary of this information but
[20:31] hopefully we'll see a quick blurb about
[20:33] each project and the status of each one
[20:36] so as you can see we've got the five
[20:37] projects here um AI tool project has
[20:39] been successfully completed it involved
[20:41] training an AI model blah blah blah some
[20:42] details on that we can see that this
[20:44] marketing campaign one is listed as
[20:45] pending and we can see this last one
[20:48] Cloud migration it involves transferring
[20:50] data and service to the cloud data
[20:51] backup is complete and the migration of
[20:53] servers is scheduled for the weekend the
[20:54] project is currently in the scheduled
[20:56] phase so that is super cool cool if you
[20:59] need you know a quick little rundown or
[21:01] you could ask for a quick rundown on a
[21:03] specific one rather than sort of getting
[21:04] a summary of everything we are now in
[21:07] the most recent execution of our last
[21:10] tool for the day um this one is kind of
[21:12] a mix of all the other ones because it
[21:14] only has three real nodes but again we
[21:16] had to aggregate everything at the end
[21:18] to give us an actual summary so let's
[21:20] see how the data is moving through this
[21:21] workflow of course we've got the call in
[21:24] the beginning by another workflow I need
[21:26] a summary of our current database
[21:27] including key projects recent updates
[21:29] and overall status so it's actually
[21:30] giving us a better prompt than we gave
[21:32] it initially on telegram which is pretty
[21:34] cool then we move into a Google Sheets
[21:36] node this one is also pretty simple all
[21:38] we're doing is grabbing rows and we're
[21:40] grabbing every single Row in this case
[21:42] because we didn't specify we only wanted
[21:45] a certain project then in here of course
[21:46] we're taking these five items these five
[21:48] projects into an open AI node The Prompt
[21:51] here is please Summarize each project in
[21:53] the database based on their details and
[21:55] then all we have to do was drag in
[21:57] Project name the notes and the status so
[22:00] then you on this right hand side you can
[22:01] see that each of them got their own
[22:03] little custom summary based on their
[22:05] information so we took those five items
[22:07] and we wanted to turn them into one as
[22:09] you can see after the aggregate node it
[22:11] goes from five to one so in here all we
[22:13] did was we wanted to um aggregate this
[22:16] field which was message. content which
[22:18] is basically just all the summaries of
[22:21] all of the projects that the openi node
[22:22] gave us and then on the right side you
[22:24] can see that all five of these um
[22:27] usually sort of coding languages count
[22:29] from zero so that's why it says four but
[22:31] these are indeed the five projects we
[22:33] got those over here into one field and
[22:36] then we're able to respond to our agent
[22:38] with that information sort of aggregated
[22:40] together in one field because we gave it
[22:42] the response of json. content which is
[22:45] just what was output from the aggregate
[22:47] node so I hope all that makes sense and
[22:49] I hope that it was useful for you guys
[22:50] to see actual data moving through each
[22:52] of these steps so that's really about it
[22:54] for this video but what's super cool
[22:56] about building an AI agent like this
[22:58] where you have a workflow for the agent
[22:59] and then you give it access to different
[23:01] tools is that this is like always going
[23:03] to be here for me and I'm able to
[23:04] continually build a new tool every day
[23:06] to give this so every day it's just
[23:08] going to get better and better and
[23:09] smarter and smarter as long as I don't
[23:11] overwork it but um yeah like so there's
[23:14] definitely definitely some things within
[23:16] each of these tools that I could have
[23:17] made more complex but I wanted to sort
[23:19] of give you guys more of a simple view
[23:21] of how maybe you could get into nadn and
[23:23] start getting something like this set up
[23:24] for you in your business but you know
[23:26] like one of those examples that I said
[23:28] rather than just setting up a calendar
[23:29] event with someone it would actually
[23:31] send them an email with the link and
[23:33] with maybe a description about what the
[23:35] meeting is going to be about that sort
[23:37] of stuff um you know there's different
[23:39] possibilities with um hooking up
[23:40] different ways you can talk to the agent
[23:42] so you could talk to it in Ann you could
[23:44] you know grab a twio phone number and
[23:46] you could hook this up to an SMS if you
[23:47] wanted to be texting it rather than
[23:49] telegram although telegram is free um
[23:52] you know you could connect it to
[23:53] Whatsapp you could connect it to slack
[23:55] if you wanted to have this integrated
[23:56] into your the CRM or the work system
[23:59] that you use so the possibilities here
[24:01] really are endless and you're able to
[24:03] you know connect more and more tools and
[24:04] I think that it's just something that
[24:06] you really got to get in here and start
[24:07] building and playing with and then
[24:09] you'll really understand like the
[24:11] capabilities of these AI tools and
[24:13] specifically AI agents I just hope that
[24:15] this video was helpful I hope that even
[24:17] if you couldn't follow along all the way
[24:18] that you at least it sort of opened up
[24:20] your eyes to the capabilities of these
[24:22] agents and what they can do and you know
[24:23] how helpful they can be