Video Title: Build your first NO CODE AI Agent in n8n (for beginners)
Video ID: otUBuV1foLY
URL: https://www.youtube.com/watch?v=otUBuV1foLY
View Count: 9,130

[00:00] today I'm going to be walking through
[00:01] step by step how to build this AI agent
[00:03] in Ann no prior coding experience is
[00:05] needed you'll be able to get this agent
[00:07] up and running within 15 minutes so by
[00:09] the end of it you'll have a great idea
[00:11] of how to build Tools in NN and how to
[00:13] have agents call different Tools in
[00:14] order to be as effective as possible so
[00:17] wanted to start off this video with a
[00:19] quick demo of what this agent looks like
[00:20] and what it's going to do here's what it
[00:22] looks like it's okay if this doesn't
[00:24] make sense by the end it all will you
[00:26] can see the tools we have access to are
[00:27] Wikipedia and the get weather tool this
[00:29] is one that we create in nadn but let's
[00:32] just chat with this agent to see how it
[00:33] works so let's ask
[00:35] it what is the capital of
[00:40] Florida we get the capital of the US
[00:42] state of Florida is Tallahassee if you
[00:44] need any information about Tah has or
[00:46] anything else feel free to ask so let's
[00:48] say what
[00:49] is the weather like there oops
[00:54] misspelled there but it should be able
[00:55] to be fine with
[00:58] that the weather Tass is currently
[01:00] partly cloudy with scattered clouds
[01:02] temperatures warm 8.56 de F bit humid
[01:06] blah blah blah gentle breeze blowing it
[01:07] blah blah blah blah enjoy your day okay
[01:09] awesome so that's sort of how it works
[01:12] now let's go and get into actually
[01:14] building this
[01:15] thing so the resources needed here are
[01:18] going to be nadn the weather API and
[01:21] open AI API so this is just how we're
[01:24] going to build the workflows how we're
[01:25] going to access current weather
[01:27] information and then open AI is just how
[01:29] we're going to how the agent is going to
[01:32] think and get the information and
[01:35] formulate a response for us pretty
[01:38] much so the workflows we're going to be
[01:40] building today just two of them the
[01:42] first one is the tool the git current
[01:44] weather tool and then we'll be giving
[01:47] the agent access to that tool and so the
[01:49] second workflow is the AI agent yeah
[01:52] let's just hop right into this one so
[01:53] the first thing I would advise you do is
[01:56] set up the open weather account um just
[01:59] type in open weather map I think it
[02:00] might be but you're going to want to set
[02:02] this up and sign in or sign up as soon
[02:05] as possible because your API key takes 5
[02:07] to 10 minutes to actually process as um
[02:11] valid so once you make your account
[02:13] you'll go right in here click on my API
[02:15] keys I'm going to disable this one after
[02:17] the video because I'm exposed now but
[02:19] your key will be right here or once you
[02:22] uh verify your email they'll email email
[02:25] you your key and they say within the
[02:26] next couple hours but I found it usually
[02:28] takes about 10 minutes so get that set
[02:30] up and then we can hop into actually
[02:31] building this thing so you don't have to
[02:33] be sitting around
[02:35] waiting okay so back to nadn okay so
[02:37] we're going to add a new
[02:39] workflow we're going to add the first
[02:41] step so you always need to add a first
[02:43] step when you build a workflow in NN
[02:46] there's a lot of things that can trigger
[02:47] a workflow you can trigger it manually
[02:49] it can be on a schedule you can chat
[02:51] with it we're going to do when called by
[02:53] another workflow we're doing this
[02:55] because when we talk to the agent and it
[02:57] thinks oh I need to get weather
[02:59] information
[03:00] it's going to call this tool in order to
[03:03] do that so that's how this one's going
[03:05] to
[03:06] execute now we're going to add a set
[03:09] field edit field set we're going to
[03:12] leave it as manual mapping and then
[03:13] we're going to add a field here so let's
[03:15] call this one city we can leave it as
[03:17] string and then the value for now will
[03:20] go Chicago just so that we can test if
[03:22] the weather API is working but in the
[03:24] end we're going to come back and fill
[03:26] this in as a variable because the city
[03:28] we're searching for is going to change
[03:30] based on what we asked the
[03:31] agent okay so we're good there now we
[03:34] need to add the weather app so open
[03:37] weather map we can either return current
[03:40] weather data or return data for the next
[03:42] 5 days so this could be useful if we
[03:44] wanted to build an agent that can do a
[03:45] bunch of stuff with weather data but
[03:47] let's just do current data for
[03:49] now um this is where you're going to put
[03:50] in your API key so this access token is
[03:54] just the API key like I said in here um
[03:57] go right there and paste that in so I
[04:00] already did that obviously so not going
[04:01] to do that current weather I'm going to
[04:04] go Imperial format we can select a
[04:07] location from this weather app based on
[04:09] different things but we're just going to
[04:10] stay with city name and then right here
[04:13] is this is what city we're searching for
[04:15] within the app so we're going to execute
[04:17] this previous node and as we can see
[04:20] from the set Fields node that we just
[04:22] made we have the field of city with the
[04:24] value of Chicago so if we drag this into
[04:27] City this is going to change the search
[04:30] the search in open weather map based on
[04:33] what we typed into this field so we can
[04:35] test the
[04:36] step and now we can see this data that
[04:39] came back so let's just go to table
[04:40] format so it's easier to view oops so we
[04:44] have weather clouds description we have
[04:48] the
[04:49] temperatures we have the wind we have
[04:52] all this information and then we have
[04:54] the name of the city that we search for
[04:55] so just really quickly looking at the
[04:58] data but we know that this not
[05:01] worked so the next node we need to add
[05:03] is an open AI
[05:04] node lots of options here with an open
[05:07] AI node that we can take but we're going
[05:09] to go with message a
[05:11] model okay so you're going to have to
[05:12] connect um your open AI if you haven't
[05:15] done that with a credential same exact
[05:17] thing as open
[05:19] Weather um just needs an API key so
[05:22] you'll go into open AI if you haven't
[05:23] made an account make one real quick and
[05:26] then you'll just go to your API Keys
[05:27] over here on the left create new key
[05:30] name it whatever you want and then
[05:31] create key and it will just give you the
[05:33] option to copy your key and sorry paste
[05:35] it right into here super simple all
[05:39] right so we're going to keep it as text
[05:41] message a model we're going to choose
[05:43] the model so I'm going to choose
[05:45] 40 and now we need to give this a
[05:49] message so what is this open Aon node
[05:51] going to do so let me just paste this in
[05:55] here real
[05:57] quick so what we want to do is we want
[05:58] to put the par below into a single query
[06:01] field ensure it is a string so this is
[06:05] the data that's coming back from open
[06:06] weather map and now we need to put all
[06:08] of this into one field so that the next
[06:11] node can sort of interpret it and make
[06:13] it into plain English English and so we
[06:16] have troubles with this because a lot of
[06:18] these are as you can see main for
[06:20] example is a string because it has an A
[06:23] but weather is a block or an object and
[06:25] Main is an
[06:26] object so we need to make sure that
[06:28] these are all strings so the first thing
[06:30] I'm going to do is we're going to start
[06:32] making these parameters so
[06:36] weather
[06:37] description and then all we want to do
[06:39] is drag in right here the
[06:43] description okay actually let's go let's
[06:46] make this full screen so you guys can
[06:47] see this easier so we've got the
[06:49] description and then over here it's
[06:50] saying that weather description is
[06:52] overclass clouds overcast clouds wow
[06:56] okay so we've got description what else
[06:58] do we want we want the temp and same
[07:01] thing we'll find temp over here drag
[07:03] that right in so it knows it's temp as
[07:05] you can see over here it came in as
[07:07] 62.5 okay so I'm just going to do this
[07:09] with a couple more variables here and
[07:12] then I'll see you guys in a sec okay so
[07:14] I only ended up doing three more just a
[07:16] really concise look at what the
[07:18] weather's like we've got weather
[07:19] description temp humidity wind speed and
[07:22] then what city we're in so we're going
[07:24] to go here and now we just want to test
[07:26] this step to make sure that it came out
[07:28] correctly
[07:30] Okay so we've got it
[07:32] in a simple field although it came in a
[07:36] little weird because it was called
[07:38] content but this should work
[07:41] fine it's got all the stuff we need and
[07:43] it's in a string
[07:45] so we'll be good here let's add another
[07:48] um open AI node we're going to do the
[07:50] same thing message a
[07:53] model um all this is going to be the
[07:54] same we're going to use 40 once again
[07:57] and then this time we are going to say
[08:02] convert the content field which is going
[08:06] to be this one right here so convert the
[08:09] content
[08:10] field
[08:11] um into simple
[08:15] [Music]
[08:17] English in a friendly
[08:20] [Music]
[08:22] tone we want
[08:25] to use oh sorry I cannot type today use
[08:28] emojis
[08:30] to describe the weather okay so this one
[08:34] is going to be a system prompt because
[08:36] this is telling the opening I know what
[08:38] to do we're going to add another message
[08:41] this is where we're going to drag in
[08:43] content and so this sees like what
[08:46] exactly is going on down here it sees
[08:47] the weather description everything we
[08:49] just set up last node we'll keep it as
[08:51] user and let's test the step to see what
[08:54] comes
[08:54] out so we get hey there here's the
[08:57] weather update for Chicago it's mostly
[08:58] cloudy with over overcast overcast Skies
[09:01] the temperature is around 62 blah blah
[09:03] blah so it it gave us the weather and it
[09:05] put some emojis in there it's very
[09:06] friendly um let's just throw in here
[09:09] include
[09:11] a
[09:13] joke test it
[09:17] again it's going to say looks like we're
[09:19] in for some Cloudy Skies we got a bit of
[09:21] a breeze going on too we don't fight
[09:23] skeletons why don't skeletons fight each
[09:25] other in the wind they don't have the
[09:26] guts okay we'll leave that in there just
[09:29] fun example so that threw in a joke so
[09:32] we're pretty much done here because it
[09:35] got what we needed as far as the weather
[09:37] we pared it through and now we need to
[09:39] add another set
[09:41] field because we need to communicate
[09:43] back to the agent hey we grabbed this
[09:46] information and now here it is so you
[09:49] can give it to the user that ask you the
[09:51] question in the first place so manual
[09:53] mapping once again we're setting a field
[09:56] we're going to name this one response
[09:58] it's going to be left as a string
[09:59] and then for Value we're going to grab
[10:02] content and put put that right in there
[10:05] because this is just telling us exactly
[10:07] what the agent or exactly what we just
[10:09] read right so
[10:12] awesome and now we can save
[10:14] that let's call this
[10:18] um get weather so this is our G weather
[10:21] workflow and now we can go make the
[10:23] agent so we're going to go
[10:25] back add new
[10:28] workflow um this is going to be
[10:31] the
[10:33] weather agent demo okay so first step um
[10:38] back to the triggers I was talking about
[10:40] earlier this one is going to be
[10:41] triggered by a chat message because
[10:43] we'll be talking to the agent so we've
[10:46] got this next we want to add an an AI
[10:49] agent so you can click on Advanced Ai
[10:51] and then you've got the agent right here
[10:53] so we're going to leave this as a tools
[10:54] agent because it's going to be calling
[10:56] in different tools prompts will'll take
[10:58] it from the previous node and then
[11:01] system message we will come back here in
[11:03] a sec and prompt this agent exactly what
[11:05] to
[11:06] do so the chat model we need to use open
[11:10] AI that's just the one I always go with
[11:12] and I'm going to use 40 once
[11:14] again we're going to give it a memory so
[11:18] if you remember in the example I asked
[11:20] the agent what's the capital of Florida
[11:23] and then it came back and said the
[11:24] capital of Florida and then I said can
[11:26] you get me the weather for there or
[11:28] what's the weather like there if we
[11:30] didn't put in this this buffer memory
[11:33] the agent wouldn't have remembered that
[11:34] we just asked what the capital of
[11:35] Florida was so it wouldn't know what
[11:37] there was so I can show an example of
[11:40] that near the end but this is important
[11:42] just to give the agent some context of
[11:44] what's going on and so that's what this
[11:45] means it's like context window length
[11:47] you can make it how many pass
[11:48] interactions does the model receive as
[11:52] context we're going to give it a quick
[11:54] Wikipedia tool super simple you don't
[11:56] even have to really set anything up this
[11:57] is just giving the agent the ability to
[11:59] search through
[12:00] Wikipedia and then finally we want to
[12:02] use call nadn workflow
[12:04] tool this is where all the magic happens
[12:06] because this is the tool that's going
[12:08] to we're just going to call this one
[12:13] weather once again weather so you have
[12:16] to give it a description of when to use
[12:17] this tool so very very basic call this
[12:21] tool to access current weather
[12:26] information going to go there we can
[12:29] leave this as
[12:31] database workflow from list you can
[12:33] either do from list by ID but it's super
[12:35] nice that they let you just choose from
[12:36] a list of the workflows you've made so
[12:39] we're going to use this is the one I
[12:40] just made getor
[12:42] weather and then the field to return is
[12:45] response so if you remember at the end
[12:47] we made that set field where we dragged
[12:50] in the response from that last open AI
[12:52] node and the field was called response
[12:55] so that's how it knows what to say back
[12:56] to us so we've got that there
[12:59] I'll get to go so let's actually not
[13:02] prompt this one because I want to show
[13:04] you guys what it does when we just leave
[13:05] it as helpful assistant it should be
[13:07] fine because this is a pretty um simple
[13:10] workflow but let's just go ahead and
[13:11] give it a try
[13:13] so what
[13:15] is the weather like in
[13:21] Denver we can see what's going on here
[13:23] it grabbed the weather then it talked to
[13:25] the model let's see what it said the
[13:27] weather is currently cloudy with the
[13:29] temperature of 62 blah blah blah so as
[13:31] you can see might want to wear a light
[13:33] jacket if you're heading out okay so it
[13:34] gave us the weather but it didn't give
[13:36] us the emojis that we asked for so we
[13:39] can see exactly what happened here if we
[13:40] go to all
[13:41] executions save that real
[13:43] quick we can see what happened in the
[13:45] git weather
[13:47] tool we can see exactly how the data
[13:50] moved through to see if the workflow was
[13:52] doing what we wanted it to
[13:54] do so give this a second here as it
[13:57] loads up
[13:59] right here we see oh I know exactly what
[14:03] happened exactly what I was worried of
[14:05] we didn't change this back to a variable
[14:08] so let's go back into that workflow and
[14:11] make that a variable to make sure that
[14:12] this is actually working
[14:14] correct so get
[14:18] weather now we need to change this to a
[14:20] variable so if we put this in here as
[14:24] json. query and make it an
[14:27] expression then it knows that it's going
[14:30] to
[14:31] take whatever we chat and it's going to
[14:33] put in the city
[14:35] here okay so let's save this and try
[14:39] that again now all right
[14:42] so what is weather like in
[14:49] Denver weather in Denver is currently
[14:52] clear with temperature of 69 the
[14:54] humidity is 39% okay so now let's make
[14:56] sure it's
[14:57] working is the weather like in Hawaii
[15:01] just to make sure that it's actually
[15:02] using different city names or state
[15:07] names currently experiencing light rain
[15:09] okay so it's working here here's a
[15:10] little joke to brighten your day why did
[15:12] the weather bring a ladder to work
[15:13] because it wanted to rise the occasion
[15:15] oh wow okay um so now let's test out the
[15:19] Wikipedia node so what is capital
[15:23] of Hawaii
[15:29] so the capital of Hawaii is Honolulu and
[15:32] now let me show you guys if we get rid
[15:33] of this memory buffer save
[15:37] that um what is the capital
[15:42] of
[15:43] Utah so remember earlier I was able to
[15:46] say what's the weather like there what
[15:49] is the weather like
[15:51] there and now it shouldn't yeah see can
[15:54] you please specify the location you want
[15:56] to know the weather because it can't
[15:58] remember that we just talked about
[16:00] this so um yeah let's add that back in
[16:05] here okay so I wanted to try one more
[16:07] example so I can show you guys how the
[16:09] data is moving through so let's just go
[16:12] like what is the weather
[16:15] in San
[16:24] Diego so we've got the weather in San
[16:26] Diego is currently experiencing
[16:28] scattered clouds humidity level breeze
[16:30] it's a great day to be outdoors okay so
[16:33] we're going to go into all
[16:36] executions and this is how we're able to
[16:38] see exactly what happened in that get
[16:40] weather
[16:42] tool so we can see here um the city came
[16:46] in as San Diego because it was a
[16:48] variable it came through here got the
[16:50] weather we parsed it it came out here
[16:54] and if you've noticed this content is
[16:58] not exactly the same that we got what
[17:01] the agent said to us so this is probably
[17:04] because of the way we prompted it so
[17:06] let's go back in
[17:08] here and I don't think it pulled up okay
[17:10] so the prompt right now was just you're
[17:12] a helpful assistant if we prompt it a
[17:15] little more a little heavier it'll be
[17:17] better with its response so this is not
[17:20] the way that I would recommend prompting
[17:21] especially when you get more tools you
[17:23] always want to give it good background
[17:25] good context you want to give it
[17:26] specific instructions of how to use each
[17:29] tool what the parameters in each tool
[17:31] might be but for now let's just say you
[17:34] are an
[17:37] assistant used
[17:39] to access weather information
[17:43] anywhere around the world and so what we
[17:46] want to do is make sure that it's giving
[17:48] us all those emojis and the joke that we
[17:50] asked for when we originally gave that
[17:52] open AI node instructions
[17:55] so please return
[17:59] the response from
[18:02] the get weather tool okay so we'll save
[18:08] that and see what happens actually let's
[18:10] go in here and just call it the weather
[18:13] tool since that's what we called it
[18:14] right here
[18:16] so what is
[18:18] the weather like in
[18:24] Tokyo current weather in Tokyo features
[18:26] broken clouds with a temperature of 72
[18:28] there's a Brisk Breeze with wind speeds
[18:31] around 17 okay so if you guys notice
[18:34] that's still not giving us exactly what
[18:36] would be coming out from here so let's
[18:38] just refresh this we'll get that most
[18:40] recent
[18:41] execution
[18:45] um so this is what the tool was giving
[18:48] us at the end um as you can see there's
[18:51] more emojis there's a little cloud or a
[18:53] little joke at the end about
[18:55] clouds and then here we didn't actually
[18:58] get that full we didn't get the joke we
[19:00] didn't get all the Emojis so this has to
[19:02] do with prompting okay so I finally got
[19:04] it working the way that we want it to be
[19:06] working I asked how the weather is in
[19:08] Spain hey there here's the weather
[19:09] update for Spain gives a brief update um
[19:12] it ends with a joke why did the weather
[19:13] bring an umbrella because it wanted to
[19:14] be a little shady stay comfy have a
[19:16] great day so I found that it was
[19:19] actually better to prompt the agent to
[19:21] do um the jokes and the simple English
[19:24] and the emojis in the actual agent
[19:27] prompt rather than prompt prompting it
[19:29] in the weather tool itself not sure
[19:31] exactly why that is but prompting is
[19:33] super super interesting and like I said
[19:36] this isn't the way that you really
[19:37] should be prompting a complicated agent
[19:39] so if you guys are interested in a video
[19:40] more about prompting let me know and I
[19:42] can definitely try to work on that but
[19:44] yeah that's pretty much what this agent
[19:46] is going to do like I said you have the
[19:47] ability to um ask information about
[19:49] different different countries cities
[19:51] whatever it may be and then ask about
[19:52] the weather there so it's a simple agent
[19:55] but it should open up your eyes to the
[19:57] capabilities of Agents being being able
[19:58] to call different tools being able to
[20:01] search the web for different things and
[20:02] just sort of how you can combine all of
[20:04] that into one agent or multiple agents
[20:06] that are able to call each other and
[20:08] yeah I'm sorry for sort of the
[20:10] interruptions in there in the middle or
[20:12] sort of me forgetting to do things but
[20:14] um I like to build these live so you
[20:16] guys can sort of see the way that I
[20:18] think through the flow of the data so
[20:21] I'm going to continue to make sort of
[20:22] step-by-step tutorials like this and try
[20:25] to explain everything to the best of my
[20:26] ability so if you enjoy this type of
[20:28] cont content please let me know and yeah
[20:31] that's it for now so thanks guys